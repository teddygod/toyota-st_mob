@charset "UTF-8";
img {
  width: 100%;
  height: auto; }

a {
  text-decoration: none; }

a:hover {
  text-decoration: none; }

input:focus {
  outline: none; }

.no-padding {
  padding-left: 0 !important;
  padding-right: 0 !important; }

.typical-horizontal-list, .lang-row .lang {
  list-style: none;
  display: inline-block;
  padding: 0;
  margin: 0; }
  .typical-horizontal-list > li, .lang-row .lang > li {
    display: inline-block; }

.typical-vertical-list {
  list-style: none;
  display: inline-block;
  margin: 0;
  padding: 0; }
  .typical-vertical-list > li {
    display: block;
    margin: 0; }

.additional-layer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

/* Webfont: Lato-Regular */
@font-face {
  font-family: 'LatoWeb';
  src: url("../fonts/Lato-Regular.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/Lato-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Regular.woff2") format("woff2"), url("../fonts/Lato-Regular.woff") format("woff"), url("../fonts/Lato-Regular.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility; }

/* Webfont: Lato-Light */
@font-face {
  font-family: 'LatoWebLight';
  src: url("../fonts/Lato-Light.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/Lato-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Light.woff2") format("woff2"), url("../fonts/Lato-Light.woff") format("woff"), url("../fonts/Lato-Light.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility; }

/* Webfont: Lato-Medium */
@font-face {
  font-family: 'LatoWebMedium';
  src: url("../fonts/Lato-Medium.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/Lato-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Medium.woff2") format("woff2"), url("../fonts/Lato-Medium.woff") format("woff"), url("../fonts/Lato-Medium.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility; }

/* Webfont: Lato-Semibold */
@font-face {
  font-family: 'LatoWebSemibold';
  src: url("../fonts/Lato-Semibold.eot");
  /* IE9 Compat Modes */
  src: url("../fonts/Lato-Semibold.eot?#iefix") format("embedded-opentype"), url("../fonts/Lato-Semibold.woff2") format("woff2"), url("../fonts/Lato-Semibold.woff") format("woff"), url("../fonts/Lato-Semibold.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility; }

@font-face {
  font-family: "g-icon";
  src: url("../fonts/g-icon/g-icon.eot");
  src: url("../fonts/g-icon/g-icon.eot?#iefix") format("embedded-opentype"), url("../fonts/g-icon/g-icon.woff") format("woff"), url("../fonts/g-icon/g-icon.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

.g-icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'g-icon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.g-icon_1:before {
  content: "\e900"; }

.g-icon_2:before {
  content: "\e901"; }

.g-icon_3:before {
  content: "\e902"; }

.g-icon_4:before {
  content: "\e903"; }

.g-icon_5:before {
  content: "\e904"; }

.g-icon_6:before {
  content: "\e905"; }

.g-icon_7:before {
  content: "\e906"; }

.g-icon_8:before {
  content: "\e907"; }

.g-icon_9:before {
  content: "\e908"; }

.g-icon_10:before {
  content: "\e909"; }

.g-icon_11:before {
  content: "\e90a"; }

.g-icon_12:before {
  content: "\e90b"; }

.g-icon_13:before {
  content: "\e90c"; }

.g-icon_14:before {
  content: "\e90d"; }

.g-icon_15:before {
  content: "\e90e"; }

.g-icon_16:before {
  content: "\e90f"; }

.g-icon_17:before {
  content: "\e910"; }

.g-icon_18:before {
  content: "\e911"; }

.g-icon_19:before {
  content: "\e912"; }

.g-icon_20:before {
  content: "\e913"; }

.g-icon_21:before {
  content: "\e914"; }

.g-icon_22:before {
  content: "\e915"; }

.g-icon_23:before {
  content: "\e916"; }

.g-icon_24:before {
  content: "\e917"; }

.g-icon_25:before {
  content: "\e918"; }

.g-icon_26:before {
  content: "\e919"; }

.g-icon_27:before {
  content: "\e91a"; }

.g-icon_28:before {
  content: "\e91b"; }

.g-icon_29:before {
  content: "\e91c"; }

/* === Base Font scheme === */
.fontA {
  font-size: 1.091rem;
  font-family: 'LatoWebLight';
  line-height: 1.7; }

.fontAA {
  font-size: 0.4848rem;
  line-height: 1.5625; }

.fontAB {
  font-size: 0.6061rem;
  line-height: 1.5625; }

.fontAC {
  font-size: 0.7879rem;
  line-height: 1.2; }

.fontAN {
  font-size: 1.394rem;
  line-height: 1.2; }

.fontB {
  font-size: 0.8485rem;
  line-height: 1.2; }

.fontC {
  font-size: 0.9394rem;
  font-family: 'LatoWebLight';
  line-height: 1.2; }

.fontCE {
  font-size: 1.121rem;
  font-family: 'LatoWebLight';
  line-height: 1.2; }

.fontCD {
  font-size: 0.7273rem;
  line-height: 1.2; }

.fontCF {
  font-size: 0.6667rem;
  font-family: 'LatoWebLight';
  line-height: 1.2; }

.fontD {
  font-size: 1.424rem;
  line-height: 1.2; }

.fontE {
  font-size: 1.091rem;
  line-height: 1.2; }

.fontTE {
  font-size: 1.303rem;
  line-height: 1.2; }

.fontFE {
  font-size: 0.9091rem;
  line-height: 1.2; }

.fontF {
  font-size: 0.9697rem;
  line-height: 1.2; }

.fontG {
  font-size: 1.515rem;
  line-height: 1.2; }

.fontH {
  font-size: 1.758rem;
  line-height: 1.2; }

/*@media only screen and (max-width: 768px) {
  .fontA {
    font-size: 16px;
    line-height: 1.875; }

  .fontAA {
    font-size: 16px;
    line-height: 1.5625; }

  .fontAB {
    font-size: 20px;
    line-height: 1.5625; }

  .fontB {
    font-size: 28px;
    line-height: 1.2; }

  .fontC {
    font-size: 31px;
    line-height: 1.2; }

  .fontD {
    font-size: 26px;
    line-height: 1.2; }

  .fontE {
    font-size: 36px;
    line-height: 1.2; }
  .fontTE {
    font-size: 43px;
    line-height: 1.2; }
  .fontFE {
    font-size: 30px;
    line-height: 1.2; }

  .fontF {
    font-size: 32px;
    line-height: 1.2; } }*/
button {
  display: inline-block;
  vertical-align: middle;
  margin: 0rem;
  border: none;
  background: none; }
  button span {
    display: block; }

/* ====================== lines button ==================================================*/
.lines-button {
  padding: 18px 22px;
  transition: .3s;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border-radius: 12.57143px;
  /* */ }
  @media all and (max-width: 460px) {
    .lines-button {
      padding: 18px; } }
  .lines-button:focus, .lines-button:active {
    outline: 0;
    border: 0; }
  .lines-button:hover {
    opacity: 1; }
  .lines-button:active {
    transition: 0; }

.lines {
  display: inline-block;
  width: 88px;
  height: 3px;
  background: #C70923;
  transition: 0.3s;
  position: relative;
  top: -4px; }
  @media all and (max-width: 768px) {
    .lines {
      top: 4px;
      width: 62px; } }
  @media all and (max-width: 680px) {
    .lines {
      top: 8px;
      width: 50px; } }
  @media all and (max-width: 460px) {
    .lines {
      top: 0;
      width: 30px; } }
  .lines:before, .lines:after {
    display: inline-block;
    width: 88px;
    height: 3px;
    background: #C70923;
    transition: 0.3s;
    position: absolute;
    left: 0;
    content: '';
    -webkit-transform-origin: 6.28571px center;
    -ms-transform-origin: 6.28571px center;
    transform-origin: 6.28571px center; }
    @media all and (max-width: 768px) {
      .lines:before, .lines:after {
        width: 62px; } }
    @media all and (max-width: 680px) {
      .lines:before, .lines:after {
        width: 50px; } }
    @media all and (max-width: 460px) {
      .lines:before, .lines:after {
        width: 30px; } }
  .lines:before {
    top: 22px; }
    @media all and (max-width: 768px) {
      .lines:before {
        top: 16px; } }
    @media all and (max-width: 680px) {
      .lines:before {
        top: 13px; } }
    @media all and (max-width: 460px) {
      .lines:before {
        top: 10px; } }
  .lines:after {
    top: -21px; }
    @media all and (max-width: 768px) {
      .lines:after {
        top: -15px; } }
    @media all and (max-width: 680px) {
      .lines:after {
        top: -13px; } }
    @media all and (max-width: 460px) {
      .lines:after {
        top: -11px; } }

.lines-button:hover .lines:before {
  top: 25.14286px; }
  @media all and (max-width: 768px) {
    .lines-button:hover .lines:before {
      top: 10px; } }
  @media all and (max-width: 460px) {
    .lines-button:hover .lines:before {
      top: 10px; } }

.lines-button:hover .lines:after {
  top: -25.14286px; }
  @media all and (max-width: 768px) {
    .lines-button:hover .lines:after {
      top: -11px; } }
  @media all and (max-width: 460px) {
    .lines-button:hover .lines:after {
      top: -11px; } }

.lines-button.close {
  -webkit-transform: scale3d(0.8, 0.8, 0.8);
  transform: scale3d(0.8, 0.8, 0.8); }

.lines-button.arrow.close .lines:before, .lines-button.arrow.close .lines:after {
  top: 0;
  width: 48.88889px; }

.lines-button.arrow.close .lines:before {
  -webkit-transform: rotate3d(0, 0, 1, 40deg);
  transform: rotate3d(0, 0, 1, 40deg); }

.lines-button.arrow.close .lines:after {
  -webkit-transform: rotate3d(0, 0, 1, -40deg);
  transform: rotate3d(0, 0, 1, -40deg); }

.lines-button.arrow-up.close {
  -webkit-transform: scale3d(0.8, 0.8, 0.8) rotate3d(0, 0, 1, 90deg);
  transform: scale3d(0.8, 0.8, 0.8) rotate3d(0, 0, 1, 90deg); }

.lines-button.minus.close .lines:before, .lines-button.minus.close .lines:after {
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  top: 0;
  width: 88px; }
  @media all and (max-width: 768px) {
    .lines-button.minus.close .lines:before, .lines-button.minus.close .lines:after {
      width: 62px; } }
  @media all and (max-width: 680px) {
    .lines-button.minus.close .lines:before, .lines-button.minus.close .lines:after {
      width: 50px; } }
  @media all and (max-width: 460px) {
    .lines-button.minus.close .lines:before, .lines-button.minus.close .lines:after {
      width: 30px; } }

.lines-button.x.close .lines {
  background: transparent; }
  .lines-button.x.close .lines:before, .lines-button.x.close .lines:after {
    -webkit-transform-origin: 50% 50%;
    -ms-transform-origin: 50% 50%;
    transform-origin: 50% 50%;
    top: 0;
    width: 88px; }
  .lines-button.x.close .lines:before {
    -webkit-transform: rotate3d(0, 0, 1, 45deg);
    transform: rotate3d(0, 0, 1, 45deg); }
  .lines-button.x.close .lines:after {
    -webkit-transform: rotate3d(0, 0, 1, -45deg);
    transform: rotate3d(0, 0, 1, -45deg); }

.lines-button.x2 .lines {
  transition: background .3s .5s ease; }
  .lines-button.x2 .lines:before, .lines-button.x2 .lines:after {
    -webkit-transform-origin: 50% 50%;
    -ms-transform-origin: 50% 50%;
    transform-origin: 50% 50%;
    transition: top .3s .6s ease, -webkit-transform .3s ease;
    transition: top .3s .6s ease, transform .3s ease;
    transition: top .3s .6s ease, transform .3s ease, -webkit-transform .3s ease; }

.lines-button.x2.close .lines {
  transition: background .3s 0s ease;
  background: transparent; }
  .lines-button.x2.close .lines:before, .lines-button.x2.close .lines:after {
    transition: top .3s ease, -webkit-transform .3s .5s ease;
    transition: top .3s ease, transform .3s .5s ease;
    transition: top .3s ease, transform .3s .5s ease, -webkit-transform .3s .5s ease;
    top: 0;
    width: 88px; }
    @media all and (max-width: 768px) {
      .lines-button.x2.close .lines:before, .lines-button.x2.close .lines:after {
        width: 62px; } }
    @media all and (max-width: 680px) {
      .lines-button.x2.close .lines:before, .lines-button.x2.close .lines:after {
        width: 50px; } }
    @media all and (max-width: 460px) {
      .lines-button.x2.close .lines:before, .lines-button.x2.close .lines:after {
        width: 30px; } }
  .lines-button.x2.close .lines:before {
    -webkit-transform: rotate3d(0, 0, 1, 45deg);
    transform: rotate3d(0, 0, 1, 45deg); }
  .lines-button.x2.close .lines:after {
    -webkit-transform: rotate3d(0, 0, 1, -45deg);
    transform: rotate3d(0, 0, 1, -45deg); }

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

ol, ul {
  list-style: none; }

.popup_on {
  position: relative;
  background: url(../images/test.jpg) top center no-repeat;
  opacity: 0.7;
  height: 5000px; }

html {
  width: 100%;
  font-size: 33px;
  font-family: 'LatoWeb', "Open Sans", sans-serif;
  font-weight: 300;
  margin: 0;
  padding: 0; }
  @media all and (max-width: 768px) {
    html {
      font-size: 20px; } }
  @media all and (max-width: 680px) {
    html {
      font-size: 15px; } }
  @media all and (max-width: 580px) {
    html {
      font-size: 12px; } }
  @media all and (max-width: 460px) {
    html {
      font-size: 10px; } }

body {
  color: #232323;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; }

.wrapper {
  margin: 0 auto;
  padding: 0;
  width: 100%;
  position: relative; }

/*.page-content {
  padding: 77px 10px 50px;
  max-width: 100%;
  width: 700px;
  overflow: hidden;
  margin: 0 auto;
}*/
div, section, header, footer, nav {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

a {
  text-decoration: none; }

.a-no-decoration {
  text-decoration: none;
  color: black; }

#consultants {
  height: auto !important; }

.under-lined:after {
  content: '';
  display: block;
  width: 50px;
  height: 4px;
  margin-top: .2975rem;
  background-color: #c70923; }

.under-centered:after {
  margin-left: auto;
  margin-right: auto; }

.under-line {
  position: relative;
  width: 50px;
  height: 4px;
  margin-top: .2975rem;
  background-color: #c70923;
  -webkit-transition: all .7s;
  transition: all .7s; }
  @media all and (max-width: 768px) {
    .under-line {
      width: 45px; } }
  @media all and (max-width: 580px) {
    .under-line {
      width: 40px; } }
  @media all and (max-width: 460px) {
    .under-line {
      width: 30px; } }

.clearfix:after {
  content: '';
  display: table;
  clear: both; }

.a-no-decoration {
  text-decoration: none;
  color: #232323; }
  .a-no-decoration:hover {
    color: #232323; }

/*.slider img{
padding-top: 180px;
}

.footer {
background-color: rgba(0, 0, 0, 0.8);
position: relative;
height: 100%;
}*/
.header {
  position: fixed;
  width: 100%;
  left: 0;
  top: 0;
  z-index: 1000;
  background: white;
  border-bottom: 1px solid #e4e4e4; }
  .header-row {
    background: #c70923;
    padding: 0 0;
    width: 100%;
    height: 86px; }
    @media all and (max-width: 768px) {
      .header-row {
        height: 50px; } }
    @media all and (max-width: 460px) {
      .header-row {
        height: 40px; } }
  .header-table {
    padding: 0 36px;
    width: 100%;
    height: 86px;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
    .header-table a {
      color: white;
      text-decoration: none; }
    @media all and (max-width: 768px) {
      .header-table {
        padding: 0 30px;
        height: 50px; } }
    @media all and (max-width: 460px) {
      .header-table {
        padding: 0 12px;
        height: 40px; } }
  .header-content {
    padding: 0 36px;
    width: 100%;
    height: 105px;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
    @media all and (max-width: 768px) {
      .header-content {
        height: 50px;
        padding: 0 30px; } }
    @media all and (max-width: 460px) {
      .header-content {
        height: 40px;
        padding: 0 12px; } }
  .header-block {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%; }
    .header-block:last-child {
      text-align: right; }
    .header-block .down-button, .header-block .phone-number {
      display: inline-block; }
    .header-block i {
      margin-right: .9rem; }
    .header-block .phone-number i {
      position: relative;
      left: 22px; }
      @media all and (max-width: 768px) {
        .header-block .phone-number i {
          left: 8px; } }
    .header-block .down-button {
      margin-left: .8rem;
      margin-right: .3rem; }
  .header-block_b {
    display: inline-block; }
    .header-block_b:last-child {
      display: block;
      width: 85px;
      margin-right: 1rem; }
      @media all and (max-width: 768px) {
        .header-block_b:last-child {
          width: 30px;
          height: 15px; } }
      @media all and (max-width: 680px) {
        .header-block_b:last-child {
          width: 30px;
          height: 15px; } }
      @media all and (max-width: 580px) {
        .header-block_b:last-child {
          width: 30px;
          height: 15px; } }
      @media all and (max-width: 460px) {
        .header-block_b:last-child {
          width: 30px; } }

a {
  color: #c70923;
  text-decoration: none;
  background-color: transparent; }

.down-arrow {
  width: 30px;
  height: 15px;
  cursor: pointer;
  transition: top .3s ease, -webkit-transform .3s .1s ease;
  transition: top .3s ease, transform .3s .1s ease;
  transition: top .3s ease, transform .3s .1s ease, -webkit-transform .3s .1s ease;
  -webkit-transform: rotate3d(0, 0, 1, 0deg);
  transform: rotate3d(0, 0, 1, 0deg); }
  .down-arrow.top-arr {
    -webkit-transform: rotate3d(0, 0, 1, 180deg);
    transform: rotate3d(0, 0, 1, 180deg); }
  @media all and (max-width: 768px) {
    .down-arrow {
      width: 30px;
      height: 15px; } }
  @media all and (max-width: 680px) {
    .down-arrow {
      width: 30px;
      height: 15px; } }
  @media all and (max-width: 540px) {
    .down-arrow {
      width: 30px;
      height: 15px; } }
  @media all and (max-width: 460px) {
    .down-arrow {
      width: 12px;
      height: 9px; } }

.hidden-fone {
  display: block;
  position: absolute;
  max-width: 335px;
  background: #c70923;
  top: 60px;
  padding-right: 59px;
  padding-left: 38px;
  padding-bottom: 3px;
  z-index: 99;
  transition: display .3s ease, -webkit-transform .3s .1s ease;
  transition: display .3s ease, transform .3s .1s ease;
  transition: display .3s ease, transform .3s .1s ease, -webkit-transform .3s .1s ease; }
  @media all and (max-width: 768px) {
    .hidden-fone {
      max-width: 227px;
      top: 40px; } }
  @media all and (max-width: 668px) {
    .hidden-fone {
      max-width: 177px;
      top: 35px;
      padding-right: 51px;
      padding-left: 20px; } }
  @media all and (max-width: 460px) {
    .hidden-fone {
      max-width: 107px;
      top: 29px;
      padding-right: 23px;
      padding-left: 13px; } }

.logo {
  display: inline-block;
  height: 70px;
  padding: 5px 0; }
  @media all and (max-width: 768px) {
    .logo {
      width: 120px;
      height: 50px; } }
  @media all and (max-width: 460px) {
    .logo {
      width: 105px;
      height: 32px; } }
  .logo img {
    height: 100%;
    width: auto; }

.mob-burger {
  height: 42px;
  width: 100%;
  float: right;
  position: relative; }
  .mob-burger .stick, .mob-burger:before, .mob-burger:after {
    width: 100%;
    display: block;
    height: 3px;
    background: #C70923;
    position: absolute;
    content: '';
    left: 0;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px; }
  .mob-burger:before {
    top: 0; }
  .mob-burger .stick {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%); }
  .mob-burger:after {
    bottom: 0; }

.header__mobile-btn {
  display: block;
  position: absolute;
  right: 23px;
  top: 63%;
  margin-top: -28px; }
  @media all and (max-width: 460px) {
    .header__mobile-btn {
      margin-top: -14px;
      right: 0; } }

.header__mobile-menu {
  display: none;
  background: #C70923;
  color: #232323;
  top: 100%;
  position: absolute;
  width: 100%;
  height: calc(100vh - 100%);
  overflow-y: scroll;
  overflow-x: hidden;
  z-index: 11;
  left: 0; }
  .header__mobile-menu-inner {
    padding-bottom: 40px; }
    .header__mobile-menu-inner .main-menu_mobile-menu .main-menu__list {
      list-style-type: none;
      padding: 0;
      margin: 0;
      font-size: 0; }
      .header__mobile-menu-inner .main-menu_mobile-menu .main-menu__list:last-child {
        background: #C70923;
        color: #fff; }

.mob-menu {
  position: fixed;
  z-index: 950;
  display: none;
  left: 0;
  top: 77px;
  width: 100%;
  overflow-y: scroll;
  overflow-x: hidden;
  background: white;
  font-weight: 400;
  padding-bottom: 80px; }

.mob-menu-block {
  position: relative;
  padding: 0 40px;
  background: white;
  border-bottom: 1px solid #e4e4e4;
  -webkit-transition: all 0.4s ease;
  -moz-transition: all 0.4s ease;
  transition: all 0.4s ease; }
  .mob-menu-block.active-block {
    color: #18b4f1; }
  .mob-menu-block .main-link {
    display: inline-block; }
    .mob-menu-block .main-link span {
      color: black;
      text-transform: uppercase;
      font-size: 22px;
      line-height: 60px;
      vertical-align: middle;
      display: inline-block; }

.lang-row {
  padding: 30px 40px; }
  .lang-row .lang li {
    margin-right: -4px; }
    .lang-row .lang li:last-child {
      display: none; }
  .lang-row .lang a {
    display: inline-block;
    font-size: 18px;
    line-height: 50px;
    width: 60px;
    text-align: center;
    color: black; }
    .lang-row .lang a:hover {
      color: black; }
    .lang-row .lang a.active-lang {
      color: white;
      background: #0079c1; }
      .lang-row .lang a.active-lang:hover {
        color: white; }

.social {
  display: table;
  width: 100%;
  height: 54px;
  padding-left: 0;
  margin: 0; }
  .social li {
    display: table-cell;
    width: 25%;
    height: 100%;
    vertical-align: middle;
    text-align: center; }
    .social li:first-child {
      background: #b0cc49; }
    .social li:nth-child(2) {
      background: #f05b72; }
    .social li:nth-child(3) {
      background: #00aef0; }
    .social li:last-child {
      background: #f58220; }
  .social a {
    display: inline-block;
    font-weight: 400;
    font-size: 26px;
    padding: 6px 13px 0;
    color: white; }
    .social a:hover {
      color: white; }

.main-menu_mobile-menu .main-menu__list:first-child {
  background: #FFF; }
  .main-menu_mobile-menu .main-menu__list:first-child .main-menu__link {
    color: #232323; }
    .main-menu_mobile-menu .main-menu__list:first-child .main-menu__link:hover {
      color: #C70923; }

.main-menu_mobile-menu .main-menu__list:last-child {
  background: #C70923; }
  .main-menu_mobile-menu .main-menu__list:last-child .main-menu__link {
    color: #fff; }
    .main-menu_mobile-menu .main-menu__list:last-child .main-menu__link:hover {
      color: #232323; }

.main-menu_mobile-menu .main-menu__item {
  display: block;
  border-bottom: 1px solid #B2B2B2; }

.main-menu_mobile-menu .main-menu__link {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: left;
  font-weight: 100;
  font-size: 21px;
  line-height: 1; }
  .main-menu_mobile-menu .main-menu__link img {
    width: 2rem;
    margin-right: .5rem; }
  @media all and (max-width: 768px) {
    .main-menu_mobile-menu .main-menu__link {
      font-size: 19px;
      line-height: 2.1rem; } }
  @media all and (max-width: 460px) {
    .main-menu_mobile-menu .main-menu__link {
      font-size: 15px;
      line-height: 2; } }

.main-menu__list {
  list-style-type: none;
  padding: 0;
  margin: 0;
  font-size: 0; }

.main-menu__item {
  display: inline-block;
  vertical-align: top;
  position: relative;
  padding: .4rem 2.2rem;
  margin: 0 -1rem; }

.main-menu__link {
  position: relative;
  font-size: 0.63636rem;
  text-decoration: none;
  display: block;
  text-align: center;
  width: 100%;
  color: #232323;
  overflow: hidden;
  transition: all 0.4s; }
  .main-menu__link:hover {
    color: #C70923; }

.main-menu__link-text {
  display: inline-block;
  line-height: 1.2;
  text-align: left;
  position: relative;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s; }

/*============END .main-menu  ================*/
/*============BEGIN .search-form ==============*/
.search-form {
  font-size: 0;
  position: relative; }
  .search-form_mobile-menu {
    position: relative; }
    .search-form_mobile-menu .search-form__input {
      background: transparent; }
    .search-form_mobile-menu .input-search {
      background: transparent; }
    .search-form_mobile-menu .search-form__group {
      display: inline-block;
      vertical-align: top;
      width: 100%; }
    .search-form_mobile-menu .search-form__label {
      font-size: 1.576rem;
      color: #fff;
      display: inline-block;
      position: absolute;
      top: 50%;
      left: 0;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%); }
    .search-form_mobile-menu .search-form__input {
      display: block;
      position: relative; }
    .search-form_mobile-menu .input-search {
      background: #C70923;
      display: block;
      width: 100%;
      color: #fff;
      font-size: 21px;
      border-bottom: 1px solid #B2B2B2;
      outline: 0;
      padding: 1rem 0; }
      @media all and (max-width: 768px) {
        .search-form_mobile-menu .input-search {
          font-size: 19px; } }
      @media all and (max-width: 460px) {
        .search-form_mobile-menu .input-search {
          font-size: 15px; } }
      .search-form_mobile-menu .input-search::-webkit-input-placeholder {
        color: #fff;
        opacity: 1; }
      .search-form_mobile-menu .input-search::-moz-placeholder {
        color: #fff;
        opacity: 1; }
      @media all and (max-width: 1024px) {
        .search-form_mobile-menu .input-search {
          text-indent: 3.8rem; } }
    .search-form_mobile-menu .search-form__btn {
      display: inline-block;
      padding: 0;
      outline: 0;
      border: 0;
      position: absolute;
      z-index: 1;
      top: 50%;
      margin-top: -.5rem;
      left: 1.3rem; }
      .search-form_mobile-menu .search-form__btn span {
        font-size: 1.576rem;
        color: #fff;
        line-height: 1;
        padding-top: 1rem; }
      .search-form_mobile-menu .search-form__btn:hover span {
        color: #232323; }

.search-form__group {
  display: inline-block;
  vertical-align: top;
  width: 45%; }

.search-form__label {
  font-size: 0.66667rem;
  color: #fff;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 0;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%); }

.search-form__group_select {
  width: 55%;
  padding-left: 9.375rem;
  padding-right: 2.25rem;
  position: relative; }

.on_mobile {
  display: none; }
  @media all and (max-width: 1024px) {
    .on_mobile {
      display: block; } }

.search-form__input {
  display: block;
  position: relative; }

.input-search {
  display: block;
  width: 100%;
  color: #232323;
  font-size: 0.66667rem;
  border: 0px solid #D7DDE2;
  outline: 0;
  padding: 0.4rem; }

.search-form__btn {
  display: inline-block;
  padding: 0;
  outline: 0;
  border: 0;
  position: absolute;
  top: 50%;
  right: 0.9375rem;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%); }
  .search-form__btn span {
    font-size: 0.54545rem;
    color: #fff;
    line-height: 1; }
  .search-form__btn:hover span {
    color: #232323; }

.lang-list {
  display: none;
  list-style-type: none;
  padding: 0;
  margin: 0;
  position: absolute;
  left: 0;
  top: 100%;
  width: 100%;
  height: 100%;
  z-index: 2;
  border-bottom: 1px solid #B2B2B2; }
  .lang-list .lang-select__link {
    text-decoration: none; }
  .lang-list .lang-select__link:hover {
    text-decoration: underline;
    -webkit-text-decoration-color: #000;
    text-decoration-color: #000; }
  .lang-list_mobile-menu {
    position: static;
    display: block;
    top: auto;
    font-size: 0;
    text-align: left;
    padding: .85rem 3.8rem; }
    @media all and (max-width: 768px) {
      .lang-list_mobile-menu {
        padding: .65rem 3.8rem; } }
    .lang-list_mobile-menu .lang-list__item {
      display: inline-block;
      vertical-align: top;
      width: auto;
      margin: 0 40px 0 0;
      border: 0; }
      @media all and (max-width: 460px) {
        .lang-list_mobile-menu .lang-list__item {
          margin-right: 15px; } }
      .lang-list_mobile-menu .lang-list__item.active .lang-select__link {
        color: #fff;
        text-decoration: underline; }
    .lang-list_mobile-menu .lang-select__link {
      display: inline-block;
      font-size: 21px;
      padding: 5px 0;
      color: #fff; }
      @media all and (max-width: 768px) {
        .lang-list_mobile-menu .lang-select__link {
          font-size: 19px; } }
      @media all and (max-width: 460px) {
        .lang-list_mobile-menu .lang-select__link {
          font-size: 15px; } }
      .lang-list_mobile-menu .lang-select__link:hover {
        background: transparent;
        color: #232323; }

.lang-list__item {
  display: table;
  position: relative;
  height: 100%;
  width: 100%;
  z-index: 0; }

.soc-list {
  display: none;
  list-style-type: none;
  padding: 0;
  margin: 0;
  position: absolute;
  left: 0;
  top: 100%;
  width: 100%;
  height: 100%;
  z-index: 2;
  border-bottom: 0px solid #B2B2B2; }
  .soc-list .soc-select__link {
    text-decoration: none; }
  .soc-list .soc-select__link:hover {
    text-decoration: underline;
    -webkit-text-decoration-color: #000;
    text-decoration-color: #000; }
  .soc-list_mobile-menu {
    position: static;
    display: block;
    top: auto;
    font-size: 0;
    text-align: left;
    padding: .85rem 3.8rem; }
    @media all and (max-width: 768px) {
      .soc-list_mobile-menu {
        padding: .65rem 3.8rem; } }
    .soc-list_mobile-menu .soc-list__item {
      display: inline-block;
      vertical-align: top;
      width: auto;
      margin: 0 40px 0 0;
      border: 0; }
      @media all and (max-width: 768px) {
        .soc-list_mobile-menu .soc-list__item {
          font-size: 19px; } }
      @media all and (max-width: 460px) {
        .soc-list_mobile-menu .soc-list__item {
          margin-right: 15px; } }
      .soc-list_mobile-menu .soc-list__item.active .soc-select__link {
        color: #fff;
        text-decoration: underline; }
    .soc-list_mobile-menu .soc-select__link {
      display: inline-block;
      font-size: 1.515rem;
      padding: 5px 0;
      color: #fff; }
      .soc-list_mobile-menu .soc-select__link:hover {
        background: transparent;
        color: #232323; }

.soc-list__item {
  display: table;
  position: relative;
  height: 100%;
  width: 100%;
  z-index: 0; }

.slider {
  max-width: 100%;
  padding: 0 0 0.8rem;
  width: 100%;
  overflow: hidden;
  margin: 0 auto;
  text-align: center; }
  @media all and (max-width: 768px) {
    .slider {
      padding: 0 0 0.8rem; } }
  @media all and (max-width: 460px) {
    .slider {
      padding-top: 0; } }

.brands-pagination {
  width: 100%; }

.brands-slider {
  overflow: hidden;
  /*:after {
    content: '';
    display: block;
    position: absolute;
    top: 0px;
    left: calc(50% - 9px);
    width: 0;
    height: 0;
    border: 9px solid transparent;
    border-top-color: #c70923;
    -webkit-transition: opacity .3s;
    transition: opacity .3s; }*/ }
  .brands-slider .wrap.wider {
    position: relative; }
  .brands-slider .label {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 10;
    width: 88px;
    right: 4.5%; }
    @media all and (max-width: 768px) {
      .brands-slider .label {
        width: 60px; } }
    @media all and (max-width: 460px) {
      .brands-slider .label {
        width: 24px;
        right: 5.5%; } }

.slider-page img {
  width: 100%;
  height: auto; }

.brands-slider {
  overflow: hidden; }
  .brands-slider .swiper-slide {
    text-align: center;
    width: 100%; }
    .brands-slider .swiper-slide .brands-column {
      width: 29.5%;
      display: inline-block; }
      .brands-slider .swiper-slide .brands-column img {
        padding-bottom: 15%; }
      .brands-slider .swiper-slide .brands-column:first-child {
        float: left; }
      .brands-slider .swiper-slide .brands-column:last-child {
        float: right; }

.brands-pagination {
  height: 50px;
  padding-bottom: 40px;
  text-align: center; }
  @media all and (max-width: 480px) {
    .brands-pagination {
      height: 70px;
      padding-bottom: 0; } }
  .brands-pagination .swiper-pagination-bullet {
    width: 20px;
    height: 20px;
    margin: 3px 27px 0 0;
    border: 0px solid #2fabe1;
    background: white;
    -webkit-transition: background 0.3s ease;
    -moz-transition: background 0.3s ease;
    transition: background 0.3s ease;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
    opacity: 1;
    vertical-align: top; }
    @media all and (max-width: 680px) {
      .brands-pagination .swiper-pagination-bullet {
        width: 15px;
        height: 15px;
        margin: 3px 16px 0 0; } }
    @media all and (max-width: 460px) {
      .brands-pagination .swiper-pagination-bullet {
        width: 10px;
        height: 10px;
        margin: 3px 12px 0 0; } }
    .brands-pagination .swiper-pagination-bullet:last-child {
      margin-right: 0; }
    .brands-pagination .swiper-pagination-bullet.swiper-pagination-bullet-active {
      background: #C70923; }

/* === Main layout === */
.main {
  padding-bottom: 730px; }
  @media all and (max-width: 768px) {
    .main {
      padding-bottom: 490px; } }
  @media all and (max-width: 680px) {
    .main {
      padding-bottom: 490px; } }
  @media all and (max-width: 480px) {
    .main {
      padding-bottom: 280px; } }

.model-row {
  display: inline-block;
  text-align: center;
  padding-top: 1.42rem;
  padding-bottom: 0; }
  .model-row h2 {
    margin: 0; }

.cars-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  padding-top: .857rem; }
  .cars-list .car-item {
    width: 42%;
    float: left;
    margin-right: 1.85714%;
    padding-bottom: .25rem;
    text-align: center;
    cursor: pointer;
    height: 10.8rem; }
    @media screen and (max-width: 768px) {
      .cars-list .car-item {
        width: 45%;
        height: 13.5rem; } }
    @media all and (max-width: 680px) {
      .cars-list .car-item {
        height: 15.5rem; } }
    @media all and (max-width: 460px) {
      .cars-list .car-item {
        height: 14rem; } }
    @media all and (max-width: 360px) {
      .cars-list .car-item {
        height: 12rem; } }
    .cars-list .car-item .sticker {
      top: 41%; }
    .cars-list .car-item .short-descr .container {
      width: 40%; }
    .cars-list .car-item:hover .hover-box {
      opacity: 1; }
    .cars-list .car-item .hover-box {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: calc(100% - 4px);
      background-color: rgba(199, 9, 35, 0.92);
      font-family: "LatoWebLight";
      color: #fff;
      text-align: left;
      opacity: 0;
      -webkit-transition: opacity .3s;
      transition: opacity .3s; }
      .cars-list .car-item .hover-box .vertical {
        position: absolute;
        width: 100%;
        top: 50%;
        left: 0;
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
        padding: 0 15px; }
      .cars-list .car-item .hover-box .hover-title {
        padding-bottom: 1rem; }
      .cars-list .car-item .hover-box .hover-title p {
        font-family: "LatoWebLight";
        text-transform: uppercase;
        text-align: center; }
      .cars-list .car-item .hover-box ul {
        -webkit-columns: 2;
        -moz-columns: 2;
        columns: 2; }
      .cars-list .car-item .hover-box li {
        font-size: 12px;
        line-height: 1.875; }
      .cars-list .car-item .hover-box li:before {
        content: '• '; }
      .cars-list .car-item .hover-box span {
        display: inline-block;
        font-size: 0.6061rem;
        line-height: 1.875rem;
        padding-top: 9px; }
        @media all and (max-width: 460px) {
          .cars-list .car-item .hover-box span {
            line-height: 0.975rem; } }
  .cars-list .car-title {
    position: relative;
    transition: color .2s;
    top: -.4rem; }
    .cars-list .car-title p {
      display: inline-block;
      padding: 0 1.375rem;
      text-transform: uppercase;
      background-color: #fff; }
  .cars-list .car-title:before {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: #d2d2d2;
    z-index: -1; }
  .cars-list .car-price p, .cars-list .car-price span {
    padding-top: 0;
    margin-top: -0.17rem;
    font-family: "LatoWebLight"; }

.car-item {
  position: relative; }

.car-item:hover .hover-box {
  opacity: 1; }

.hover-box {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: calc(100% - 1.2em - 4px);
  background-color: rgba(199, 9, 35, 0.95);
  font-family: "LatoWebLight";
  color: #fff;
  text-align: left;
  opacity: 0;
  -webkit-transition: opacity .3s;
  transition: opacity .3s; }

.hover-box .vertical {
  position: absolute;
  width: 100%;
  top: 50%;
  left: 0;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding: 0 15px; }

.hover-box .hover-title {
  padding-bottom: 1rem; }

.hover-box .hover-title p {
  font-family: "LatoWebLight";
  text-transform: uppercase;
  text-align: center; }

.hover-box ul {
  -webkit-columns: 2;
  -moz-columns: 2;
  columns: 2; }

.hover-box li {
  font-size: 12px;
  line-height: 1.875; }

@media screen and (max-width: 1280px) {
  .hover-box li {
    line-height: 1.25; } }

.hover-box li:before {
  content: '• '; }

.hover-box span {
  font-family: "LatoWebLight";
  font-size: 12px;
  line-height: 1.875rem; }

/* === Ask module === */
.section-ask {
  height: 20.833333333333333333333333333333vw;
  max-height: 400px;
  min-height: 300px;
  background: transparent url("../img/ask-bg.jpg") center no-repeat;
  background-size: contain; }
  @media only screen and (max-width: 960px) {
    .section-ask .section-ask {
      background-size: cover; } }
  @media all and (max-width: 460px) {
    .section-ask {
      min-height: 100px; } }
  .section-ask .wrap {
    position: relative;
    height: 100%; }
  .section-ask .title {
    color: #000;
    -webkit-transform: translateX(-25%);
    -ms-transform: translateX(-25%);
    transform: translateX(-25%);
    opacity: 0;
    -webkit-transition: all .5s;
    transition: all .5s; }
  .section-ask .btn {
    position: relative;
    overflow: hidden;
    border: 1px solid #c70923;
    transition: background-color .3s; }
  .section-ask .btn:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    box-sizing: border-box;
    width: 5%;
    height: 110%;
    background: rgba(199, 9, 35, 0.01);
    box-shadow: -25px -3px 10px 0 rgba(255, 255, 255, 0.6);
    -webkit-transform: skew(30deg) translateX(350px);
    -ms-transform: skew(30deg) translateX(350px);
    transform: skew(30deg) translateX(350px);
    transition: -webkit-transform .6s 0s;
    transition: transform .6s 0s;
    transition: transform .6s 0s, -webkit-transform .6s 0s; }
  .section-ask .btn:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    box-sizing: border-box;
    width: 50%;
    height: 110%;
    background: rgba(199, 9, 35, 0.5);
    -webkit-transform: skew(30deg) translateX(-200px);
    -ms-transform: skew(30deg) translateX(-200px);
    transform: skew(30deg) translateX(-200px);
    transition: -webkit-transform .6s 0s;
    transition: transform .6s 0s;
    transition: transform .6s 0s, -webkit-transform .6s 0s; }
  .section-ask .btn span {
    display: inline-block;
    transition: color .3s; }
  .section-ask .btn:hover {
    background-color: #fff; }
  .section-ask .btn:hover span {
    color: #c70923; }
  .section-ask.play .title {
    opacity: 1;
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%); }
    .section-ask.play .title .btn:after {
      -webkit-transform: skew(30deg) translateX(-50px);
      -ms-transform: skew(30deg) translateX(-50px);
      transform: skew(30deg) translateX(-50px); }
    .section-ask.play .title .play .btn:before {
      -webkit-transform: skew(30deg) translateX(350px);
      -ms-transform: skew(30deg) translateX(350px);
      transform: skew(30deg) translateX(350px); }

.btn {
  display: inline-block;
  margin-top: 1rem;
  padding: 1.22857% 2.05714%;
  color: #fff;
  background-color: #c70923; }

.vertical-center {
  position: absolute;
  left: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  width: 100%;
  width: calc(100% - 3.90625%);
  left: 3.90625%; }

/* === Tabs module === */
.tab-titles {
  padding-bottom: 1rem;
  text-align: center; }
  .tab-titles ul {
    font-size: 0;
    text-align: center;
    display: inline-block; }
  .tab-titles li {
    display: inline-block;
    position: relative;
    overflow: hidden; }
    .tab-titles li:before {
      content: '';
      display: block;
      position: absolute;
      left: 0;
      top: -0.46875rem;
      width: 1px;
      height: 100%;
      background-color: #d2d2d2; }
    .tab-titles li:first-child:before {
      display: none; }
    .tab-titles li h2 {
      padding: 0 .975rem;
      padding-bottom: .0375rem; }
      @media all and (max-width: 768px) {
        .tab-titles li h2 {
          padding: 0 1.975rem; } }
      @media all and (max-width: 460px) {
        .tab-titles li h2 {
          padding: 0 .975rem; } }
      .tab-titles li h2:after {
        position: absolute;
        bottom: 0;
        left: 50%;
        margin-top: 0;
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translateX(-50%);
        -webkit-transition: left .5s .125s;
        transition: left .5s .125s; }
    .tab-titles li.hidden-line:nth-child(1) h2:after {
      left: 122%;
      -webkit-transition: left .5s;
      transition: left .5s; }
    .tab-titles li.hidden-line.to-left:nth-child(2) h2:after {
      left: -22%;
      -webkit-transition: left .5s;
      transition: left .5s; }
    .tab-titles li.hidden-line.to-right:nth-child(2) h2:after {
      left: 122%;
      -webkit-transition: left .5s;
      transition: left .5s; }
    .tab-titles li.hidden-line:nth-child(3) h2:after {
      left: -22%;
      -webkit-transition: left .5s;
      transition: left .5s; }
    .tab-titles li:hover {
      cursor: pointer; }

.section-tabs {
  padding-top: 1.1rem;
  padding-bottom: 1.7rem; }
  .section-tabs .outer {
    overflow: hidden;
    width: 93%;
    margin: 0 auto; }
  .section-tabs .row {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    display: inline-block;
    width: 32.71028%;
    margin-left: 0.93458%;
    white-space: normal;
    font-size: 0;
    text-align: justify; }
    .section-tabs .row:after {
      content: " ";
      display: block;
      clear: both; }
    .section-tabs .row:first-of-type {
      margin-left: 0; }
  .section-tabs .row-container {
    width: 305.71429%;
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%);
    transition: -webkit-transform 1.2s;
    transition: transform 1.2s;
    transition: transform 1.2s, -webkit-transform 1.2s;
    font-size: 0;
    white-space: nowrap; }
    .section-tabs .row-container.show-second-tab {
      -webkit-transform: translateX(-33.64486%);
      -ms-transform: translateX(-33.64486%);
      transform: translateX(-33.64486%); }
    .section-tabs .row-container.show-third-tab {
      -webkit-transform: translateX(-67.28972%);
      -ms-transform: translateX(-67.28972%);
      transform: translateX(-67.28972%); }
  .section-tabs .col {
    width: 100%;
    margin-bottom: 1px;
    float: none;
    display: inline-block;
    vertical-align: top;
    border-bottom: 1px solid #c70923; }
    .section-tabs .col:nth-of-type(3n) {
      margin-right: 0; }
    .section-tabs .col img {
      display: block;
      max-width: 100%; }
  .section-tabs .content {
    position: relative;
    padding-top: 5.61818%;
    padding-right: 5.54545%;
    padding-bottom: 82px;
    padding-left: 4.54545%;
    border-right: 1px solid #c70923;
    border-left: 1px solid #c70923; }
    .section-tabs .content .title {
      max-height: 2.4em;
      overflow: hidden;
      margin-bottom: calc(.3375rem + 4px);
      position: relative; }
      .section-tabs .content .title:after {
        content: '...';
        position: absolute;
        top: 1.2em;
        right: 0;
        width: 45px;
        height: 1.2em;
        text-align: right;
        background: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), color-stop(55%, white));
        background: linear-gradient(to right, rgba(255, 255, 255, 0), white 55%); }
    .section-tabs .content .under-lined {
      height: calc(1.6em + 4px); }
      .section-tabs .content .under-lined:after {
        width: 105px; }
  .section-tabs .text {
    position: relative;
    height: calc(2em * 1.875);
    margin-top: 24px;
    overflow: hidden; }
    .section-tabs .text p {
      max-height: calc(2em * 1.875); }
      .section-tabs .text p:after {
        content: '...';
        position: absolute;
        top: calc(1em * 1.875);
        right: 0;
        width: 45px;
        height: 1.875em;
        text-align: right;
        background: -webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), color-stop(75%, white));
        background: linear-gradient(to right, rgba(255, 255, 255, 0), white 75%); }
  @media screen and (max-width: 960px) {
    .section-tabs .text {
      height: calc(2em * 1.5625); }
      .section-tabs .text p {
        max-height: calc(2em * 1.5625); }
        .section-tabs .text p:after {
          top: calc(1em * 1.5625); } }
  .section-tabs .link-more {
    position: absolute;
    bottom: 0;
    right: 0;
    display: inline-block;
    width: 110px;
    height: 110px;
    background-color: #c70923;
    overflow: hidden; }
    @media all and (max-width: 768px) {
      .section-tabs .link-more {
        width: 70px;
        height: 70px; } }
    @media all and (max-width: 460px) {
      .section-tabs .link-more {
        width: 40px;
        height: 40px; } }
    .section-tabs .link-more:before, .section-tabs .link-more:after {
      content: '';
      display: block;
      position: absolute;
      top: 57px;
      left: 40px;
      -webkit-transform: translate(-50%, -50%) rotate(-45deg);
      -ms-transform: translate(-50%, -50%) rotate(-45deg);
      transform: translate(-50%, -50%) rotate(-45deg);
      width: 34px;
      height: 34px;
      background-color: #c70923;
      box-shadow: 1px 1px #fff;
      transition: left .3s; }
      @media all and (max-width: 768px) {
        .section-tabs .link-more:before, .section-tabs .link-more:after {
          top: 35px;
          left: 27px;
          width: 20px;
          height: 20px; } }
      @media all and (max-width: 460px) {
        .section-tabs .link-more:before, .section-tabs .link-more:after {
          top: 22px;
          left: 16px;
          width: 10px;
          height: 10px; } }
    .section-tabs .link-more:before {
      left: -30px; }
    .section-tabs .link-more:hover:before {
      left: 40px; }
    .section-tabs .link-more:hover:after {
      left: 110px; }
      @media all and (max-width: 460px) {
        .section-tabs .link-more:hover:after {
          left: 16px; } }

.can-zoom .img-a {
  overflow: hidden;
  background-color: white; }
  .can-zoom .img-a img {
    -webkit-transform: scale(1.1);
    -ms-transform: scale(1.1);
    transform: scale(1.1);
    opacity: 0;
    transition: all .9s ease-out; }
    .can-zoom .img-a img.load {
      -webkit-transform: scale(1);
      -ms-transform: scale(1);
      transform: scale(1);
      opacity: 1; }
      .can-zoom .img-a img.load:hover {
        -webkit-transform: scale(1.1);
        -ms-transform: scale(1.1);
        transform: scale(1.1); }

.services__slider {
  position: relative; }
  .services__slider .bx-wrapper {
    box-shadow: 0 0 0;
    background: transparent; }
    .services__slider .bx-wrapper .bx-viewport {
      box-shadow: 0 0 0;
      background: transparent;
      border: 0;
      min-height: 27.1rem; }
  .services__slider .bxslider {
    min-height: 27.1rem; }

.services__slider-btn-next,
.services__slider-btn-prev {
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  top: 0;
  z-index: 3;
  width: 2rem;
  height: 520px;
  display: table;
  text-align: center; }
  @media all and (max-width: 768px) {
    .services__slider-btn-next,
    .services__slider-btn-prev {
      height: 398px; } }
  @media all and (max-width: 460px) {
    .services__slider-btn-next,
    .services__slider-btn-prev {
      height: 166px; } }
  .services__slider-btn-next a,
  .services__slider-btn-prev a {
    display: table-cell;
    vertical-align: middle;
    text-decoration: none;
    font-size: 1.5rem;
    color: #fff; }

.services__slider-btn-next {
  right: 1px; }

.services__slider-btn-prev {
  left: -4px; }

.specifications__slider {
  position: relative;
  margin: 30px auto;
  width: 90%; }
  .specifications__slider .bx-wrapper {
    box-shadow: 0 0 0;
    background: transparent; }
    .specifications__slider .bx-wrapper .bx-viewport {
      box-shadow: 0 0 0;
      background: transparent;
      border: 0; }

.specifications__slider-btn-next,
.specifications__slider-btn-prev {
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  top: 0;
  z-index: 3;
  width: 1rem;
  display: table;
  text-align: center; }
  .specifications__slider-btn-next a,
  .specifications__slider-btn-prev a {
    display: table-cell;
    vertical-align: middle;
    text-decoration: none;
    font-size: 1.5rem;
    color: #fff; }

.specifications__slider-btn-next {
  right: 10px; }

.specifications__slider-btn-prev {
  left: -2px; }

.services .section-content .col {
  width: 93%;
  margin: 1rem auto;
  border: 1px solid #B2B2B2;
  padding: 1rem 2rem; }
  .services .section-content .col a {
    color: #232323; }
    .services .section-content .col a:hover .title:after {
      width: 100px; }
  .services .section-content .col .title {
    font-family: 'LatoWeb', "Open Sans", sans-serif; }
  .services .section-content .col .text p {
    margin-top: 1rem; }

form img {
  width: inherit;
  margin: 1rem 0 0 1rem;
  min-width: 15%; }
  @media screen and (max-width: 668px) {
    form img {
      width: 18%; } }

/* === About page === */
.about .title {
  text-align: left; }

.about .address {
  margin-top: 2.25rem;
  font-family: "LatoWeb"; }
  .about .address .img-outer {
    display: inline-block;
    width: 26px; }
  .about .address address {
    display: inline-block; }

.about .row {
  max-width: 93%;
  margin-left: auto;
  margin-right: auto; }
  .about .row:after {
    content: " ";
    display: block;
    clear: both; }

.about .col {
  width: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  .about .col:first-of-type {
    /*padding-right: 5.71429%;*/ }
  .about .col:last-of-type {
    /*padding-left: 5.71429%;*/ }

.about ul {
  margin-top: 6px; }

.about li {
  float: left;
  width: 50%;
  margin-top: 2rem; }

.about img {
  display: block;
  width: 100%; }

.arguments {
  position: relative;
  padding: 1rem 0;
  background: transparent url("../img/about-bg.jpg") center no-repeat;
  background-size: cover; }
  .arguments .row {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%; }
  .arguments .bg-shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.9);
    z-index: 0; }
  .arguments .wrap {
    position: relative;
    z-index: 1; }
  .arguments .title {
    text-align: left; }
    .arguments .title a {
      color: #c70923; }
  .arguments ul {
    margin-bottom: 1rem; }
  .arguments li {
    position: relative;
    min-height: 4.6875em; }
  .arguments img {
    position: absolute;
    top: 50%;
    left: 0;
    max-width: 25%;
    width: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%); }
  .arguments .col > ul > li > p {
    padding-left: 30%;
    padding-right: 0;
    position: absolute;
    max-width: 90%;
    font-size: 0.7273rem;
    top: 50%;
    left: 0;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%); }

.banner {
  text-align: center; }
  .banner img {
    max-width: 100%;
    display: inline-block; }

.section-content {
  padding-bottom: 1.75rem;
  margin-top: 1rem; }

.service .section-content .col:last-child {
  width: 93%;
  margin: 1rem auto; }

.service .section-cars {
  width: 93%;
  margin: 0 auto 1rem; }
  .service .section-cars .cars-list {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between; }

.text {
  font-family: "LatoWebLight"; }
  .text p {
    /*margin-top: 2.25rem; */ }

.img-outer img {
  display: block;
  max-width: 100%; }

/* === Cars page === */
/* === Cars page === */
#hashNav {
  display: block; }
  #hashNav a.is-active {
    color: #c70923; }

.cars .btn {
  box-sizing: border-box;
  padding: 2.42857% 5%;
  border: 1px solid #c70923;
  transition: all .3s; }

.cars .btn:hover {
  color: #c70923;
  background-color: #fff; }

.cars .specifications {
  text-align: center; }

.short-descr {
  position: relative;
  overflow: hidden; }
  .short-descr .car_pic {
    width: 100%;
    margin: 0; }
  .short-descr .wrap {
    position: relative; }
  .short-descr .container {
    left: 0;
    width: 90%; }
    .short-descr .container .title {
      margin-bottom: 1rem;
      font-family: "LatoWeb";
      font-size: 1.515rem;
      color: #232323;
      -webkit-transform: translateX(-100%);
      -ms-transform: translateX(-100%);
      transform: translateX(-100%);
      transition: -webkit-transform .5s .3s;
      transition: transform .5s .3s;
      transition: transform .5s .3s, -webkit-transform .5s .3s; }
    .short-descr .container .col {
      float: left;
      width: 50%;
      font-family: "LatoWeb"; }
      .short-descr .container .col ul {
        list-style: none; }
      .short-descr .container .col li:nth-of-type(1) {
        transition: -webkit-transform .5s .4s;
        transition: transform .5s .4s;
        transition: transform .5s .4s, -webkit-transform .5s .4s; }
      .short-descr .container .col li:nth-of-type(2) {
        transition: -webkit-transform .5s .5s;
        transition: transform .5s .5s;
        transition: transform .5s .5s, -webkit-transform .5s .5s; }
      .short-descr .container .col li:nth-of-type(3) {
        transition: -webkit-transform .5s .6s;
        transition: transform .5s .6s;
        transition: transform .5s .6s, -webkit-transform .5s .6s; }
      .short-descr .container .col:first-of-type li {
        -webkit-transform: translateX(-125%);
        -ms-transform: translateX(-125%);
        transform: translateX(-125%); }
      .short-descr .container .col:nth-of-type(2) li {
        -webkit-transform: translateX(-225%);
        -ms-transform: translateX(-225%);
        transform: translateX(-225%); }
    .short-descr .container p {
      margin-top: 0;
      line-height: 1.5;
      clear: both;
      color: #232323; }
    .short-descr .container .text > p {
      font-family: "LatoWeb";
      -webkit-transform: translateX(-100%);
      -ms-transform: translateX(-100%);
      transform: translateX(-100%);
      transition: -webkit-transform .5s .55s;
      transition: transform .5s .55s;
      transition: transform .5s .55s, -webkit-transform .5s .55s; }
    .short-descr .container:before {
      content: '';
      display: block;
      position: absolute;
      right: 100%;
      top: 0;
      height: 100%;
      width: 200%;
      background-color: rgba(0, 0, 0, 0.5); }
  .short-descr.play .title {
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%); }
  .short-descr.play .col:first-of-type li {
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%); }
  .short-descr.play .col:nth-of-type(2) li {
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%); }
  .short-descr.play .text > p {
    -webkit-transform: translateX(0%);
    -ms-transform: translateX(0%);
    transform: translateX(0%); }

.specifications {
  padding-top: 2rem;
  padding-bottom: 1rem;
  background: transparent; }
  .specifications.no-padd-top {
    padding-top: 0; }
    .specifications.no-padd-top h2.title.paddings {
      margin-top: -1rem;
      padding-top: 0; }
  .specifications h2.title {
    text-align: center; }
    .specifications h2.title.paddings {
      padding-top: 3rem;
      padding-bottom: 2.25rem; }
  .specifications table {
    width: 100%;
    font-family: "LatoWebLight";
    text-align: center; }
  .specifications .table-specs table {
    margin: 2rem 0; }
  .specifications .table-specs tr:nth-child(odd) {
    background-color: #fff;
    text-transform: uppercase; }
  .specifications .table-specs tr:nth-child(even) td {
    border-left: 1px solid #c2c0c0;
    border-right: 1px solid #c2c0c0; }
  .specifications .table-specs tr:nth-child(3) td {
    border: 1px solid #c2c0c0; }
  .specifications .table-specs tr:last-child {
    border-bottom: 1px solid #c2c0c0; }
  .specifications .table-specs td {
    padding: 1rem 0;
    width: 20%; }
  .specifications .table-drop {
    display: none;
    position: relative;
    overflow: hidden; }
    .specifications .table-drop.no-fixed {
      display: block;
      margin: 0; }
      .specifications .table-drop.no-fixed .row:after {
        display: none; }
      .specifications .table-drop.no-fixed .row .heading {
        padding: 8px 0;
        font-family: "LatoWebLight";
        text-align: center;
        text-transform: uppercase;
        background-color: #fff; }
    .specifications .table-drop table {
      table-layout: fixed;
      width: auto;
      min-width: 93%; }
    .specifications .table-drop tr.hidden {
      display: none; }
    .specifications .table-drop th, .specifications .table-drop td {
      padding: 10px 20px;
      vertical-align: middle;
      border: 1px solid #c2c0c0; }
    .specifications .table-drop th:first-child, .specifications .table-drop td:first-child {
      width: 22%; }
    .specifications .table-drop.experiment .outer {
      position: relative; }
    .specifications .table-drop.experiment .inner {
      overflow-x: scroll;
      overflow-y: visible;
      width: calc(100% - $ml);
      margin-left: 250px; }
    .specifications .table-drop.experiment table tr {
      border-bottom: 1px solid #c2c0c0; }
    .specifications .table-drop.experiment table td {
      border: none;
      border-left: 1px solid #c2c0c0; }
    .specifications .table-drop.experiment table th:first-child {
      border: none;
      border-top: 1px solid #c2c0c0;
      position: absolute;
      left: 0;
      box-sizing: border-box;
      width: 250px; }
    .specifications .table-drop .outer:hover + .table-slider .slide-left, .specifications .table-drop .outer:hover + .table-slider .slide-right {
      opacity: 1; }
    .specifications .table-drop .row {
      position: relative;
      font-size: 0;
      border: 1px solid #c2c0c0;
      text-align: left;
      white-space: nowrap;
      overflow: hidden; }
      .specifications .table-drop .row:after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 200px;
        height: 100%;
        border-right: 1px solid #c2c0c0;
        background-color: #eee;
        z-index: 1; }
      .specifications .table-drop .row:not(:first-child) {
        border-top: none; }
      .specifications .table-drop .row.hidden {
        display: none; }
    .specifications .table-drop .th {
      width: 200px;
      display: inline-block;
      position: relative;
      z-index: 2; }
    .specifications .table-drop .th, .specifications .table-drop .td {
      padding: 10px;
      width: 50%;
      white-space: normal;
      text-align: center;
      font-family: 'LatoWebLight';
      font-size: 1.121rem;
      line-height: 1.2; }
      @media only screen and (max-width: 1660px) {
        .specifications .table-drop .th, .specifications .table-drop .td {
          /*font-size: 18px;*/ } }
      @media only screen and (max-width: 1280px) {
        .specifications .table-drop .th, .specifications .table-drop .td {
          /*font-size: 17px;*/ } }
      @media only screen and (max-width: 1100px) {
        .specifications .table-drop .th, .specifications .table-drop .td {
          /*font-size: 16px;*/ } }
    .specifications .table-drop .th, .specifications .table-drop .content, .specifications .table-drop .td {
      vertical-align: middle; }
    .specifications .table-drop .row .content {
      display: inline-block;
      font-size: 0;
      width: 100%;
      white-space: nowrap; }
      .specifications .table-drop .row .content .td {
        display: inline-block;
        text-align: center;
        width: 50%; }
        .specifications .table-drop .row .content .td:before {
          content: '';
          display: block;
          width: 1px;
          height: 500px;
          background-color: #c2c0c0;
          position: absolute;
          top: 50%;
          -webkit-transform: translate(-10px, -50%);
          -ms-transform: translate(-10px, -50%);
          transform: translate(-10px, -50%); }
  .specifications .drop {
    padding-bottom: 10px; }
  .specifications .drop-header {
    position: relative;
    padding: .75rem 0;
    font-family: "LatoWebLight";
    text-transform: uppercase;
    background-color: #fff;
    text-align: center;
    overflow: hidden; }
    .specifications .drop-header:after {
      content: '';
      display: block;
      position: absolute;
      top: calc(50% - 5px);
      right: 15px;
      -webkit-transform-origin: 75% 75%;
      -ms-transform-origin: 75% 75%;
      transform-origin: 75% 75%;
      -webkit-transform: translate(-50%, -50%) rotate(45deg);
      -ms-transform: translate(-50%, -50%) rotate(45deg);
      transform: translate(-50%, -50%) rotate(45deg);
      width: 15px;
      height: 15px;
      background-color: #fff;
      box-shadow: 1px 1px #232323;
      cursor: pointer;
      transition: -webkit-transform .4s;
      transition: transform .4s;
      transition: transform .4s, -webkit-transform .4s; }
    .specifications .drop-header.expanded:after {
      -webkit-transform: translate(-50%, -50%) rotate(225deg);
      -ms-transform: translate(-50%, -50%) rotate(225deg);
      transform: translate(-50%, -50%) rotate(225deg); }
  .specifications .btn-stroke {
    width: 280px;
    margin-bottom: 2rem;
    padding: 1rem 0; }
    .specifications .btn-stroke:last-of-type {
      margin-left: 2rem; }
    .specifications .btn-stroke.pressed {
      background-color: #c70923;
      color: #fff; }

.colspan-2 {
  width: 300px !important; }

.colspan-3 {
  width: 450px !important; }

.colspan-4 {
  width: 600px !important; }

.colspan-5 {
  width: 750px !important; }

.colspan-6 {
  width: 900px !important; }

.colspan-7 {
  width: 1050px !important; }

.colspan-8 {
  width: 1200px !important; }

.colspan-9 {
  width: 1350px !important; }

.colspan-10 {
  width: 1500px !important; }

.colspan-11 {
  width: 1650px !important; }

.colspan-12 {
  width: 1800px !important; }

.colspan-13 {
  width: 1950px !important; }

.colspan-14 {
  width: 2100px !important; }

.colspan-15 {
  width: 2250px !important; }

.table-slider {
  position: absolute;
  right: 0;
  top: 0;
  height: calc(100% - 0px);
  width: 40px; }
  .table-slider .slide-left, .table-slider .slide-right {
    position: relative;
    height: 50%;
    width: 100%;
    float: left;
    overflow: hidden;
    background-color: rgba(255, 255, 255, 0.4);
    cursor: pointer;
    opacity: 0;
    -webkit-transition: opacity .3s;
    transition: opacity .3s; }
    .table-slider .slide-left:before, .table-slider .slide-left .table-slider .slide-left:after, .table-slider .slide-left .table-slider .slide-left:before, .table-slider .slide-left .table-slider .slide-left:after, .table-slider .slide-right:before, .table-slider .slide-right .table-slider .slide-left:after, .table-slider .slide-right .table-slider .slide-left:before, .table-slider .slide-right .table-slider .slide-left:after, .table-slider .slide-left .table-slider .slide-right:after, .table-slider .slide-left .table-slider .slide-right:before, .table-slider .slide-left .table-slider .slide-right:after, .table-slider .slide-right .table-slider .slide-right:after, .table-slider .slide-right .table-slider .slide-right:before, .table-slider .slide-right .table-slider .slide-right:after {
      content: '';
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-75%, -75%) rotate(-45deg);
      -ms-transform: translate(-75%, -75%) rotate(-45deg);
      transform: translate(-75%, -75%) rotate(-45deg);
      width: 14px;
      height: 14px;
      background-color: transparent;
      box-shadow: 1px 1px #c70923;
      transition: left .3s; }
    .table-slider .slide-left:hover, .table-slider .slide-left:hover, .table-slider .slide-right:hover, .table-slider .slide-right:hover {
      background-color: rgba(255, 255, 255, 0.75); }
    .table-slider .slide-left:before, .table-slider .slide-left:before, .table-slider .slide-right:before, .table-slider .slide-right:before {
      left: -30px; }
    .table-slider .slide-left:hover:before, .table-slider .slide-left:hover:before, .table-slider .slide-right:hover:before, .table-slider .slide-right:hover:before {
      left: 20px; }
    .table-slider .slide-left:hover:after, .table-slider .slide-left:hover:after, .table-slider .slide-right:hover:after, .table-slider .slide-right:hover:after {
      left: 70px; }
  .table-slider .slide-left {
    -webkit-transform: scaleX(-1);
    -ms-transform: scaleX(-1);
    transform: scaleX(-1); }
  .table-slider:hover .slide-left, .table-slider:hover .slide-right {
    opacity: 1; }

.galleries {
  padding-top: 1rem;
  overflow: hidden; }
  .galleries .title {
    margin-bottom: 2.25rem;
    text-align: center; }
  .galleries .row {
    font-size: 0;
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
    position: relative; }
    .galleries .row.do-magic .col {
      -webkit-transform: perspective(1100px) rotateY(90deg);
      transform: perspective(1100px) rotateY(90deg); }
  .galleries .col {
    position: relative;
    display: inline-block;
    width: 25%;
    height: 41.66666667vw;
    max-height: 900px;
    -webkit-transform: perspective(1100px) rotateY(0deg);
    transform: perspective(1100px) rotateY(0deg);
    transition: -webkit-transform .8s;
    transition: transform .8s;
    transition: transform .8s, -webkit-transform .8s;
    z-index: 1; }
    .galleries .col:hover .shadow-bg {
      background-color: rgba(0, 0, 0, 0.3); }
    .galleries .col:hover .link-more {
      width: 50px; }
    .galleries .col:nth-of-type(2) {
      background: transparent url("../img/gall-tile-1.jpg") center no-repeat;
      background-size: cover; }
    .galleries .col:nth-of-type(3) {
      background: transparent url("../img/gall-tile-2.jpg") center no-repeat;
      background-size: cover; }
    .galleries .col:nth-of-type(4) {
      background: transparent url("../img/gall-tile-3.jpg") center no-repeat;
      background-size: cover; }
    .galleries .col:nth-of-type(5) {
      background: transparent url("../img/gall-tile-4.jpg") center no-repeat;
      background-size: cover; }
    .galleries .col .title {
      color: #fff;
      cursor: pointer; }
      .galleries .col .title:hover .link-more:before {
        left: 20px; }
      .galleries .col .title:hover .link-more:after {
        left: 70px; }
    .galleries .col .media {
      display: none; }
  .galleries .media {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    -webkit-transition: opacity 1s;
    transition: opacity 1s; }
    .galleries .media.visible {
      opacity: 1; }
    .galleries .media .block {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 41.642857142857142857142857142857vw;
      visibility: hidden; }
      .galleries .media .block.show {
        visibility: visible; }
      .galleries .media .block.push-front {
        z-index: 1; }
      .galleries .media .block iframe {
        display: block;
        max-width: 100%;
        margin: 0 auto; }
      .galleries .media .block .youtube {
        margin: 0 auto; }
  .galleries .shadow-bg {
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    -webkit-transition: background-color .3s;
    transition: background-color .3s; }
  .galleries .link-more {
    position: relative;
    display: inline-block;
    width: 0px;
    height: 50px;
    background-color: #c70923;
    overflow: hidden;
    vertical-align: text-top;
    -webkit-transition: width .3s;
    transition: width .3s; }
    .galleries .link-more:before, .galleries .link-more:after {
      content: '';
      display: block;
      position: absolute;
      top: 25px;
      left: 20px;
      -webkit-transform: translate(-50%, -50%) rotate(-45deg);
      -ms-transform: translate(-50%, -50%) rotate(-45deg);
      transform: translate(-50%, -50%) rotate(-45deg);
      width: 14px;
      height: 14px;
      background-color: #c70923;
      box-shadow: 1px 1px #fff;
      transition: left .3s; }
    .galleries .link-more:before {
      left: -30px; }
  .galleries .link-back {
    position: absolute;
    top: 0;
    left: 0;
    display: inline-block;
    width: auto;
    height: 50px;
    padding-left: 40px;
    padding-right: 20px;
    background-color: #c70923;
    overflow: hidden;
    z-index: 1;
    vertical-align: text-top;
    -webkit-transition: width .3s;
    transition: width .3s; }
    .galleries .link-back:before, .galleries .link-back:after {
      content: '';
      display: block;
      position: absolute;
      top: 25px;
      left: 70px;
      -webkit-transform: translate(-50%, -50%) rotate(135deg);
      -ms-transform: translate(-50%, -50%) rotate(135deg);
      transform: translate(-50%, -50%) rotate(135deg);
      width: 14px;
      height: 14px;
      background-color: #c70923;
      box-shadow: 1px 1px #fff;
      transition: left .3s; }
    .galleries .link-back:before {
      left: 20px; }
    .galleries .link-back:hover:before {
      left: -30px; }
    .galleries .link-back:hover:after {
      left: 25px; }
    .galleries .link-back span {
      position: relative;
      z-index: 1;
      display: inline-block;
      height: 100%;
      line-height: 50px;
      color: #fff;
      background-color: #c70923; }
  .galleries .slider {
    position: relative; }
  .galleries .controls .prev, .galleries .controls .next {
    top: auto;
    bottom: 5%;
    margin-top: 0px; }
  .galleries .controls .prev {
    left: calc(50% - 60px); }
  .galleries .controls .next {
    right: calc(50% - 60px); }

.car-colors .tab-titles li h2 {
  padding: 0 0.775rem; }

.car-colors .outer {
  overflow: hidden; }
  .car-colors .outer .bx-wrapper {
    margin: 0 auto 30px; }
    .car-colors .outer .bx-wrapper .bx-caption {
      bottom: -7px; }
      .car-colors .outer .bx-wrapper .bx-caption span {
        font-size: 0.55em;
        line-height: 1; }

.car-colors .row {
  width: 200%;
  -webkit-transform: translateX(0%);
  -ms-transform: translateX(0%);
  transform: translateX(0%);
  transition: -webkit-transform 1.2s;
  transition: transform 1.2s;
  transition: transform 1.2s, -webkit-transform 1.2s;
  font-size: 0;
  white-space: nowrap; }
  .car-colors .row.show-right-tab {
    -webkit-transform: translateX(-100%);
    -ms-transform: translateX(-100%);
    transform: translateX(-100%); }

.car-colors .col {
  float: none;
  display: inline-block;
  width: 100%;
  border-bottom: none;
  white-space: normal; }
  .car-colors .col li img {
    max-width: 80%;
    margin: 0 auto; }

.car-colors .interier .bx-caption {
  bottom: -7px;
  margin: 0 auto; }
  .car-colors .interier .bx-caption span {
    color: #fff !important;
    text-align: center;
    width: 80%;
    margin: 0 auto 7px;
    background: rgba(0, 0, 0, 0.4) !important; }

.car-colors-pager {
  position: relative;
  text-align: center; }
  .car-colors-pager .inner {
    width: 100%; }
  .car-colors-pager .page-btn-outer {
    position: relative;
    display: inline-block;
    height: 40px;
    width: 10%;
    min-width: 50px;
    margin: 0 3px;
    vertical-align: bottom; }
    .car-colors-pager .page-btn-outer:nth-child(1) a {
      background: #8D8E98;
      /* Old browsers */
      background: -moz-linear-gradient(to top, #8D8E98 0%, #E5E7EF 100%);
      /* FF3.6-15 */
      background-image: -webkit-gradient(linear, left bottom, left top, from(#8D8E98), to(#E5E7EF));
      background: linear-gradient(to top, #8D8E98 0%, #E5E7EF 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#8D8E98', endColorstr='#E5E7EF', GradientType=0);
      /* IE6-9 */ }
    .car-colors-pager .page-btn-outer:nth-child(2) a {
      background: #090709;
      /* Old browsers */
      background: -moz-linear-gradient(to top, #090709 0%, #545559 100%);
      /* FF3.6-15 */
      background-image: -webkit-gradient(linear, left bottom, left top, from(#090709), to(#545559));
      background: linear-gradient(to top, #090709 0%, #545559 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#090709', endColorstr='#545559', GradientType=0);
      /* IE6-9 */ }
    .car-colors-pager .page-btn-outer:nth-child(3) a {
      background: #495976;
      /* Old browsers */
      background: -moz-linear-gradient(to top, #495976 0%, #98bdd0 100%);
      /* FF3.6-15 */
      background-image: -webkit-gradient(linear, left bottom, left top, from(#495976), to(#98bdd0));
      background: linear-gradient(to top, #495976 0%, #98bdd0 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#495976', endColorstr='#98bdd0', GradientType=0);
      /* IE6-9 */ }
    .car-colors-pager .page-btn-outer:nth-child(4) a {
      background: #152c5a;
      /* Old browsers */
      background: -moz-linear-gradient(to top, #152c5a 0%, #8092bc 100%);
      /* FF3.6-15 */
      background-image: -webkit-gradient(linear, left bottom, left top, from(#152c5a), to(#8092bc));
      background: linear-gradient(to top, #152c5a 0%, #8092bc 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#152c5a', endColorstr='#8092bc', GradientType=0);
      /* IE6-9 */ }
    .car-colors-pager .page-btn-outer:nth-child(5) a {
      background: #EBEBE9;
      /* Old browsers */
      background: -moz-linear-gradient(to top, #EBEBE9 0%, #fff 100%);
      /* FF3.6-15 */
      background-image: -webkit-gradient(linear, left bottom, left top, from(#EBEBE9), to(#fff));
      background: linear-gradient(to top, #EBEBE9 0%, #fff 100%);
      /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#EBEBE9', endColorstr='#fff', GradientType=0);
      /* IE6-9 */
      color: #000; }
    .car-colors-pager .page-btn-outer a {
      position: absolute;
      bottom: 0;
      left: 0;
      display: inline-block;
      width: 100%;
      min-height: 1em;
      padding-top: 64%;
      color: #fff;
      line-height: 1.2;
      border: 1px solid #cacaca;
      -webkit-transition: all .2s linear;
      transition: all .2s linear; }
      .car-colors-pager .page-btn-outer a.active {
        padding-top: 75%;
        margin-top: 0; }
      .car-colors-pager .page-btn-outer a p {
        position: absolute;
        bottom: 0;
        width: 100%;
        padding: 0 0.3rem .25rem;
        font-family: "LatoWebLight"; }

.car-colors .bx-wrapper .bx-caption {
  background: transparent; }
  .car-colors .bx-wrapper .bx-caption span {
    font-family: "LatoWebLight";
    color: #000; }

.car-colors #carInterColorSl img {
  max-height: 500px; }

.accessories .row {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .accessories .row:after {
    content: " ";
    display: block;
    clear: both; }

.accessories .col {
  width: 90%;
  margin: 2rem auto; }
  .accessories .col:last-of-type {
    padding-left: 0; }
    .accessories .col:last-of-type h2 {
      padding-bottom: 1rem; }
    .accessories .col:last-of-type .btn {
      width: 70%;
      margin: 1rem auto -0.5rem;
      display: block;
      text-align: center; }

.section-tabs .content {
  border-left: 1px solid #c70923; }
  .section-tabs .content .text p {
    margin-top: 0; }

/* === Equipment page === */
.equipment .under-centered {
  text-align: center; }

.equipment .section-content .title {
  margin-top: 3.75rem; }
  .equipment .section-content .title + .text p {
    margin-top: 1.875rem; }

.equipment .equip-modules .col {
  width: 50%;
  float: left; }
  .equipment .equip-modules .col:first-of-type {
    padding-right: 4.28571%; }
  .equipment .equip-modules .col:last-of-type {
    padding-left: 4.28571%; }

.equipment .equip-modules .text p {
  margin-top: 0; }

.equipment .equip-modules .text h3 {
  margin-top: 2rem;
  font-family: 'LatoWeb';
  font-size: 1.375em;
  line-height: 1.2; }

.equipment .arguments {
  margin-top: 3.75rem;
  background: transparent url("../img/equipment-bg.jpg") center no-repeat;
  background-size: cover; }
  .equipment .arguments .title {
    text-align: center; }
  .equipment .arguments .col {
    width: 100%;
    padding-left: 0;
    font-size: 0; }
    .equipment .arguments .col > ul > li {
      display: inline-block;
      margin-top: 3.75rem;
      min-height: 116px;
      width: 50%;
      font-size: 1rem;
      vertical-align: top; }
      .equipment .arguments .col > ul > li > p {
        position: static;
        padding-left: 125px;
        font-family: "LatoWeb";
        font-size: 1.375em;
        line-height: 1.2;
        -webkit-transform: translate(0);
        -ms-transform: translate(0);
        transform: translate(0); }
      .equipment .arguments .col > ul > li ul {
        padding-left: 125px; }
        .equipment .arguments .col > ul > li ul > li {
          min-height: auto;
          padding-left: 1rem; }
          .equipment .arguments .col > ul > li ul > li:before {
            content: '';
            display: block;
            position: absolute;
            top: .7375em;
            left: 0;
            width: .4em;
            height: .4em;
            background-color: #c70923;
            border-radius: 50%; }
          .equipment .arguments .col > ul > li ul > li p {
            position: static; }

/* === Body repair-light page === */
.body-repair-light .video iframe {
  display: block;
  margin: 0 auto; }

.contact-info {
  padding-top: 3.75rem;
  padding-bottom: 4.5em; }
  .contact-info .row {
    position: relative;
    text-align: center; }
    .contact-info .row .col {
      display: inline-block;
      width: 20%;
      margin-left: 2.85714%;
      padding: 0;
      float: none;
      text-align: left;
      vertical-align: top; }
  .contact-info .block {
    margin-bottom: 2rem; }
  .contact-info-title {
    font-family: "LatoWeb"; }
  .contact-info-text {
    font-family: "LatoWebLight"; }
  .contact-info .btn {
    padding: 1rem 1.5rem;
    border: 1px solid #c70923;
    transition: all .3s; }
    .contact-info .btn:hover {
      background-color: #fff;
      color: #c70923; }

/* === Body repair page === */
.body-repair:after {
  content: '';
  display: block;
  padding-bottom: 2.75rem; }

.body-repair .wrap {
  width: 93%;
  margin: 0 auto; }

.body-repair .feature {
  margin: 2.25rem 0;
  font-size: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  .body-repair .feature .col {
    width: 100%;
    float: left;
    margin-left: 1.78571%;
    padding-left: 2.85714%;
    padding-right: 2.85714%;
    float: none;
    display: inline-block;
    vertical-align: top; }
    .body-repair .feature .col:nth-of-type(3n-2) {
      margin-left: 0; }
  .body-repair .feature img {
    display: block;
    margin: 0 auto;
    float: left;
    width: 11%; }
  .body-repair .feature-title {
    margin: 1rem 0;
    font-family: "LatoWeb";
    text-align: center;
    max-height: 1.2em;
    overflow: hidden; }
  .body-repair .feature-text {
    font-family: "LatoWebLight"; }

.body-repair .slider {
  position: relative;
  margin-top: 2.25rem;
  overflow-x: hidden; }
  .body-repair .slider ul {
    margin-top: 0; }
  .body-repair .slider li {
    margin-top: 0; }

.body-repair .contact-info {
  padding-top: .75rem;
  padding-bottom: .5em; }
  .body-repair .contact-info .row .col {
    width: 46%;
    margin-left: 1.85714%; }
    .body-repair .contact-info .row .col:last-child {
      width: 94%;
      margin-top: 2.85714%; }
  .body-repair .contact-info .block {
    margin-bottom: .21rem; }
  .body-repair .contact-info .btn {
    margin-top: 1rem; }

/* === Corporate trade page === */
.corporate-trade .arguments {
  background: transparent url("../img/corporate-bg.jpg") center no-repeat;
  background-size: cover; }
  .corporate-trade .arguments .title {
    text-align: center; }
  .corporate-trade .arguments li {
    width: 100%;
    margin-top: 1rem; }
  .corporate-trade .arguments .col {
    padding-left: 10%; }
    .corporate-trade .arguments .col:nth-of-type(2) {
      padding-right: 10%;
      padding-left: 5.71429%; }
  .corporate-trade .arguments .text {
    clear: both;
    padding-top: .5rem;
    font-family: "LatoWeb";
    text-align: center; }
    .corporate-trade .arguments .text a {
      color: #c70923; }

/* === Parts page === */
.parts .book-form {
  background: transparent url("../img/parts-bg.jpg") center no-repeat;
  background-size: cover; }

.parts .section-content {
  padding-top: 3rem; }

.parts .text {
  text-align: left; }
  .parts .text p {
    margin-top: 0; }

.parts .specifications {
  padding-bottom: 8rem;
  padding-top: 0;
  background-color: #fff; }
  .parts .specifications h2.title {
    margin-bottom: 2.5rem; }
  .parts .specifications .drop {
    margin-bottom: .25rem; }
    .parts .specifications .drop-header {
      background-color: #eee; }
    .parts .specifications .drop-header:after {
      background-color: #eee; }
    .parts .specifications .drop .item {
      padding: 2.14286% 0 0; }
      .parts .specifications .drop .item .img-outer {
        width: 21.42857%;
        float: left; }
      .parts .specifications .drop .item .content {
        width: 78.57143%;
        float: left;
        padding-left: 4.28571%;
        text-align: left; }
        .parts .specifications .drop .item .content .title {
          padding-top: .25rem; }
        .parts .specifications .drop .item .content .title, .parts .specifications .drop .item .content .descr {
          margin-bottom: 1rem; }

/* === Parts page === */
.warranty .section-content .title {
  margin-bottom: 2rem;
  text-align: center; }

.warranty .sub-title {
  margin: 2.5rem 0 1.5rem; }
  .warranty .sub-title p {
    font-family: "LatoWeb"; }

.warranty .text ul {
  margin-top: 1rem; }
  .warranty .text ul li {
    position: relative;
    padding-left: 1.5rem;
    padding-bottom: .75rem; }
    .warranty .text ul li:before {
      content: '';
      display: block;
      position: absolute;
      top: .7375em;
      left: 0;
      width: .4em;
      height: .4em;
      background-color: #c70923;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%; }

.warranty .text p, .warranty .text li {
  font-family: "LatoWebLight"; }

.warranty .text strong {
  color: #c70923; }

.warranty .table-drop {
  padding-top: 0.875rem;
  padding-bottom: 4.5rem; }
  .warranty .table-drop .text h4 {
    font-family: "LatoWeb";
    font-size: 1.375em;
    margin-top: 1rem; }
  .warranty .table-drop .text p {
    margin-top: 1rem; }

/* === Accessories page === */
.accessories > .wrap {
  padding-bottom: 4.5rem; }

.accessories .text p {
  font-family: "LatoWeb"; }

.accessories .car-title {
  color: #000; }

/* === Trade-in page === */
.trade-in p {
  font-family: "LatoWebLight"; }

.trade-in .arguments {
  padding-bottom: 7rem;
  padding-top: 0;
  background: #fff; }
  .trade-in .arguments .col {
    width: 100%; }
    .trade-in .arguments .col li {
      width: 50%;
      box-sizing: border-box; }
      .trade-in .arguments .col li :nth-of-type(odd) p {
        padding-right: 2rem; }
    .trade-in .arguments .col > ul > li > p {
      padding-left: 90px; }
  .trade-in .arguments .text {
    padding-top: .25rem;
    clear: both;
    font-family: "LatoWebLight";
    text-align: left; }

/* === ProTect page === */
.protect p {
  font-family: "LatoWebLight"; }

.protect .section-content {
  padding-bottom: 1rem; }

.protect .sub-title {
  margin-top: 2rem;
  text-align: center;
  color: #c70923; }

.protect .arguments .col {
  width: 100%; }

.protect .arguments .col li {
  width: 100%; }

.protect .arguments .col > ul > li > p {
  padding-left: 120px; }

@media screen and (max-width: 1280px) {
  .protect .arguments .col > ul > li > p {
    padding-left: 90px; } }

.protect .arguments strong {
  font-family: "LatoWeb";
  font-size: 1.375em; }

.protect .slider {
  position: relative;
  padding-bottom: 8rem; }

.protect .slider li, .protect .slider ul {
  margin-top: 0; }

.protect .slider .controls .prev, .protect .slider .controls .next {
  background-color: rgba(255, 255, 255, 0.8); }

/* === Assistance page === */
.assistance .section-ask {
  background: transparent url("../img/assistance-bg.jpg") center no-repeat; }
  .assistance .section-ask strong {
    color: #c70923; }

.assistance .table-drop table {
  line-height: 1.25; }
  .assistance .table-drop table thead {
    font-size: 1.25em;
    line-height: 1.2; }
  .assistance .table-drop table tbody td:not(:first-of-type) {
    color: #c70923;
    font-size: 1.25em;
    line-height: 1.2; }

.assistance .table-drop p b {
  margin-bottom: -1rem;
  font-family: "LatoWeb"; }

.assistance .table-drop ol {
  list-style-type: decimal; }
  .assistance .table-drop ol li {
    padding-top: .5rem; }
    .assistance .table-drop ol li b {
      font-family: "LatoWeb"; }

.assistance h4.colored {
  color: #c70923; }

.assistance h4 i {
  display: inline-block;
  padding-left: 2.25rem;
  background: transparent url("../img/footer-icon-marker.svg") left center no-repeat;
  background-size: auto 2.5rem; }

.assistance h4 a {
  display: inline-block;
  padding-left: 2.25rem;
  background: transparent url("../img/footer-icon-phone.svg") left center no-repeat;
  background-size: auto 2.5rem;
  color: #000; }
  .assistance h4 a.mobile {
    background: transparent url("../img/icon-mobile.svg") left center no-repeat;
    background-size: auto 2.5rem; }

.assistance h4 span {
  font-family: "LatoWebLight";
  font-size: .72727272em;
  color: #000; }

.assistance .columns {
  width: 75%;
  -webkit-column-count: 3;
  -moz-column-count: 3;
  column-count: 3; }

.assistance .select-container {
  margin-top: 2rem;
  max-width: 400px; }
  .assistance .select-container .select li:before {
    display: none; }

.assistance .specifications {
  padding-bottom: 6rem; }

/* === Vacancies page === */
.vacancies .specifications {
  padding-top: 0;
  background-color: #fff; }

.vacancies .drop-header {
  background-color: #eee; }

.vacancies .drop-header:after {
  background-color: #eee; }

.vacancies .table-drop {
  text-align: left; }

.vacancies img {
  max-width: 100%; }

.out-drop {
  text-align: left; }

.out-drop h4 {
  font-family: "LatoWeb";
  font-size: 1.375em;
  margin-top: 4rem; }

/* === Insurance page === */
.insurance .arguments {
  margin-top: 0;
  background: none; }

.insurance .arguments .row {
  font-size: 0; }

.insurance .arguments .col {
  width: 25%;
  padding: 0 2.14286%;
  text-align: left;
  margin-top: 3rem;
  float: none;
  display: inline-block;
  vertical-align: top; }

.insurance .arguments .col img {
  position: static;
  float: none;
  margin: 0 auto;
  -webkit-transform: translate(0);
  -moz-transform: translate(0);
  -ms-transform: translate(0);
  transform: translate(0); }

.insurance .section-content:last-of-type {
  padding-bottom: 8rem; }

.insurance .section-content p {
  margin-top: 0; }

.insurance .section-content ul {
  margin-bottom: 1rem; }

.insurance .section-content li {
  position: relative;
  padding-left: 1.5rem;
  padding-bottom: .75rem; }

.insurance .section-content li:before {
  content: '';
  display: block;
  position: absolute;
  top: .7375em;
  left: 0;
  width: .4em;
  height: .4em;
  background-color: #c70923;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%; }

.insurance .section-content .with-icon {
  display: inline-block;
  padding-left: 2.25rem;
  background: transparent url("../img/footer-icon-phone.svg") left center no-repeat;
  background-size: auto 2.5rem;
  color: #000; }

.insurance .section-content .colored {
  color: #c70923; }

/* === Consultants page === */
.consultants {
  margin: 1.2rem auto; }
  .consultants ul {
    text-align: justify;
    font-size: 0; }
    .consultants ul:after {
      content: '';
      display: inline-block;
      width: 100%; }
  .consultants .categ-list {
    margin: 1rem 0; }
    .consultants .categ-list li {
      display: inline-block;
      font-family: "LatoWeb";
      float: none;
      width: inherit;
      margin-top: 1rem; }
    .consultants .categ-list input[type="radio"] {
      display: none; }
    .consultants .categ-list input[type="radio"]:checked + label {
      color: #c70923; }
    .consultants .categ-list label {
      padding: 10px;
      color: #000;
      cursor: pointer;
      -webkit-transition: all .2s;
      transition: all .2s; }
    .consultants .categ-list label:hover {
      color: #c70923;
      background-color: #eee; }
  .consultants-list ul {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    .consultants-list ul li {
      float: none;
      width: 45%;
      margin-right: 0;
      margin-bottom: 1rem;
      vertical-align: top; }
      .consultants-list ul li:nth-of-type(4n) {
        margin-right: 0; }
  .consultants-list .content {
    padding-top: .5rem;
    text-align: left; }
  .consultants-list .name {
    margin-top: 1rem; }
  .consultants-list .occupation p {
    min-height: 3.15em; }
  .consultants-list .tels p {
    margin-top: .5rem;
    padding-left: 30px; }
    @media screen and (max-width: 640px) {
      .consultants-list .tels p {
        padding-left: 20px; } }
  .consultants-list .tels .tel {
    background: transparent url("../img/footer-icon-phone.svg") left center no-repeat; }
    @media screen and (max-width: 668px) {
      .consultants-list .tels .tel {
        background-size: 10%; } }
  .consultants-list .tels .fax {
    background: transparent url("../img/icon-fax.svg") left center no-repeat; }
    @media screen and (max-width: 668px) {
      .consultants-list .tels .fax {
        background-size: 10%; } }
  .consultants-list .tels .mob {
    background: transparent url("../img/icon-mobile.svg") 0.75% center no-repeat; }
    @media screen and (max-width: 668px) {
      .consultants-list .tels .mob {
        background-size: 4%; } }
  .consultants-list .btn {
    padding: 12px 30px; }

/* === Questions page === */
.questions .title {
  text-align: left;
  padding-top: 1rem; }

.questions-page {
  padding-top: 7rem;
  font-family: "LatoWebLight"; }

.questions-item {
  padding-bottom: 3rem;
  text-align: left; }
  .questions-item:after {
    content: "";
    display: table;
    clear: both; }
  .questions-item .text {
    display: none; }

.questions .col-1 {
  width: 120px; }

.questions .col-2 {
  width: calc(100% - 120px);
  padding-left: 1.51515%;
  border-left: 1px solid #c70923; }

.questions .name {
  font-family: "LatoWeb"; }

.questions .date, .questions .answer {
  color: #6D6D6D; }

.questions .toggler .fa {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }

.questions .toggler.showing .fa {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg); }

.questions .pagination {
  margin-bottom: 6rem; }

.questions .link-more {
  position: absolute;
  bottom: 0;
  right: 0;
  display: inline-block;
  width: 50px;
  height: 50px;
  background-color: #c70923;
  overflow: hidden; }
  .questions .link-more:before, .questions .link-more:after {
    content: '';
    display: block;
    position: absolute;
    top: 25px;
    left: 20px;
    -webkit-transform: translate(-50%, -50%) rotate(-45deg);
    -ms-transform: translate(-50%, -50%) rotate(-45deg);
    transform: translate(-50%, -50%) rotate(-45deg);
    width: 14px;
    height: 14px;
    background-color: #c70923;
    box-shadow: 1px 1px #fff;
    transition: left .3s; }
  .questions .link-more:before {
    left: -30px; }
  .questions .link-more:hover:before {
    left: 20px; }
  .questions .link-more:hover:after {
    left: 70px; }

.questions .ask-form .title {
  text-align: left; }

.questions .ask-form .form-outer {
  margin-top: 0;
  padding-left: 0;
  padding-right: 0; }
  .questions .ask-form .form-outer .text {
    text-align: center; }
  .questions .ask-form .form-outer img {
    display: block;
    margin: 0 auto; }

.questions .ask-form .half-width {
  display: inline-block;
  width: 48.3871%; }
  .questions .ask-form .half-width:nth-of-type(even) {
    float: right; }

/* === Buy car page === */
.buy-car {
  text-align: left; }
  .buy-car .section-content {
    padding-bottom: 1rem;
    width: 93%;
    margin: 0 auto; }
    .buy-car .section-content:after {
      content: "";
      display: table;
      clear: both; }
  .buy-car .title-step {
    margin-top: 2rem; }
    .buy-car .title-step p {
      text-align: left;
      font-size: 0.91em; }
    .buy-car .title-step span {
      display: inline-block;
      margin-right: 1rem;
      color: #c70923; }
  .buy-car .section-content > .col {
    width: 100%;
    margin: 0 auto; }
  .buy-car .select-container {
    text-align: left; }
    .buy-car .select-container ul {
      z-index: 51; }
  .buy-car #buy_car .car-colors-pager .page-btn-outer {
    width: 17%; }
  .buy-car .car-colors .col {
    float: none; }
    .buy-car .car-colors .col .bx-controls {
      display: none; }
    .buy-car .car-colors .col li img {
      max-width: 100%;
      display: block; }
    .buy-car .car-colors .col .car-colors-pager {
      height: 10px; }
  .buy-car .ask-form .form-outer {
    width: 100%; }
    .buy-car .ask-form .form-outer .text {
      text-align: left;
      font-size: 0.6061rem;
      line-height: 1.5;
      line-height: 1.5; }

/* === News page === */
/* === News/Specials page === */
.news .section-ask {
  background: transparent url("../img/news-bg.jpg") center no-repeat; }

.news .input-outer {
  width: 25.71429%;
  float: left;
  margin-top: 2.85714%;
  margin-right: 2.85714%; }
  .news .input-outer input {
    box-sizing: border-box;
    width: 100%;
    padding: .5em .75em;
    border: 1px solid #989898;
    outline: none;
    background-color: rgba(255, 255, 255, 0);
    transition: background-color .3s; }
    .news .input-outer input::-webkit-input-placeholder {
      font-family: "LatoWeb";
      color: #000; }
    .news .input-outer input:-moz-placeholder {
      /* Firefox 18- */
      font-family: "LatoWeb";
      color: #000; }
    .news .input-outer input::-moz-placeholder {
      /* Firefox 19+ */
      font-family: "LatoWeb";
      color: #000; }
    .news .input-outer input:-ms-input-placeholder {
      font-family: "LatoWeb";
      color: #000; }
    .news .input-outer input:focus {
      background-color: white; }
    .news .input-outer input.error {
      border: 1px solid #c70923; }

.news .btn {
  position: relative;
  margin-top: 2.85714%;
  border: 1px solid #c70923;
  padding: .3em .8em; }
  .news .btn:hover {
    color: #c70923; }
  .news .btn span {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    display: inline-block; }

.news button.btn {
  vertical-align: top; }
  .news button.btn span {
    -webkit-transform: translateY(0%) !important;
    -moz-transform: translateY(0%) !important;
    -ms-transform: translateY(0%) !important;
    transform: translateY(0%) !important; }

.news .section-tabs {
  width: 93%;
  margin: 0 auto; }
  .news .section-tabs .row {
    width: 100%;
    margin-left: 0.6%; }
  .news .section-tabs .col {
    border-bottom: none;
    width: 99%;
    margin-bottom: 2rem; }
    .news .section-tabs .col a {
      color: #000; }
  .news .section-tabs .content {
    padding: 5.61818% 0;
    border-right: none;
    border-left: none; }
  .news .section-tabs .text {
    height: calc(2em * 1.6625); }
    .news .section-tabs .text p {
      margin-top: .5rem; }
      .news .section-tabs .text p:after {
        width: 80px;
        top: calc(1em * 2.1625); }
  .news .section-tabs .tab-titles li h2 {
    padding: 0 0.675rem;
    padding-bottom: .0375rem; }

.pagination {
  position: relative;
  display: inline-block;
  padding-right: 50px;
  padding-top: 6px; }
  .pagination ul {
    display: inline-block;
    list-style: none; }
    .pagination ul:after {
      content: '';
      display: table;
      clear: both; }
  .pagination li {
    float: left;
    margin-right: 2rem; }
    .pagination li a {
      color: #000; }
      .pagination li a.active, .pagination li a:hover {
        color: #c70923; }
  .pagination .link-more {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    bottom: auto; }

/* === News/Specials single page === */
.news-single {
  padding-top: 2rem;
  padding-bottom: .9rem;
  width: 93%;
  margin: 1.5rem auto; }
  .news-single .date {
    padding-top: 1.5rem;
    font-family: "LatoWebLight"; }
  .news-single .img-outer {
    margin: 2rem 0 2.5rem; }
  .news-single .table {
    padding-top: 2rem; }
    .news-single .table table {
      width: 100%;
      font-family: "LatoWebLight";
      text-align: center; }
      .news-single .table table tr:first-child {
        font-family: "LatoWeb";
        background-color: #eee; }
      .news-single .table table td, .news-single .table table th {
        width: 33.33333333%;
        padding: .5rem;
        vertical-align: middle;
        border: 1px solid #c2c0c0; }
  .news-single .wrap {
    width: 100%;
    max-width: 93%;
    margin: 0 auto; }
  .news-single .text p {
    margin-top: 2.25rem; }

/* === Contacts page === */
.contacts .row {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .contacts .row:after {
    content: " ";
    display: block;
    clear: both; }

.contacts .col {
  width: 93%;
  margin: 1rem auto; }

.contacts .sub-title {
  position: relative;
  font-family: "LatoWebLight";
  text-transform: uppercase; }
  .contacts .sub-title img {
    width: 28px;
    display: block;
    position: absolute;
    top: 50%;
    left: 0;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%); }
    @media screen and (max-width: 668px) {
      .contacts .sub-title img {
        width: 18px; } }
  .contacts .sub-title p {
    padding-left: 40px; }
    @media screen and (max-width: 668px) {
      .contacts .sub-title p {
        padding-left: 25px; } }

.contacts .sub-col {
  float: left;
  width: 50%;
  padding-top: 1.5rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem; }
  .contacts .sub-col:last-of-type {
    width: 100%; }

.contacts .text p, .contacts .text address {
  margin-top: 1.25rem;
  font-family: "LatoWebLight"; }

.contacts .input-outer {
  width: 48%;
  float: left;
  margin-top: 2.85714%; }
  .contacts .input-outer:nth-of-type(even) {
    margin-left: 4%; }
  .contacts .input-outer input, .contacts .input-outer textarea {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    border: solid 1px #888;
    padding: .5em 1.25em; }
  .contacts .input-outer input::-webkit-input-placeholder, .contacts .input-outer textarea::-webkit-input-placeholder {
    font-family: "LatoWebLight";
    color: #000; }
  .contacts .input-outer input:-moz-placeholder, .contacts .input-outerr textarea:-moz-placeholder {
    /* Firefox 18- */
    font-family: "LatoWebLight";
    color: #000; }
  .contacts .input-outer input::-moz-placeholder, .contacts .input-outer textarea::-moz-placeholder {
    /* Firefox 19+ */
    font-family: "LatoWebLight";
    color: #000; }
  .contacts .input-outer input:-ms-input-placeholder, .contacts .input-outer textarea:-ms-input-placeholder {
    font-family: "LatoWebLight";
    color: #000; }
  .contacts .input-outer textarea {
    min-height: 7.5em; }
  .contacts .input-outer.lastoftype {
    width: 100%;
    float: left; }

.contacts select {
  display: none; }

.contacts .select-container {
  position: relative;
  border: 0px solid #989898; }
  .contacts .select-container ul {
    position: absolute;
    left: -1px;
    top: calc(100% + 4px);
    width: calc(100% + 2px);
    background-color: #fff;
    border: 1px solid #989898;
    z-index: 1;
    display: none; }
  .contacts .select-container span {
    display: inline-block;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    position: relative;
    z-index: 1;
    border: solid 1px #888;
    cursor: pointer; }
  .contacts .select-container li:hover {
    color: #c70923; }
  .contacts .select-container span, .contacts .select-container li {
    padding: .5em 1.25em;
    font-family: "LatoWebLight";
    cursor: default; }
    @media screen and (max-width: 668px) {
      .contacts .select-container span, .contacts .select-container li {
        padding: .4em 1.25em; } }
  .contacts .select-container .curr-opt {
    color: #c70923; }
  .contacts .select-container .fa {
    position: absolute;
    top: 15%;
    right: 1rem;
    color: #989898;
    cursor: pointer;
    transition: -webkit-transform .3s;
    transition: transform .3s;
    transition: transform .3s, -webkit-transform .3s; }
    .contacts .select-container .fa.rotated {
      -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
      transform: rotate(180deg); }

.contacts .form-send__button {
  float: left;
  width: 100%; }

.contacts button {
  display: block;
  width: 75%;
  margin: 1rem auto;
  padding-top: 3.125%;
  padding-bottom: 3.125%;
  font-family: "LatoWeb";
  border: none;
  border: 1px solid #c70923;
  -webkit-transition: all .3s;
  transition: all .3s; }
  .contacts button:hover {
    color: #c70923;
    background-color: #fff; }

.contacts .consultants {
  width: 93%;
  margin: 0 auto; }
  .contacts .consultants .categ-list {
    margin: 1.5rem 0; }

.map {
  min-height: 440px; }

/* === Loyalty page === */
.loyalty .section-content {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  margin: 0 auto;
  width: 93%; }

.loyalty .specifications {
  padding-top: 0;
  padding-bottom: 0;
  background-color: transparent; }
  .loyalty .specifications .drop-header {
    background-color: #eee; }
    .loyalty .specifications .drop-header:after {
      background-color: #eee; }
  .loyalty .specifications .table-drop {
    padding: 3rem 1.5rem; }
  .loyalty .specifications h4 {
    font-family: "LatoWeb";
    font-size: 1.375em; }
  .loyalty .specifications span {
    color: #c70923; }
  .loyalty .specifications ul {
    margin-top: 1rem; }
  .loyalty .specifications li {
    position: relative;
    padding-left: 1.75rem;
    padding-bottom: .75rem; }
    .loyalty .specifications li:before {
      content: '';
      display: block;
      position: absolute;
      top: .7375em;
      left: 0;
      width: .4em;
      height: .4em;
      background-color: #c70923;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%; }

.loyalty .title {
  text-align: left; }
  .loyalty .title p {
    font-family: "LatoWebLight"; }
    .loyalty .title p a {
      font-size: 1.375em;
      color: #c70923; }

.loyalty table {
  table-layout: fixed;
  width: 93%;
  margin: 0 auto;
  margin-top: 2.25rem;
  border: 1px solid #c1bfbf;
  text-align: center; }
  .loyalty table td, .loyalty table th {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding: .5rem 1.5rem;
    vertical-align: middle;
    border: 1px solid #c1bfbf;
    width: 20%;
    max-width: 20%; }
  .loyalty table td:nth-child(n + 3), .loyalty table th:nth-child(n + 3) {
    color: #c70923; }
  .loyalty table tr:last-child th {
    color: #c70923; }

.loyalty .tels p {
  margin-top: 0;
  background-size: auto 3.25rem; }
  .loyalty .tels p:last-child {
    background-size: auto 2.5rem; }

.loyalty .arguments {
  padding: 1rem 3.5%; }
  .loyalty .arguments ul li {
    float: none;
    width: 100%; }
    .loyalty .arguments ul li img {
      width: 10%; }

/* === Favour page === */
/* === Favour page === */
.favour select {
  display: none; }

.favour .book-form {
  background: transparent url("../img/favours-bg.jpg") center no-repeat;
  text-align: right;
  background-size: cover;
  padding: 2rem 0; }
  .favour .book-form .text p {
    margin-top: 4.16667%;
    font-family: "LatoWebLight";
    font-size: 12px;
    line-height: 1.8; }

.favour .form-outer {
  width: 93%;
  display: block;
  margin: 2rem auto;
  padding: 2.85714%;
  text-align: initial;
  background-color: rgba(255, 255, 255, 0.9); }

.favour .input-outer {
  width: 100%;
  margin-top: 4.16667%; }
  .favour .input-outer input, .favour .input-outer textarea {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    padding: .5em .8em;
    background: transparent;
    border: 1px solid #989898; }
  .favour .input-outer input::-webkit-input-placeholder, .favour .input-outer textarea::-webkit-input-placeholder {
    font-family: "LatoWebLight";
    color: #000; }
  .favour .input-outer input:-moz-placeholder, .favour .input-outer textarea:-moz-placeholder {
    /* Firefox 18- */
    font-family: "LatoWebLight";
    color: #000; }
  .favour .input-outer input::-moz-placeholder, .favour .input-outer textarea::-moz-placeholder {
    /* Firefox 19+ */
    font-family: "LatoWebLight";
    color: #000; }
  .favour .input-outer input:-ms-input-placeholder, .favour .input-outer textarea:-ms-input-placeholder {
    font-family: "LatoWebLight";
    color: #000; }
  .favour .input-outer textarea {
    min-height: 7.5em; }

.favour button.btn {
  width: 100%;
  margin-top: 4.16667%;
  padding-top: 3.125%;
  padding-bottom: 3.125%;
  font-family: "LatoWeb";
  border: none;
  border: 1px solid #c70923;
  -webkit-transition: all .3s;
  transition: all .3s; }
  .favour button.btn:hover {
    color: #c70923;
    background-color: #fff; }

.favour .section-content {
  padding-bottom: 1rem;
  text-align: center;
  width: 93%;
  margin: 0 auto; }

.favour .slider {
  position: relative;
  margin-top: 2.25rem;
  overflow-x: hidden; }
  .favour .sliderimg {
    display: block;
    width: 100%; }
  .favour .slider .bx-wrapper .bx-pager {
    bottom: auto;
    top: 100%; }

.select-container {
  position: relative;
  border: 1px solid #989898; }
  .select-container ul {
    position: absolute;
    left: -1px;
    top: calc(100% + 4px);
    width: calc(100% + 0px);
    background-color: #fff;
    border: 1px solid #989898;
    z-index: 2;
    display: none; }
  .select-container span {
    display: inline-block;
    box-sizing: border-box;
    width: 100%;
    position: relative;
    z-index: 1;
    cursor: pointer; }
  .select-container li:hover {
    color: #c70923; }
  .select-container span, .select-container li {
    padding: .6em .8em .5em;
    font-family: "LatoWebLight";
    cursor: default; }
  .select-container .curr-opt {
    color: #c70923; }
  .select-container .fa {
    position: absolute;
    top: 1px;
    right: 1rem;
    color: #989898;
    font-size: 2rem;
    transition: -webkit-transform .3s;
    transition: transform .3s;
    transition: transform .3s, -webkit-transform .3s; }
    .select-container .fa.rotated {
      -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
      transform: rotate(180deg); }
  .select-container a {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0; }

.controls a {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0; }

.controls .prev {
  position: absolute;
  top: 50%;
  display: inline-block;
  width: 50px;
  height: 50px;
  margin-top: -25px;
  background-color: rgba(255, 255, 255, 0.35);
  overflow: hidden;
  transition: all .3s; }
  .controls .prev:before {
    content: '';
    display: block;
    position: absolute;
    top: 25px;
    left: 20px;
    -webkit-transform: translate(-50%, -50%) rotate(-45deg);
    -ms-transform: translate(-50%, -50%) rotate(-45deg);
    transform: translate(-50%, -50%) rotate(-45deg);
    width: 14px;
    height: 14px;
    background-color: rgba(255, 255, 255, 0);
    box-shadow: 1px 1px #c70923;
    transition: all .3s; }
  .controls .prev:hover {
    background-color: rgba(199, 9, 35, 0.35); }
    .controls .prev:hover:before {
      box-shadow: 1px 1px #fff; }

.controls .next {
  position: absolute;
  top: 50%;
  display: inline-block;
  width: 50px;
  height: 50px;
  margin-top: -25px;
  background-color: rgba(255, 255, 255, 0.35);
  overflow: hidden;
  transition: all .3s; }
  .controls .next:before {
    content: '';
    display: block;
    position: absolute;
    top: 25px;
    left: 20px;
    -webkit-transform: translate(-50%, -50%) rotate(-45deg);
    -ms-transform: translate(-50%, -50%) rotate(-45deg);
    transform: translate(-50%, -50%) rotate(-45deg);
    width: 14px;
    height: 14px;
    background-color: rgba(255, 255, 255, 0);
    box-shadow: 1px 1px #c70923;
    transition: all .3s; }
  .controls .next:hover {
    background-color: rgba(199, 9, 35, 0.35); }
    .controls .next:hover:before {
      box-shadow: 1px 1px #fff; }

.controls .prev {
  left: 0; }
  .controls .prev:before {
    left: 30px;
    -webkit-transform: translate(-50%, -50%) rotate(135deg);
    -ms-transform: translate(-50%, -50%) rotate(135deg);
    transform: translate(-50%, -50%) rotate(135deg); }

.controls .next {
  right: 0; }

/* === Footer page === */
/* === Footer module === */
.footer {
  position: absolute;
  bottom: 0;
  overflow: hidden;
  height: 27.03125vw;
  min-height: 730px;
  max-height: 800px;
  width: 100%; }
  @media all and (max-width: 768px) {
    .footer {
      min-height: 490px; } }
  @media all and (max-width: 460px) {
    .footer {
      min-height: 280px; } }
  .footer .parallax-bg {
    position: absolute;
    top: 0;
    left: 0;
    min-width: 100%;
    height: 80.718426501035196687370600414079vw;
    background: transparent url("../img/footer-bg.jpg") center no-repeat;
    background-size: cover; }
    @media all and (max-width: 768px) {
      .footer .parallax-bg {
        height: 73.718426501035196687370600414079vw; } }
    @media all and (max-width: 460px) {
      .footer .parallax-bg {
        height: 98.718426501035196687370600414079vw; } }
  .footer .outer {
    position: relative;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8); }
  .footer .vertical-center {
    width: 100%;
    position: relative;
    left: 0;
    top: 43%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    left: 0; }
    @media all and (max-width: 768px) {
      .footer .vertical-center {
        top: 54%; } }
  .footer .row {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto; }
    .footer .row:after {
      content: " ";
      display: block;
      clear: both; }
  .footer .col {
    width: 100%;
    float: left;
    margin-top: 2%;
    text-align: center; }
    .footer .col:nth-of-type(3n) {
      margin-right: 0; }
    .footer .col img {
      display: block; }
    .footer .col .icon {
      display: inline-block;
      width: 4vw;
      max-width: 2rem; }
    @media only screen and (max-width: 960px) {
      .footer .col .icon {
        max-width: 100%;
        min-width: 2.5rem; } }
    @media only screen and (max-width: 768px) {
      .footer .col .icon {
        min-width: 2rem; } }
    @media only screen and (max-width: 680px) {
      .footer .col .icon {
        min-width: 2rem; } }
  .footer .title {
    padding: 0;
    color: #c70923; }
  .footer .text p, .footer .text a {
    font-family: "LatoWebLight";
    color: #fff;
    margin-right: 1rem; }
  .footer .soc {
    position: absolute;
    bottom: calc(2.66% - 15px);
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
    @media all and (max-width: 768px) {
      .footer .soc {
        bottom: calc(4.66% - 15px); } }
    .footer .soc .icon {
      padding: 0 .25rem;
      color: #fff;
      transition: color .3s; }
      .footer .soc .icon:hover {
        color: #c70923; }
  @media only screen and (max-width: 960px) {
    .footer .vertical-center {
      -webkit-transform: translateY(-55%);
      -ms-transform: translateY(-55%);
      transform: translateY(-55%); } }
  @media only screen and (max-width: 768px) {
    .footer .vertical-center {
      -webkit-transform: translateY(-62%);
      -ms-transform: translateY(-62%);
      transform: translateY(-62%); } }

.write-us {
  position: relative;
  margin-top: .7rem;
  text-align: center;
  overflow: hidden; }
  .write-us p {
    display: inline-block;
    padding: 0 1.375rem;
    text-transform: uppercase;
    background-color: #fff; }
  .write-us:before, .write-us:after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    width: 780px;
    width: calc(46.4% - 4.4rem);
    height: 1px;
    background-color: #d2d2d2;
    z-index: -1; }
  .write-us:before {
    left: 0; }
  .write-us:after {
    right: 0; }
  @media only screen and (max-width: 960px) {
    .write-us:before, .write-us:after {
      width: calc(42% - 4.4rem); } }
  @media only screen and (max-width: 768px) {
    .write-us:before, .write-us:after {
      width: calc(41% - 4.4rem); } }

.btn-stroke {
  display: inline-block;
  padding: 1.42857% 5%;
  color: #c70923;
  border: 1px solid #c70923;
  -webkit-transition: all .3s;
  transition: all .3s; }
  .btn-stroke:hover {
    background-color: #c70923;
    color: #fff; }

/* === 404 page === */
/* === 404 page === */
.page-404 {
  padding: 2.5rem 0;
  background-color: #fff;
  text-align: center; }

.page-404 .title {
  font-family: "LatoWeb";
  font-size: 9.697rem;
  color: #a5a5a5;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.page-404 .text p {
  margin-top: 0; }

.page-404 .text a {
  color: #c70923; }

.page-404 img {
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: 22%; }

/* === Credit page === */
.credit .no-pad-top {
  padding-top: 0; }

.credit .double-pad-bottom {
  padding-bottom: 7.5rem; }

.credit .section-content li {
  position: relative;
  padding-left: 1.75rem;
  padding-bottom: .75rem; }

.credit .section-content li:before {
  content: '';
  display: block;
  position: absolute;
  top: .7375em;
  left: 0;
  width: .4em;
  height: .4em;
  background-color: #c70923;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%; }

.credit .tels p:last-child {
  background-size: auto 3.25rem; }

.credit .table-drop img {
  display: block;
  margin: 0 auto; }

.credit table td:nth-child(n + 3) {
  color: #000; }

/* === Special offers page === */
.spec-offers .section-content.pad-bottom {
  padding-bottom: 10rem; }

.spec-offers .section-content p:first-child {
  margin-top: 0; }

.spec-offers .section-content ul {
  margin-top: 1.5rem; }

.spec-offers .tels p:last-child {
  background: transparent url(../img/icon-mobile.svg) left center no-repeat;
  background-size: auto 2.5rem; }

.spec-offers .table-drop img {
  display: block;
  max-width: 100%;
  margin: 0 auto; }

/* === Search result page === */
.search-result p a {
  color: #c70923; }

.search-result .section-content {
  padding-bottom: 6rem; }

.search-result .result {
  padding-top: 4.5rem; }

.search-result .result:first-child {
  padding-top: 0; }

.search-result .result .section {
  color: #c70923; }

.search-result .result a {
  color: #000; }

.search-result .result .post {
  padding-top: 3rem; }

.search-result .result .text p {
  margin-top: .75rem; }

.search-result .result .btn {
  padding: 1.07143% 2.14286%;
  color: #fff; }

.search-result .pagination {
  margin-top: 3rem;
  margin-bottom: 4rem; }

.search-result .pagination .link-more {
  position: absolute;
  top: 50%;
  right: 0;
  display: inline-block;
  width: 50px;
  height: 50px;
  background-color: #c70923;
  overflow: hidden; }

.search-result .pagination .link-more:before, .search-result .pagination .link-more:after {
  content: '';
  display: block;
  position: absolute;
  top: 25px;
  left: 20px;
  -webkit-transform: translate(-50%, -50%) rotate(-45deg);
  -moz-transform: translate(-50%, -50%) rotate(-45deg);
  -ms-transform: translate(-50%, -50%) rotate(-45deg);
  transform: translate(-50%, -50%) rotate(-45deg);
  width: 14px;
  height: 14px;
  background-color: #c70923;
  -webkit-box-shadow: 1px 1px #fff;
  -moz-box-shadow: 1px 1px #fff;
  box-shadow: 1px 1px #fff;
  -webkit-transition: left .3s;
  transition: left .3s; }

.search-result .pagination .link-more:before {
  left: -30px; }

.search-result .pagination .link-more:hover:before {
  left: 20px; }

.search-result .pagination .link-more:hover:after {
  left: 70px; }

.search-result .section-tabs {
  padding-bottom: 9rem; }

.search-result .section-tabs .content {
  border-bottom: 1px solid #c70923; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInV0aWxpdGllcy9fZnVuY3Rpb25zLnNjc3MiLCJ1dGlsaXRpZXMvX2ZvbnRzLnNjc3MiLCJiYXNlL19yZXNldC5zY3NzIiwiYmFzZS9fYmFzZS5zY3NzIiwidXRpbGl0aWVzL192YXJzLnNjc3MiLCJiYXNlL19mb250LXNjaGVtZS5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19yZW0uc2NzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fY29udGFpbmVyLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19jbGVhcmZpeC5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fbWFpbi5zY3NzIiwibGF5b3V0L19mb290ZXIuc2NzcyIsImxheW91dC9fc2lkZWJhci5zY3NzIiwibW9kdWxlcy9fMDFfdG9wLWhlYWRlci5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19zcGFuLnNjc3MiLCJtb2R1bGVzL18wMl90b3AtbmF2LnNjc3MiLCJtb2R1bGVzL18wM19zdWItbmF2LnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX2RpcmVjdGlvbi5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19ndXR0ZXJzLnNjc3MiLCJtb2R1bGVzL18wNF9zbGlkZXIuc2NzcyIsIm1vZHVsZXMvXzA1X3NpZGUtZmxvYXRlci5zY3NzIiwibW9kdWxlcy9fMDZfY2Fycy5zY3NzIiwibW9kdWxlcy9fMDdfYXNrLnNjc3MiLCJtb2R1bGVzL18wOF90YWJzLnNjc3MiLCJtb2R1bGVzL18wOV9mb290ZXIuc2NzcyIsIm1vZHVsZXMvXzEwX3BvcHVwcy5zY3NzIiwibW9kdWxlcy9wYWdlcy9fYWJvdXQuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX2NvbnRhY3RzLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19zZXJ2aWNlLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19sb3lhbHR5LnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19uZXdzLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19uZXdzLXNpbmdsZS5zY3NzIiwibW9kdWxlcy9wYWdlcy9fZmF2b3Vycy5zY3NzIiwibW9kdWxlcy9wYWdlcy9fY2Fycy5zY3NzIiwibW9kdWxlcy9wYWdlcy9fZXF1aXBtZW50LnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19ib2R5LXJlcGFpci1saWdodC5zY3NzIiwibW9kdWxlcy9wYWdlcy9fYm9keS1yZXBhaXIuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX2Zhdm91ci1jb3Jwb3JhdGUtdHJhZGUuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX3BhcnRzLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL193YXJyYW50eS5zY3NzIiwibW9kdWxlcy9wYWdlcy9fYWNjZXNzb3JpZXMuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX3RyYWRlLWluLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19wcm90ZWN0LnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19hc3Npc3RhbmNlLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL192YWNhbmNpZXMuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX2Zhdm91ci1pbnN1cmFuY2Uuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX2NvbnN1bHRhbnRzLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19xdWVzdGlvbnMuc2NzcyIsInV0aWxpdGllcy9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19mYXZvdXItYnV5LnNjc3MiLCJtb2R1bGVzL3BhZ2VzL180MDQuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX2Zhdm91ci1jcmVkaXQuc2NzcyIsIm1vZHVsZXMvcGFnZXMvX3NwZWNpYWwtb2ZmZXJzLnNjc3MiLCJtb2R1bGVzL3BhZ2VzL19zZWFyY2gtcmVzdWx0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDS2pCOzs7O0VBSUU7QUNURiwyQkFBMkI7QUFDM0I7RUFDSSx1QkFBdUI7RUFDdkIsc0NBQVE7RUFBK0Isc0JBQXNCO0VBQzdELG9PQUc0QztFQUM1QyxtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLG1DQUFtQyxFQUFBOztBQUd2Qyx5QkFBeUI7QUFDekI7RUFDSSw0QkFBNEI7RUFDNUIsb0NBQVE7RUFBNkIsc0JBQXNCO0VBQzNELDROQUcwQztFQUMxQyxtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLG1DQUFtQyxFQUFBOztBQUd2QywwQkFBMEI7QUFDMUI7RUFDSSw2QkFBNkI7RUFDN0IscUNBQVE7RUFBOEIsc0JBQXNCO0VBQzVELGdPQUcyQztFQUMzQyxtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLG1DQUFtQyxFQUFBOztBQUd2Qyw0QkFBNEI7QUFDNUI7RUFDSSwrQkFBK0I7RUFDL0IsdUNBQVE7RUFBZ0Msc0JBQXNCO0VBQzlELHdPQUc2QztFQUM3QyxtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLG1DQUFtQyxFQUFBOztBQ2pEdkM7OztFQUdFO0FBRUY7Ozs7Ozs7Ozs7Ozs7RUFhRSxVQUFVO0VBQ1YsV0FBVztFQUNYLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLHlCQUF5QixFQUMxQjs7QUFDRCxpREFBaUQ7QUFDakQ7O0VBRUUsZUFBZSxFQUNoQjs7QUFDRDtFQUNFLGVBQWUsRUFDaEI7O0FBQ0Q7RUFDRSxpQkFBaUIsRUFDbEI7O0FBQ0Q7RUFDRSxhQUFhLEVBQ2Q7O0FBQ1M7O0VBRVIsWUFBWTtFQUNaLGNBQWMsRUFDZjs7QUFDRDtFQUNFLDBCQUEwQjtFQUMxQixrQkFBa0IsRUFDbkI7O0FDL0NELHlCQUF5QjtBQUd6QjtFQUNFLGdCQUhtQixFQUlwQjs7QUFFRDtFQUVFO0lBQ0UsZ0JBRm1CLEVB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LFlsRHBCTyxFa0RxQlI7RUF6Qkw7SUE0Qk0sa0JBQWtCLEVBS25CO0VBR0M7SUFDRSxtQkFBbUIsRUFDcEI7RUF0Q1A7SUEwQ00sMkJ2QytHa0I7SXVDOUdsQixZbER0Q08sRWtEdUNSOztBQTVDTDtFQWdESSxpQkFBaUI7RUFDakIsb0JBQW9CLEVBc0NyQjtFQXBDQztJQUNFLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsU0FBUztJQUNULHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osYUFBYTtJQUNiLDBCbER2RFM7SWtEd0RULGlCQUFpQixFQTJCbEI7SUF0Rkw7TUE4RFEsWUFBWTtNQUNaLGVBQWU7TUFDZixtQkFBbUI7TUFDbkIsVUFBVTtNQUNWLFdBQVc7TUFDWCx3REFBdUM7U0FBdkMscURBQXVDO2NBQXZDLGdEQUF1QztNQUN2QyxZQUFZO01BQ1osYUFBYTtNQUNiLDBCbERuRU87TWtEb0VQLGlDbERsRUs7U2tEa0VMLDhCbERsRUs7Y2tEa0VMLHlCbERsRUs7TWtEbUVMLDZCQUFxQjtjQUFyQixxQkFBcUIsRUFDdEI7SUF0Qkg7TUF5QkksWUFBWSxFQUNiO0lBMUJIO01BNkJJLFdBQVcsRUFDWjtJQWpGUDtNQW9GUSxXQUFXLEVBQ1o7O0FBSUw7RUFDRSxxQkFBcUIsRUFLdEI7RUFIQztJQUNFLGlDbEQxRlMsRWtEMkZWIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qIHNldCB5b3VyIGJhc2UgZm9udCBhbmQgdW5jb21tZW50XHJcblxyXG4kYmFzZS1mb250LXNpemU6IDE1cHg7XHJcblxyXG4qL1xuLyogV2ViZm9udDogTGF0by1SZWd1bGFyICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvV2ViJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9MYXRvLVJlZ3VsYXIuZW90XCIpO1xuICAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTGF0by1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0xhdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvTGF0by1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvTGF0by1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbi8qIFdlYmZvbnQ6IExhdG8tTGlnaHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0xhdG9XZWJMaWdodCc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTGF0by1MaWdodC5lb3RcIik7XG4gIC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgc3JjOiB1cmwoXCIuLi9mb250cy9MYXRvLUxpZ2h0LmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0xhdG8tTGlnaHQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL0xhdG8tTGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9MYXRvLUxpZ2h0LnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbi8qIFdlYmZvbnQ6IExhdG8tTWVkaXVtICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvV2ViTWVkaXVtJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9MYXRvLU1lZGl1bS5lb3RcIik7XG4gIC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgc3JjOiB1cmwoXCIuLi9mb250cy9MYXRvLU1lZGl1bS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9MYXRvLU1lZGl1bS53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvTGF0by1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9MYXRvLU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG4vKiBXZWJmb250OiBMYXRvLVNlbWlib2xkICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXRvV2ViU2VtaWJvbGQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL0xhdG8tU2VtaWJvbGQuZW90XCIpO1xuICAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTGF0by1TZW1pYm9sZC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9MYXRvLVNlbWlib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9MYXRvLVNlbWlib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvTGF0by1TZW1pYm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG4vKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBjb250ZW50OiBub25lOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuLyogPT09IEJhc2Ugc3R5bGVzID09PSAqL1xuaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTZweDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxOTAwcHgpIHtcbiAgaHRtbCwgYm9keSB7XG4gICAgZm9udC1zaXplOiAxNnB4OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTcwMHB4KSB7XG4gIGh0bWwsIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1OTlweCkge1xuICBodG1sLCBib2R5IHtcbiAgICBmb250LXNpemU6IDEzcHg7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDMwcHgpIHtcbiAgaHRtbCwgYm9keSB7XG4gICAgZm9udC1zaXplOiAxMnB4OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMyMHB4KSB7XG4gIGh0bWwsIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogOHB4OyB9IH1cblxuaDEsIGgyLCBoMywgYSwgcCwgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjsgfVxuXG5kaXYsIHNlY3Rpb24sIGhlYWRlciwgZm9vdGVyLCBuYXYge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLndyYXBwZXIge1xuICBwYWRkaW5nLXRvcDogY2FsYyg3Ljc1cmVtICsgMjZweCk7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNjYwcHgpIHtcbiAgICAud3JhcHBlciB7XG4gICAgICBwYWRkaW5nLXRvcDogY2FsYyg3Ljc1cmVtICsgMjRweCk7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xuICAgIC53cmFwcGVyIHtcbiAgICAgIHBhZGRpbmctdG9wOiBjYWxjKDcuNzVyZW0gKyAyMXB4KTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgLndyYXBwZXIge1xuICAgICAgcGFkZGluZy10b3A6IGNhbGMoNy43NXJlbSArIDE5cHgpOyB9IH1cblxuLnRvLWhpZGUge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDUyOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgLnRvLWhpZGUge1xuICAgICAgbWluLXdpZHRoOiAxMDI0cHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IH0gfVxuXG5mb3JtIC5pbnB1dC1vdXRlciBpbnB1dC5lcnJvciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjNzA5MjM7IH1cblxuLnVuZGVyLWxpbmVkOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA0cHg7XG4gIG1hcmdpbi10b3A6IC45Mzc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzOyB9XG5cbi51bmRlci1jZW50ZXJlZDphZnRlciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cblxuLnVuZGVyLWxpbmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDRweDtcbiAgbWFyZ2luLXRvcDogLjkzNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XG4gIHRyYW5zaXRpb246IGFsbCAuN3M7IH1cblxuLmNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOyB9XG4gIC5oZWFkZXIgLmxvYWRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjZzIGVhc2Utb3V0OyB9XG4gICAgLmhlYWRlciAubG9hZGVyLmxvYWRpbmcge1xuICAgICAgb3BhY2l0eTogMTsgfVxuXG4vKiA9PT0gQmFzZSBGb250IHNjaGVtZSA9PT0gKi9cbi5mb250QSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuODc1OyB9XG5cbi5mb250QUEge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU2MjU7IH1cblxuLmZvbnRBQiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNTYyNTsgfVxuXG4uZm9udEIge1xuICBmb250LXNpemU6IDE5cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7IH1cblxuLmZvbnRDIHtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG5cbi5mb250RCB7XG4gIGZvbnQtc2l6ZTogMjZweDtcbiAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuXG4uZm9udEUge1xuICBmb250LXNpemU6IDMycHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7IH1cblxuLmZvbnRGIHtcbiAgZm9udC1zaXplOiA1MnB4O1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTY2MHB4KSB7XG4gIC5mb250QSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NTsgfVxuICAuZm9udEFBIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTYyNTsgfVxuICAuZm9udEIge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5mb250QyB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmZvbnREIHtcbiAgICBmb250LXNpemU6IDIzcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEUge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5mb250RiB7XG4gICAgZm9udC1zaXplOiA0NnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEzMjBweCkge1xuICAuZm9udEEge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMS44NzU7IH1cbiAgLmZvbnRBQSB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7IH1cbiAgLmZvbnRCIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEMge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5mb250RCB7XG4gICAgZm9udC1zaXplOiAyM3B4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmZvbnRFIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEYge1xuICAgIGZvbnQtc2l6ZTogNDZweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHtcbiAgLmZvbnRBIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuODc1OyB9XG4gIC5mb250QUEge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMS41NjI1OyB9XG4gIC5mb250QiB7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmZvbnRDIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEQge1xuICAgIGZvbnQtc2l6ZTogMjNweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5mb250RSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmZvbnRGIHtcbiAgICBmb250LXNpemU6IDM4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gIC5mb250QSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7IH1cbiAgLmZvbnRBQSB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7IH1cbiAgLmZvbnRBQiB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7IH1cbiAgLmZvbnRCIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEMge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5mb250RCB7XG4gICAgZm9udC1zaXplOiAyMXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmZvbnRFIHtcbiAgICBmb250LXNpemU6IDIzcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAuZm9udEYge1xuICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICBsaW5lLWhlaWdodDogMS4yOyB9IH1cblxuLyogPT09IExheW91dCBncmlkID09PSAqL1xuLndyYXBwZXIge1xuICBtaW4td2lkdGg6IDEwMjRweDtcbiAgbWF4LXdpZHRoOiAxOTIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi53cmFwIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtaW4td2lkdGg6IDEwMjRweDtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7IH1cbiAgLndyYXA6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC53cmFwLndpZGVyIHtcbiAgICBtYXgtd2lkdGg6IDE2NjBweDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2NjBweCkge1xuICAud3JhcCB7XG4gICAgcGFkZGluZy1sZWZ0OiAzLjkwNjI1JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAzLjkwNjI1JTsgfSB9XG5cbi8qID09PSBIZWFkZXIgbGF5b3V0ID09PSAqL1xuLyogPT09IE1haW4gbGF5b3V0ID09PSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxOTIwcHgpIHtcbiAgLm1haW4ge1xuICAgIHBhZGRpbmctYm90dG9tOiA1MjBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ4MHB4KSBhbmQgKG1heC13aWR0aDogMTkxOXB4KSB7XG4gIC5tYWluIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjcuMDMxMjV2dzsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ4MHB4KSB7XG4gIC5tYWluIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDAwcHg7IH0gfVxuXG4vKiA9PT0gRm9vdGVyIGxheW91dCA9PT0gKi9cbi8qID09PSBTaWRlYmFyIGxheW91dCA9PT0gKi9cbi8qID09PSBUb3AgaGVhZGVyIG1vZHVsZSA9PT0gKi9cbi50b3AtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgcGFkZGluZzogMS4wNjI1cmVtIDA7IH1cbiAgLnRvcC1oZWFkZXIgYSB7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gIC50b3AtaGVhZGVyIC5sZWZ0IHtcbiAgICBmbG9hdDogbGVmdDsgfVxuICAudG9wLWhlYWRlciAucmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC50b3AtaGVhZGVyIC5waG9uZS1udW1zIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAudG9wLWhlYWRlciAucGhvbmUtbnVtcyBhIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMS41cmVtOyB9XG4gIC50b3AtaGVhZGVyIC5zb2Mge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nLWxlZnQ6IDIuODU3MTQlOyB9XG4gICAgLnRvcC1oZWFkZXIgLnNvYyAuaWNvbiB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07IH1cblxuLyogPT09IFRvcCBuYXYgbW9kdWxlID09PSAqL1xuLnRvcC1uYXYge1xuICBoZWlnaHQ6IDUuNjI1cmVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzliOWI5YjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAudG9wLW5hdiAud3JhcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTAwJTsgfVxuICAudG9wLW5hdiAubG9nbyB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEzLjc1cmVtO1xuICAgIHBhZGRpbmctdG9wOiAwLjgxMjVyZW07IH1cbiAgICAudG9wLW5hdiAubG9nbyBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAyMjBweDsgfVxuICAudG9wLW5hdiAuc2VhcmNoIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHdpZHRoOiAyOHB4O1xuICAgIGhlaWdodDogNS42MjVyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAzLjhyZW07IH1cbiAgICAudG9wLW5hdiAuc2VhcmNoOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDFweDtcbiAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gOXB4KTtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgYm9yZGVyOiA5cHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTtcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICM5YjliOWI7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3M7IH1cbiAgICAudG9wLW5hdiAuc2VhcmNoOmhvdmVyOmFmdGVyLCAudG9wLW5hdiAuc2VhcmNoLmlzLWFjdGl2ZTphZnRlciB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgLnRvcC1uYXYgLnNlYXJjaCAubWFnbmlmaWVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgICAudG9wLW5hdiAuc2VhcmNoIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpIHtcbiAgICAgICAgLnRvcC1uYXYgLnNlYXJjaCBpbWcge1xuICAgICAgICAgIHdpZHRoOiAyMnB4OyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEzMjBweCkge1xuICAgICAgLnRvcC1uYXYgLnNlYXJjaCB7XG4gICAgICAgIHdpZHRoOiAyMnB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDQuOHJlbTsgfSB9XG4gIC50b3AtbmF2IC5sYW5nIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG4gICAgLnRvcC1uYXYgLmxhbmcgYSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuMjVzOyB9XG4gICAgICAudG9wLW5hdiAubGFuZyBhLnNlbGVjdGVkIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2NjBweCkge1xuICAgICAgLnRvcC1uYXYgLmxhbmcge1xuICAgICAgICByaWdodDogMy45MDYyNSU7IH0gfVxuICAgIC50b3AtbmF2IC5sYW5nLnNob3cgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgLnRvcC1uYXYgLmxhbmcuc2hvdyBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgICAgIC50b3AtbmF2IC5sYW5nLnNob3cgYTphY3RpdmUge1xuICAgICAgICBjb2xvcjogIzAwMDsgfVxuXG4ubWFpbi1uYXYge1xuICBoZWlnaHQ6IDEwMCU7IH1cbiAgLm1haW4tbmF2ID4gdWwge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLm1haW4tbmF2ID4gdWwgPiBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1sZWZ0OiA0cmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5tYWluLW5hdiA+IHVsID4gbGk6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgIC5tYWluLW5hdiA+IHVsID4gbGk6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMXB4O1xuICAgICAgbGVmdDogY2FsYyg1MCUgLSA5cHgpO1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBib3JkZXI6IDlweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzliOWI5YjtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zczsgfVxuICAgIC5tYWluLW5hdiA+IHVsID4gbGk6aG92ZXI6YWZ0ZXIsIC5tYWluLW5hdiA+IHVsID4gbGkuaXMtYWN0aXZlOmFmdGVyIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAubWFpbi1uYXYgPiB1bCA+IGxpLmlzLWFjdGl2ZSBhIHtcbiAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gICAgLm1haW4tbmF2ID4gdWwgPiBsaTpob3ZlciA+IGEge1xuICAgICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1MDBweCkge1xuICAgICAgLm1haW4tbmF2ID4gdWwgPiBsaSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyLjV2dzsgfSB9XG4gIC5tYWluLW5hdiA+IHVsID4gbGkgPiBhIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbGluZS1oZWlnaHQ6IDUuNjI1cmVtO1xuICAgIGNvbG9yOiAjMDAwOyB9XG5cbi5jYXItcGFnZS1oYXNoLW5hdiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7IH1cbiAgLmNhci1wYWdlLWhhc2gtbmF2IHVsIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAwOyB9XG4gICAgLmNhci1wYWdlLWhhc2gtbmF2IHVsOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuY2FyLXBhZ2UtaGFzaC1uYXYgdWwgbGkge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbi1yaWdodDogNHJlbTtcbiAgICAgIHBhZGRpbmc6IDEuMzVyZW0gMDtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgICAgIC5jYXItcGFnZS1oYXNoLW5hdiB1bCBsaTpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lOyB9XG4gICAgICAuY2FyLXBhZ2UtaGFzaC1uYXYgdWwgbGk6aG92ZXIgYSB7XG4gICAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gICAgLmNhci1wYWdlLWhhc2gtbmF2IHVsIGEge1xuICAgICAgY29sb3I6ICMwMDA7IH1cblxuLnNlYXJjaC1mb3JtIHtcbiAgcGFkZGluZzogMTJweCAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMjtcbiAgdG9wOiAxMDAlO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzliOWI5YjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBub25lOyB9XG4gIC5zZWFyY2gtZm9ybSAuaW5wdXQtb3V0ZXIge1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IDI4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM5NTk1OTU7IH1cbiAgICAuc2VhcmNoLWZvcm0gLmlucHV0LW91dGVyIGlucHV0IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDsgfVxuICAgICAgLnNlYXJjaC1mb3JtIC5pbnB1dC1vdXRlciBpbnB1dDpmb2N1cyB7XG4gICAgICAgIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIC5zZWFyY2gtZm9ybSBsYWJlbCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4gICAgLnNlYXJjaC1mb3JtIGxhYmVsIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2VhcmNoLWZvcm0gLmlucHV0LW91dGVyLCAuc2VhcmNoLWZvcm0gbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5zZWFyY2gtZm9ybSBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi8qID09PSBTdWIgbmF2IG1vZHVsZSA9PT0gKi9cbi5zdWItbmF2IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDI7IH1cbiAgLnN1Yi1uYXY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxNTAlO1xuICAgIGhlaWdodDogMXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogLTI1JTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTg5ODk4OyB9XG5cbi5saXN0LW91dGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBub25lOyB9XG4gIC5saXN0LW91dGVyIHVsIHtcbiAgICBwYWRkaW5nLXRvcDogMS41NjI1cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjU2MjVyZW07XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuICAgIC5saXN0LW91dGVyIHVsOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgLmxpc3Qtb3V0ZXIgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAubGlzdC1vdXRlciBhIHtcbiAgICBjb2xvcjogIzAwMDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuM3M7IH1cbiAgICAubGlzdC1vdXRlciBhLmlzLWFjdGl2ZSwgLmxpc3Qtb3V0ZXIgYTpob3ZlciB7XG4gICAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAubGlzdC1vdXRlci50by1jZW50ZXIgdWwge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubGlzdC1vdXRlci50by1jZW50ZXIgbGkge1xuICAgIG1hcmdpbi1yaWdodDogNHJlbTsgfVxuICAgIC5saXN0LW91dGVyLnRvLWNlbnRlciBsaTpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAubGlzdC1vdXRlci5jYXItdGh1bWJzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gICAgLmxpc3Qtb3V0ZXIuY2FyLXRodW1icyBsaSB7XG4gICAgICB3aWR0aDogMTUuNjYyNjUlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuMjA0ODIlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgICAgLmxpc3Qtb3V0ZXIuY2FyLXRodW1icyBsaTpudGgtb2YtdHlwZSg2bikge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAubGlzdC1vdXRlci5jYXItdGh1bWJzIGltZyB7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5saXN0LW91dGVyLmNhci10aHVtYnMgLmNhci10aXRsZSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgIC5saXN0LW91dGVyLmNhci10aHVtYnMgLmNhci10aXRsZSBwIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAwIDEuMzc1cmVtO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gICAgICAubGlzdC1vdXRlci5jYXItdGh1bWJzIC5jYXItdGl0bGU6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkMmQyZDI7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9XG5cbi8qID09PSBTbGlkZXIgbW9kdWxlID09PSAqL1xuLnNsaWRlci1tYWluIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB0cmFuc2l0aW9uOiBhbGwgLjlzIGVhc2Utb3V0OyB9XG4gIC5zbGlkZXItbWFpbi5sb2FkaW5nIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIC5zbGlkZXItbWFpbi5zY2FsZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpOyB9XG4gIC5zbGlkZXItbWFpbiBsaSB7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDcuNzVyZW0gLSAyNnB4KTsgfVxuICAuc2xpZGVyLW1haW4gaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNsaWRlci1tYWluIC53cmFwLndpZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnNsaWRlci1tYWluIC5sYWJlbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLnNsaWRlci1tYWluIC5sYWJlbDphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwcHg7XG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtIDlweCk7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIGJvcmRlcjogOXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXRvcC1jb2xvcjogI2M3MDkyMztcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTc4MHB4KSB7XG4gICAgICAuc2xpZGVyLW1haW4gLmxhYmVsIHtcbiAgICAgICAgcmlnaHQ6IDYlOyB9IH1cbiAgLnNsaWRlci1tYWluIC5ieC1jb250cm9scyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMnJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnNsaWRlci1tYWluIC5ieC1wYWdlci1pdGVtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLnNsaWRlci1tYWluIC5ieC1wYWdlci1saW5rIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDE2cHg7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIG1hcmdpbjogMCA5cHg7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7IH1cbiAgICAuc2xpZGVyLW1haW4gLmJ4LXBhZ2VyLWxpbmsuYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7IH1cbiAgICAuc2xpZGVyLW1haW4gLmJ4LXBhZ2VyLWxpbms6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yNSk7IH1cblxuLmJ1bGxldHMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMnJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAuYnVsbGV0cyB1bCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5idWxsZXRzIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDE2cHg7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIG1hcmdpbjogMCA5cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICAgIC5idWxsZXRzIGxpLnNlbGVjdGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7IH1cbiAgICAuYnVsbGV0cyBsaTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTsgfVxuXG4vKiA9PT0gU2lkZSBmbG9hdGVyIG1vZHVsZSA9PT0gKi9cbi5zaWRlLWZsb2F0ZXIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgd2lkdGg6IDUwcHg7XG4gIGRpcmVjdGlvbjogcnRsOyB9XG4gIC5zaWRlLWZsb2F0ZXItb3V0ZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgei1pbmRleDogMTsgfVxuICAuc2lkZS1mbG9hdGVyIC5pY29uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgcGFkZGluZzogN3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTk5LCA5LCAzNSwgMC44KTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIC4zczsgfVxuICAgIC5zaWRlLWZsb2F0ZXIgLmljb24gc3BhbiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA3cHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtaW4td2lkdGg6IDIwMHB4O1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiO1xuICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxuICAgIC5zaWRlLWZsb2F0ZXIgLmljb246aG92ZXIge1xuICAgICAgd2lkdGg6IDI1MHB4OyB9XG4gICAgICAuc2lkZS1mbG9hdGVyIC5pY29uOmhvdmVyIHNwYW4ge1xuICAgICAgICBhbmltYXRpb246IHNsaWRlSW5UZXh0IC4ycyAuMTVzIGZvcndhcmRzOyB9XG4gICAgLnNpZGUtZmxvYXRlciAuaWNvbiBpbWcge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgd2lkdGg6IDM2cHg7IH1cblxuQGtleWZyYW1lcyBzbGlkZUluVGV4dCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH0gfVxuXG4vKiA9PT0gQ2FycyBtb2R1bGUgPT09ICovXG4uc2VjdGlvbi1jYXJzIHtcbiAgcGFkZGluZy10b3A6IDQuNXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbTsgfVxuICAuc2VjdGlvbi1jYXJzIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jYXJzLWxpc3Qge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBhZGRpbmctdG9wOiAyLjM3NXJlbTsgfVxuICAuY2Fycy1saXN0OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjbGVhcjogYm90aDsgfVxuICAuY2Fycy1saXN0IC5jYXItaXRlbSB7XG4gICAgd2lkdGg6IDIyLjg1NzE0JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIuODU3MTQlO1xuICAgIHBhZGRpbmctYm90dG9tOiAuMjVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5jYXJzLWxpc3QgLmNhci1pdGVtOm50aC1vZi10eXBlKDRuKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAuY2Fycy1saXN0IC5jYXItaXRlbSBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyB9XG4gICAgLmNhcnMtbGlzdCAuY2FyLWl0ZW06aG92ZXIgLmNhci10aXRsZSB7XG4gICAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAuY2Fycy1saXN0IC5jYXItdGl0bGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMnM7IH1cbiAgICAuY2Fycy1saXN0IC5jYXItdGl0bGUgcCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwYWRkaW5nOiAwIDEuMzc1cmVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgICAuY2Fycy1saXN0IC5jYXItdGl0bGU6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2QyZDJkMjtcbiAgICAgIHotaW5kZXg6IC0xOyB9XG4gIC5jYXJzLWxpc3QgLmNhci1wcmljZSBwLCAuY2Fycy1saXN0IC5jYXItcHJpY2Ugc3BhbiB7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cblxuLmNhci1pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jYXItaXRlbTpob3ZlciAuaG92ZXItYm94IHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5ob3Zlci1ib3gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gMS4yZW0gLSA0cHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5OSwgOSwgMzUsIDAuOTUpO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzOyB9XG4gIC5ob3Zlci1ib3ggLnZlcnRpY2FsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgcGFkZGluZzogMCAxNXB4OyB9XG4gIC5ob3Zlci1ib3ggLmhvdmVyLXRpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTsgfVxuICAgIC5ob3Zlci1ib3ggLmhvdmVyLXRpdGxlIHAge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5ob3Zlci1ib3ggdWwge1xuICAgIGNvbHVtbnM6IDI7IH1cbiAgLmhvdmVyLWJveCBsaSB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xuICAgICAgLmhvdmVyLWJveCBsaSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cbiAgICAuaG92ZXItYm94IGxpOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAn4oCiICc7IH1cbiAgLmhvdmVyLWJveCBzcGFuIHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuODc1cmVtOyB9XG5cbi5zdGlja2VyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDY2JTtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDMwcHg7IH1cbiAgLnN0aWNrZXItbmV3IHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvbmV3LnBuZ1wiKSBsZWZ0IHRvcCBuby1yZXBlYXQ7IH1cbiAgLnN0aWNrZXItc2FsZSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL3NhbGUucG5nXCIpIGxlZnQgdG9wIG5vLXJlcGVhdDsgfVxuICAuc3RpY2tlci1zcGVjaWFsIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvYWtjaWEucG5nXCIpIGxlZnQgdG9wIG5vLXJlcGVhdDsgfVxuICAuc3RpY2tlci1oeWJyaWQge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9oeWJyaWQucG5nXCIpIGxlZnQgdG9wIG5vLXJlcGVhdDsgfVxuXG4vKiA9PT0gQXNrIG1vZHVsZSA9PT0gKi9cbi5zZWN0aW9uLWFzayB7XG4gIGhlaWdodDogMjAuODMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzdnc7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBtaW4taGVpZ2h0OiAyNDBweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2Fzay1iZy5qcGdcIikgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgLnNlY3Rpb24tYXNrIHtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH0gfVxuICAuc2VjdGlvbi1hc2sgLndyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLnNlY3Rpb24tYXNrIC50aXRsZSB7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNSUpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIC41czsgfVxuICAuc2VjdGlvbi1hc2sgLmJ0biB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M3MDkyMztcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4zczsgfVxuICAgIC5zZWN0aW9uLWFzayAuYnRuOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHdpZHRoOiA1JTtcbiAgICAgIGhlaWdodDogMTEwJTtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTk5LCA5LCAzNSwgMC4wMSk7XG4gICAgICBib3gtc2hhZG93OiAtMjVweCAtM3B4IDEwcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gICAgICB0cmFuc2Zvcm06IHNrZXcoMzBkZWcpIHRyYW5zbGF0ZVgoMzUwcHgpO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC42cyAwczsgfVxuICAgIC5zZWN0aW9uLWFzayAuYnRuOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgaGVpZ2h0OiAxMTAlO1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgxOTksIDksIDM1LCAwLjUpO1xuICAgICAgdHJhbnNmb3JtOiBza2V3KDMwZGVnKSB0cmFuc2xhdGVYKC0yMDBweCk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjZzIDBzOyB9XG4gICAgLnNlY3Rpb24tYXNrIC5idG4gc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuM3M7IH1cbiAgICAuc2VjdGlvbi1hc2sgLmJ0bjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gICAgICAuc2VjdGlvbi1hc2sgLmJ0bjpob3ZlciBzcGFuIHtcbiAgICAgICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLnNlY3Rpb24tYXNrLnBsYXkgLnRpdGxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH1cbiAgLnNlY3Rpb24tYXNrLnBsYXkgLmJ0bjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiBza2V3KDMwZGVnKSB0cmFuc2xhdGVYKC01MHB4KTsgfVxuICAuc2VjdGlvbi1hc2sucGxheSAuYnRuOmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiBza2V3KDMwZGVnKSB0cmFuc2xhdGVYKDM1MHB4KTsgfVxuXG4uYnRuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBwYWRkaW5nOiAxLjQyODU3JSAyLjg1NzE0JTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7IH1cblxuLnZlcnRpY2FsLWNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNjYwcHgpIHtcbiAgICAuc2VjdGlvbi1hc2sgLnZlcnRpY2FsLWNlbnRlciB7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gMy45MDYyNSUpO1xuICAgICAgbGVmdDogMy45MDYyNSU7IH0gfVxuXG4vKiA9PT0gVGFicyBtb2R1bGUgPT09ICovXG4udGFiLXRpdGxlcyB7XG4gIHBhZGRpbmctYm90dG9tOiAyLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAudGFiLXRpdGxlcyB1bCB7XG4gICAgZm9udC1zaXplOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLnRhYi10aXRsZXMgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIC50YWItdGl0bGVzIGxpOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHRvcDogLTAuNDY4NzVyZW07XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2QyZDJkMjsgfVxuICAgIC50YWItdGl0bGVzIGxpOmZpcnN0LWNoaWxkOmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLnRhYi10aXRsZXMgbGkgaDIge1xuICAgICAgcGFkZGluZzogMCAxLjg3NXJlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAuOTM3NXJlbTsgfVxuICAgICAgLnRhYi10aXRsZXMgbGkgaDI6YWZ0ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIHRyYW5zaXRpb246IGxlZnQgLjVzIC4xMjVzOyB9XG4gICAgLnRhYi10aXRsZXMgbGkuaGlkZGVuLWxpbmU6bnRoLWNoaWxkKDEpIGgyOmFmdGVyIHtcbiAgICAgIGxlZnQ6IDEyMiU7XG4gICAgICB0cmFuc2l0aW9uOiBsZWZ0IC41czsgfVxuICAgIC50YWItdGl0bGVzIGxpLmhpZGRlbi1saW5lLnRvLWxlZnQ6bnRoLWNoaWxkKDIpIGgyOmFmdGVyIHtcbiAgICAgIGxlZnQ6IC0yMiU7XG4gICAgICB0cmFuc2l0aW9uOiBsZWZ0IC41czsgfVxuICAgIC50YWItdGl0bGVzIGxpLmhpZGRlbi1saW5lLnRvLXJpZ2h0Om50aC1jaGlsZCgyKSBoMjphZnRlciB7XG4gICAgICBsZWZ0OiAxMjIlO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuNXM7IH1cbiAgICAudGFiLXRpdGxlcyBsaS5oaWRkZW4tbGluZTpudGgtY2hpbGQoMykgaDI6YWZ0ZXIge1xuICAgICAgbGVmdDogLTIyJTtcbiAgICAgIHRyYW5zaXRpb246IGxlZnQgLjVzOyB9XG4gICAgLnRhYi10aXRsZXMgbGk6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5zZWN0aW9uLXRhYnMge1xuICBwYWRkaW5nLXRvcDogNC41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogNC41cmVtOyB9XG4gIC5zZWN0aW9uLXRhYnMgLm91dGVyIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5zZWN0aW9uLXRhYnMgLnJvdyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDMyLjcxMDI4JTtcbiAgICBtYXJnaW4tbGVmdDogMC45MzQ1OCU7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDA7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuICAgIC5zZWN0aW9uLXRhYnMgLnJvdzphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5yb3c6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgIC5zZWN0aW9uLXRhYnMgLnJvdy1jb250YWluZXIge1xuICAgICAgd2lkdGg6IDMwNS43MTQyOSU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDEuMnM7XG4gICAgICBmb250LXNpemU6IDA7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gICAgICAuc2VjdGlvbi10YWJzIC5yb3ctY29udGFpbmVyLnNob3ctc2Vjb25kLXRhYiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzMuNjQ0ODYlKTsgfVxuICAgICAgLnNlY3Rpb24tdGFicyAucm93LWNvbnRhaW5lci5zaG93LXRoaXJkLXRhYiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNjcuMjg5NzIlKTsgfVxuICAuc2VjdGlvbi10YWJzIC5jb2wge1xuICAgIHdpZHRoOiAzMS40Mjg1NyU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAyLjg1NzE0JTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcHg7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjNzA5MjM7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5jb2w6bnRoLW9mLXR5cGUoM24pIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgIC5zZWN0aW9uLXRhYnMgLmNvbCBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7IH1cbiAgLnNlY3Rpb24tdGFicyAuY29udGVudCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctdG9wOiA2LjgxODE4JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0LjU0NTQ1JTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQuNTQ1NDUlO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjNzA5MjM7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5jb250ZW50IC50aXRsZSB7XG4gICAgICBtYXgtaGVpZ2h0OiAyLjRlbTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtYXJnaW4tYm90dG9tOiBjYWxjKC45Mzc1cmVtICsgNHB4KTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgLnNlY3Rpb24tdGFicyAuY29udGVudCAudGl0bGU6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnLi4uJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDEuMmVtO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgIGhlaWdodDogMS4yZW07XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCksIHdoaXRlIDU1JSk7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5jb250ZW50IC51bmRlci1saW5lZCB7XG4gICAgICBoZWlnaHQ6IGNhbGMoMi40ZW0gKyAuOTM3NXJlbSArIDRweCk7IH1cbiAgLnNlY3Rpb24tdGFicyAudGV4dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogY2FsYygyZW0gKiAxLjg3NSk7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLnNlY3Rpb24tdGFicyAudGV4dCBwIHtcbiAgICAgIG1heC1oZWlnaHQ6IGNhbGMoMmVtICogMS44NzUpOyB9XG4gICAgICAuc2VjdGlvbi10YWJzIC50ZXh0IHA6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnLi4uJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IGNhbGMoMWVtICogMS44NzUpO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgIGhlaWdodDogMS44NzVlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgd2hpdGUgNzUlKTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgLnNlY3Rpb24tdGFicyAudGV4dCB7XG4gICAgICAgIGhlaWdodDogY2FsYygyZW0gKiAxLjU2MjUpOyB9XG4gICAgICAgIC5zZWN0aW9uLXRhYnMgLnRleHQgcCB7XG4gICAgICAgICAgbWF4LWhlaWdodDogY2FsYygyZW0gKiAxLjU2MjUpOyB9XG4gICAgICAgICAgLnNlY3Rpb24tdGFicyAudGV4dCBwOmFmdGVyIHtcbiAgICAgICAgICAgIHRvcDogY2FsYygxZW0gKiAxLjU2MjUpOyB9IH1cbiAgLnNlY3Rpb24tdGFicyAubGluay1tb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLnNlY3Rpb24tdGFicyAubGluay1tb3JlOmJlZm9yZSwgLnNlY3Rpb24tdGFicyAubGluay1tb3JlOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDI1cHg7XG4gICAgICBsZWZ0OiAyMHB4O1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XG4gICAgICB3aWR0aDogMTRweDtcbiAgICAgIGhlaWdodDogMTRweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XG4gICAgICBib3gtc2hhZG93OiAxcHggMXB4ICNmZmY7XG4gICAgICB0cmFuc2l0aW9uOiBsZWZ0IC4zczsgfVxuICAgIC5zZWN0aW9uLXRhYnMgLmxpbmstbW9yZTpiZWZvcmUge1xuICAgICAgbGVmdDogLTMwcHg7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5saW5rLW1vcmU6aG92ZXI6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IDIwcHg7IH1cbiAgICAuc2VjdGlvbi10YWJzIC5saW5rLW1vcmU6aG92ZXI6YWZ0ZXIge1xuICAgICAgbGVmdDogNzBweDsgfVxuXG4uY2FuLXpvb20gLmltZy1hIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgLmNhbi16b29tIC5pbWctYSBpbWcge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IGFsbCAuOXMgZWFzZS1vdXQ7IH1cbiAgICAuY2FuLXpvb20gLmltZy1hIGltZy5sb2FkIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gICAgICAuY2FuLXpvb20gLmltZy1hIGltZy5sb2FkOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpOyB9XG5cbi8qID09PSBGb290ZXIgbW9kdWxlID09PSAqL1xuLmZvb3RlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBoZWlnaHQ6IDI3LjAzMTI1dnc7XG4gIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICBtYXgtaGVpZ2h0OiA1MjBweDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmZvb3RlciAucGFyYWxsYXgtYmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0MS43MTg0MjY1MDEwMzUxOTY2ODczNzA2MDA0MTQwNzl2dztcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZm9vdGVyLWJnLmpwZ1wiKSBjZW50ZXIgbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbiAgLmZvb3RlciAub3V0ZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpOyB9XG4gIC5mb290ZXIgLnZlcnRpY2FsLWNlbnRlciB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmZvb3RlciAucm93IHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gICAgLmZvb3RlciAucm93OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAuZm9vdGVyIC5jb2wge1xuICAgIHdpZHRoOiAzMS40Mjg1NyU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAyLjg1NzE0JTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuZm9vdGVyIC5jb2w6bnRoLW9mLXR5cGUoM24pIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgIC5mb290ZXIgLmNvbCBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAuZm9vdGVyIC5jb2wgLmljb24ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDEuNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2N3Z3O1xuICAgICAgbWF4LXdpZHRoOiAycmVtOyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2MDBweCkge1xuICAgICAgICAuZm9vdGVyIC5jb2wgLmljb24ge1xuICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgICBtaW4td2lkdGg6IDIuNXJlbTsgfSB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0MzBweCkge1xuICAgICAgICAuZm9vdGVyIC5jb2wgLmljb24ge1xuICAgICAgICAgIG1pbi13aWR0aDogM3JlbTsgfSB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgICAuZm9vdGVyIC5jb2wgLmljb24ge1xuICAgICAgICAgIG1pbi13aWR0aDogMy41cmVtOyB9IH1cbiAgLmZvb3RlciAudGl0bGUge1xuICAgIHBhZGRpbmc6IC43NXJlbSAwO1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIC5mb290ZXIgLnRleHQgcCwgLmZvb3RlciAudGV4dCBhIHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuZm9vdGVyIC5zb2Mge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IGNhbGMoOS4wNiUgLSAxNXB4KTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbiAgICAuZm9vdGVyIC5zb2MgLmljb24ge1xuICAgICAgcGFkZGluZzogMCAxLjI1cmVtO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuM3M7IH1cbiAgICAgIC5mb290ZXIgLnNvYyAuaWNvbjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTYwMHB4KSB7XG4gICAgLmZvb3RlciAudmVydGljYWwtY2VudGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTUlKTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTM2NnB4KSB7XG4gICAgLmZvb3RlciAudmVydGljYWwtY2VudGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNjIlKTsgfSB9XG5cbi53cml0ZS11cyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXRvcDogMi41cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLndyaXRlLXVzIHAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAwIDEuMzc1cmVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAud3JpdGUtdXM6YmVmb3JlLCAud3JpdGUtdXM6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICB3aWR0aDogNzgwcHg7XG4gICAgd2lkdGg6IGNhbGMoNDQlIC0gNC40cmVtKTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJkMmQyO1xuICAgIHotaW5kZXg6IC0xOyB9XG4gIC53cml0ZS11czpiZWZvcmUge1xuICAgIGxlZnQ6IDA7IH1cbiAgLndyaXRlLXVzOmFmdGVyIHtcbiAgICByaWdodDogMDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2MDBweCkge1xuICAgIC53cml0ZS11czpiZWZvcmUsIC53cml0ZS11czphZnRlciB7XG4gICAgICB3aWR0aDogY2FsYyg0MiUgLSA0LjRyZW0pOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpIHtcbiAgICAud3JpdGUtdXM6YmVmb3JlLCAud3JpdGUtdXM6YWZ0ZXIge1xuICAgICAgd2lkdGg6IGNhbGMoNDElIC0gNC40cmVtKTsgfSB9XG5cbi5idG4tc3Ryb2tlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAxLjQyODU3JSA1JTtcbiAgY29sb3I6ICNjNzA5MjM7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjNzA5MjM7XG4gIHRyYW5zaXRpb246IGFsbCAuM3M7IH1cbiAgLmJ0bi1zdHJva2U6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLyogPT09IFBvcHVwcyBtb2R1bGUgPT09ICovXG4uYm9keS1sb2NrZWQge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5wb3B1cCB7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIHotaW5kZXg6IDUxO1xuICBkaXNwbGF5OiBub25lOyB9XG4gIC5wb3B1cC1pbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgbWFyZ2luOiAxNXZoIGF1dG87XG4gICAgcGFkZGluZzogNjVweCA3MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLnBvcHVwLWlubmVyLmRvdWJsZS13aWR0aCB7XG4gICAgICBtYXgtd2lkdGg6IDEwMDBweDsgfVxuICAgICAgLnBvcHVwLWlubmVyLmRvdWJsZS13aWR0aCAuaW5wdXQtb3V0ZXIge1xuICAgICAgICB3aWR0aDogNDglO1xuICAgICAgICBmbG9hdDogbGVmdDsgfVxuICAgICAgICAucG9wdXAtaW5uZXIuZG91YmxlLXdpZHRoIC5pbnB1dC1vdXRlcjpudGgtb2YtdHlwZShldmVuKSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDQlOyB9XG4gIC5wb3B1cC5pcy1zaG93biB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnBvcHVwIC50ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgLnBvcHVwIGgyLnRpdGxlICsgLnRleHQge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnBvcHVwIC5zZWxlY3QtY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5wb3B1cCBpbnB1dCwgLnBvcHVwIHRleHRhcmVhIHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuICAgIC5wb3B1cCBpbnB1dDppbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciwgLnBvcHVwIHRleHRhcmVhOmlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG4gICAgLnBvcHVwIGlucHV0OmlucHV0Oi1tb3otaW5wdXQtcGxhY2Vob2xkZXIsIC5wb3B1cCB0ZXh0YXJlYTppbnB1dDotbW96LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG4gICAgLnBvcHVwIGlucHV0OmlucHV0OjotbW96LWlucHV0LXBsYWNlaG9sZGVyLCAucG9wdXAgdGV4dGFyZWE6aW5wdXQ6Oi1tb3otaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgICAucG9wdXAgaW5wdXQ6aW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciwgLnBvcHVwIHRleHRhcmVhOmlucHV0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgICAucG9wdXAgaW5wdXQ6Zm9jdXMsIC5wb3B1cCB0ZXh0YXJlYTpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lOyB9XG4gIC5wb3B1cCAuaW5wdXQtb3V0ZXIgaW5wdXQuZXJyb3Ige1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjNzA5MjM7IH1cbiAgLnBvcHVwIHRleHRhcmVhIHtcbiAgICBtaW4taGVpZ2h0OiAxNzBweDsgfVxuICAucG9wdXAgaW1nIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4gIC5wb3B1cCAudXBsb2FkLWZpbGUge1xuICAgIHBhZGRpbmctdG9wOiAyLjVyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgbGFiZWwge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjNzA5MjM7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4yczsgfVxuICAgICAgLnBvcHVwIC51cGxvYWQtZmlsZSBsYWJlbCAudXBsb2FkLWltZyB7XG4gICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiA1cHggYXV0bzsgfVxuICAgICAgLnBvcHVwIC51cGxvYWQtZmlsZSBsYWJlbDpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgICAgICAgLnBvcHVwIC51cGxvYWQtZmlsZSBsYWJlbDpob3ZlciAudXBsb2FkLWltZyBwYXRoIHtcbiAgICAgICAgICBmaWxsOiAjYzcwOTIzOyB9XG4gICAgLnBvcHVwIC51cGxvYWQtZmlsZSBwIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgLmZpbGUtaW5mbyB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDcwcHg7IH1cbiAgICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgLmZpbGUtaW5mbyBwIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtOyB9XG4gICAgICAucG9wdXAgLnVwbG9hZC1maWxlIC5maWxlLWluZm8gLm5hbWUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgLmZpbGUtaW5mbyAucmVtb3ZlIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IGF1dG87XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAgIC5wb3B1cCAudXBsb2FkLWZpbGUgLmZpbGUtaW5mbyBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAucG9wdXAgLm91dGVyLWNlbnRlcmVkIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctdG9wOiAycmVtOyB9XG4gICAgLnBvcHVwIC5vdXRlci1jZW50ZXJlZCAuaW5wdXQtb3V0ZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7IH1cbiAgICAucG9wdXAgLm91dGVyLWNlbnRlcmVkIC5zbWFsbCB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnBvcHVwIC5mb3Jnb3QsIC5wb3B1cCAuYnRuLXJlZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAucG9wdXAgLmJ0bi1sb2dpbiB7XG4gICAgcGFkZGluZzogLjVyZW0gNHJlbTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gIC5wb3B1cCAuZm9yZ290LCAucG9wdXAgLmJ0bi1yZWcsIC5wb3B1cCAuYnRuLWxvZ2luIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5wb3B1cCAuYnRuLWxpbmsge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAucG9wdXAgLmNsb3NlLCAucG9wdXAgLnJlbW92ZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjBweDtcbiAgICByaWdodDogMjBweDtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3M7XG4gICAgei1pbmRleDogMTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAucG9wdXAgLmNsb3NlOmJlZm9yZSwgLnBvcHVwIC5jbG9zZTphZnRlciwgLnBvcHVwIC5yZW1vdmU6YmVmb3JlLCAucG9wdXAgLnJlbW92ZTphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMnB4O1xuICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMzsgfVxuICAgIC5wb3B1cCAuY2xvc2U6YmVmb3JlLCAucG9wdXAgLnJlbW92ZTpiZWZvcmUge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKTsgfVxuICAgIC5wb3B1cCAuY2xvc2U6YWZ0ZXIsIC5wb3B1cCAucmVtb3ZlOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpOyB9XG5cbi8qID09PSBBYm91dCBwYWdlID09PSAqL1xuLmFib3V0IC50aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uYWJvdXQgLmFkZHJlc3Mge1xuICBtYXJnaW4tdG9wOiAyLjI1cmVtO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7IH1cbiAgLmFib3V0IC5hZGRyZXNzIC5pbWctb3V0ZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMjZweDsgfVxuICAuYWJvdXQgLmFkZHJlc3MgYWRkcmVzcyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi5hYm91dCAucm93IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gIC5hYm91dCAucm93OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjbGVhcjogYm90aDsgfVxuXG4uYWJvdXQgLmNvbCB7XG4gIHdpZHRoOiA1MCU7XG4gIGZsb2F0OiBsZWZ0OyB9XG4gIC5hYm91dCAuY29sOmZpcnN0LW9mLXR5cGUge1xuICAgIHBhZGRpbmctcmlnaHQ6IDUuNzE0MjklOyB9XG4gIC5hYm91dCAuY29sOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1sZWZ0OiA1LjcxNDI5JTsgfVxuXG4uYWJvdXQgdWwge1xuICBtYXJnaW4tdG9wOiA2cHg7IH1cblxuLmFib3V0IGxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cblxuLmFib3V0IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLmFyZ3VtZW50cyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMy43NXJlbSAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvYWJvdXQtYmcuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbiAgLmFyZ3VtZW50cyAuYmctc2hhZG93IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgICB6LWluZGV4OiAwOyB9XG4gIC5hcmd1bWVudHMgLndyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxOyB9XG4gIC5hcmd1bWVudHMgLnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gICAgLmFyZ3VtZW50cyAudGl0bGUgYSB7XG4gICAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAuYXJndW1lbnRzIGxpIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLWhlaWdodDogNC42ODc1ZW07IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHtcbiAgICAgIC5hcmd1bWVudHMgbGkge1xuICAgICAgICBtYXJnaW4tdG9wOiA0cmVtOyB9IH1cbiAgLmFyZ3VtZW50cyBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAuYXJndW1lbnRzIC5jb2wgPiB1bCA+IGxpID4gcCB7XG4gICAgcGFkZGluZy1sZWZ0OiA3NXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDFyZW07XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG5cbi5iYW5uZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmJhbm5lciBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLnNlY3Rpb24tY29udGVudCB7XG4gIHBhZGRpbmctdG9wOiA0LjVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAzLjc1cmVtOyB9XG5cbi50ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgLnRleHQgcCB7XG4gICAgbWFyZ2luLXRvcDogMi4yNXJlbTsgfVxuXG4uaW1nLW91dGVyIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLyogPT09IENvbnRhY3RzIHBhZ2UgPT09ICovXG4uY29udGFjdHMgLnJvdyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAuY29udGFjdHMgLnJvdzphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmNvbnRhY3RzIC5jb2wge1xuICB3aWR0aDogNDUuNzE0MjklO1xuICBmbG9hdDogbGVmdDsgfVxuICAuY29udGFjdHMgLmNvbDpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1sZWZ0OiA4LjU3MTQzJTsgfVxuXG4uY29udGFjdHMgLnN1Yi10aXRsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLmNvbnRhY3RzIC5zdWItdGl0bGUgaW1nIHtcbiAgICB3aWR0aDogMjhweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgLmNvbnRhY3RzIC5zdWItdGl0bGUgcCB7XG4gICAgcGFkZGluZy1sZWZ0OiA0MHB4OyB9XG5cbi5jb250YWN0cyAuc3ViLWNvbCB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xuICBwYWRkaW5nLXRvcDogMi41cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMi41cmVtOyB9XG4gIC5jb250YWN0cyAuc3ViLWNvbDpsYXN0LW9mLXR5cGUge1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5jb250YWN0cyAudGV4dCBwLCAuY29udGFjdHMgLnRleHQgYWRkcmVzcyB7XG4gIG1hcmdpbi10b3A6IDIuMjVyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG5cbi5jb250YWN0cyAuaW5wdXQtb3V0ZXIge1xuICB3aWR0aDogNDguNDM3NSU7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tdG9wOiAyLjg1NzE0JTsgfVxuICAuY29udGFjdHMgLmlucHV0LW91dGVyOm50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICBtYXJnaW4tbGVmdDogMi44NTcxNCU7IH1cbiAgLmNvbnRhY3RzIC5pbnB1dC1vdXRlcjpsYXN0LW9mLXR5cGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsb2F0OiBsZWZ0OyB9XG4gIC5jb250YWN0cyAuaW5wdXQtb3V0ZXIgaW5wdXQsIC5jb250YWN0cyAuaW5wdXQtb3V0ZXIgdGV4dGFyZWEge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogLjVlbSAxLjI1ZW07IH1cbiAgICAuY29udGFjdHMgLmlucHV0LW91dGVyIGlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLCAuY29udGFjdHMgLmlucHV0LW91dGVyIHRleHRhcmVhOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgICAgY29sb3I6ICMwMDA7IH1cbiAgICAuY29udGFjdHMgLmlucHV0LW91dGVyIGlucHV0Oi1tb3otcGxhY2Vob2xkZXIsIC5jb250YWN0cyAuaW5wdXQtb3V0ZXIgdGV4dGFyZWE6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICAvKiBGaXJlZm94IDE4LSAqL1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICBjb2xvcjogIzAwMDsgfVxuICAgIC5jb250YWN0cyAuaW5wdXQtb3V0ZXIgaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIsIC5jb250YWN0cyAuaW5wdXQtb3V0ZXIgdGV4dGFyZWE6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgICAgLyogRmlyZWZveCAxOSsgKi9cbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgICAgY29sb3I6ICMwMDA7IH1cbiAgICAuY29udGFjdHMgLmlucHV0LW91dGVyIGlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciwgLmNvbnRhY3RzIC5pbnB1dC1vdXRlciB0ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICBjb2xvcjogIzAwMDsgfVxuICAuY29udGFjdHMgLmlucHV0LW91dGVyIHRleHRhcmVhIHtcbiAgICBtaW4taGVpZ2h0OiA3LjVlbTsgfVxuXG4uY29udGFjdHMgc2VsZWN0IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uY29udGFjdHMgLnNlbGVjdC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM5ODk4OTg7IH1cbiAgLmNvbnRhY3RzIC5zZWxlY3QtY29udGFpbmVyIHVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTFweDtcbiAgICB0b3A6IGNhbGMoMTAwJSArIDRweCk7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDJweCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4O1xuICAgIHotaW5kZXg6IDE7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAuY29udGFjdHMgLnNlbGVjdC1jb250YWluZXIgc3BhbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDE7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jb250YWN0cyAuc2VsZWN0LWNvbnRhaW5lciBsaTpob3ZlciB7XG4gICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLmNvbnRhY3RzIC5zZWxlY3QtY29udGFpbmVyIHNwYW4sIC5jb250YWN0cyAuc2VsZWN0LWNvbnRhaW5lciBsaSB7XG4gICAgcGFkZGluZzogLjVlbSAxLjI1ZW07XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gIC5jb250YWN0cyAuc2VsZWN0LWNvbnRhaW5lciAuY3Vyci1vcHQge1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIC5jb250YWN0cyAuc2VsZWN0LWNvbnRhaW5lciAuZmEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE1cHg7XG4gICAgcmlnaHQ6IDFyZW07XG4gICAgY29sb3I6ICM5ODk4OTg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgLmNvbnRhY3RzIC5zZWxlY3QtY29udGFpbmVyIC5mYSB7XG4gICAgICAgIHRvcDogMTJweDsgfSB9XG4gICAgLmNvbnRhY3RzIC5zZWxlY3QtY29udGFpbmVyIC5mYS5yb3RhdGVkIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7IH1cblxuLmNvbnRhY3RzIGJ1dHRvbiB7XG4gIHdpZHRoOiA3NSU7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nLXRvcDogMy4xMjUlO1xuICBwYWRkaW5nLWJvdHRvbTogMy4xMjUlO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2M3MDkyMztcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICAuY29udGFjdHMgYnV0dG9uOmhvdmVyIHtcbiAgICBjb2xvcjogI2M3MDkyMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG5cbi5tYXAge1xuICBtaW4taGVpZ2h0OiA0NDBweDsgfVxuXG4vKiA9PT0gU2VydmljZSBwYWdlID09PSAqL1xuLnNlcnZpY2UgLnNlY3Rpb24tY29udGVudCB7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuXG4uc2VydmljZSAucm93IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gIC5zZXJ2aWNlIC5yb3c6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbi5zZXJ2aWNlIC5jb2wge1xuICB3aWR0aDogNTAlO1xuICBmbG9hdDogbGVmdDsgfVxuICAuc2VydmljZSAuY29sOmxhc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1sZWZ0OiA0LjI4NTcxJTsgfVxuICAuc2VydmljZSAuY29sIGltZyB7XG4gICAgZmxvYXQ6IHJpZ2h0OyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIC5zZXJ2aWNlIC5jb2wgaW1nIHtcbiAgICAgICAgbWF4LWhlaWdodDogNTAwcHg7IH0gfVxuXG4uc2VydmljZSAudGl0bGUge1xuICBtYXJnaW4tdG9wOiAycmVtOyB9XG5cbi5zZXJ2aWNlIC50ZXh0IHAge1xuICBtYXJnaW4tdG9wOiAyLjI1cmVtO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuXG4uc2VydmljZSAuYnRuIHtcbiAgbWFyZ2luLXRvcDogMi4yNXJlbTtcbiAgcGFkZGluZzogMi44NTcxNCUgNS43MTQyOSU7IH1cblxuLnNlcnZpY2UgLmNhci10aXRsZSB7XG4gIG1heC1oZWlnaHQ6IDEuMmVtO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5zZXJ2aWNlIC5jYXItdGl0bGU6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5zZXJ2aWNlIC5jYXItdGl0bGUgcCB7XG4gICAgcGFkZGluZzogMCAuMzc1cmVtO1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi5zZXJ2aWNlIC5jYXItcHJpY2UgcCB7XG4gIGhlaWdodDogMi40ZW07XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyB9XG5cbi8qID09PSBMb3lhbHR5IHBhZ2UgPT09ICovXG4ubG95YWx0eSAuc3BlY2lmaWNhdGlvbnMge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIC5sb3lhbHR5IC5zcGVjaWZpY2F0aW9ucyAuZHJvcC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cbiAgICAubG95YWx0eSAuc3BlY2lmaWNhdGlvbnMgLmRyb3AtaGVhZGVyOmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cbiAgLmxveWFsdHkgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIHtcbiAgICBwYWRkaW5nOiAzcmVtIDA7IH1cbiAgLmxveWFsdHkgLnNwZWNpZmljYXRpb25zIGg0IHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gICAgZm9udC1zaXplOiAxLjM3NWVtOyB9XG4gIC5sb3lhbHR5IC5zcGVjaWZpY2F0aW9ucyBzcGFuIHtcbiAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAubG95YWx0eSAuc3BlY2lmaWNhdGlvbnMgdWwge1xuICAgIG1hcmdpbi10b3A6IDFyZW07IH1cbiAgLmxveWFsdHkgLnNwZWNpZmljYXRpb25zIGxpIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjc1cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAuNzVyZW07IH1cbiAgICAubG95YWx0eSAuc3BlY2lmaWNhdGlvbnMgbGk6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC43Mzc1ZW07XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IC40ZW07XG4gICAgICBoZWlnaHQ6IC40ZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4ubG95YWx0eSAudGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmxveWFsdHkgLnRleHQgcCB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG4gIC5sb3lhbHR5IC50ZXh0IHAgYSB7XG4gICAgZm9udC1zaXplOiAxLjM3NWVtO1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi5sb3lhbHR5IHRhYmxlIHtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDIuMjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMWJmYmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubG95YWx0eSB0YWJsZSB0ZCwgLmxveWFsdHkgdGFibGUgdGgge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgcGFkZGluZzogLjVyZW0gMS41cmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MxYmZiZjtcbiAgICB3aWR0aDogMjAlO1xuICAgIG1heC13aWR0aDogMjAlOyB9XG4gICAgLmxveWFsdHkgdGFibGUgdGQ6bnRoLWNoaWxkKG4gKyAzKSwgLmxveWFsdHkgdGFibGUgdGg6bnRoLWNoaWxkKG4gKyAzKSB7XG4gICAgICBjb2xvcjogI2M3MDkyMzsgfVxuICAubG95YWx0eSB0YWJsZSB0aGVhZCB0cjpsYXN0LWNoaWxkIHRoIHtcbiAgICBjb2xvcjogI2M3MDkyMzsgfVxuXG4ubG95YWx0eSAudGVscyBwIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZy1sZWZ0OiAyLjc1cmVtO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZm9vdGVyLWljb24tcGhvbmUuc3ZnXCIpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDMuMjVyZW07IH1cbiAgLmxveWFsdHkgLnRlbHMgcDpsYXN0LWNoaWxkIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvaWNvbi1tb2JpbGUuc3ZnXCIpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMi41cmVtOyB9XG5cbi5sb3lhbHR5IC5hcmd1bWVudHMge1xuICBwYWRkaW5nOiA2cmVtIDA7IH1cbiAgLmxveWFsdHkgLmFyZ3VtZW50cyB1bCBsaSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDUwJTsgfVxuXG4vKiA9PT0gTmV3cy9TcGVjaWFscyBwYWdlID09PSAqL1xuLm5ld3MgLnNlY3Rpb24tYXNrIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL25ld3MtYmcuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7IH1cblxuLm5ld3MgLmlucHV0LW91dGVyIHtcbiAgd2lkdGg6IDI1LjcxNDI5JTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi10b3A6IDIuODU3MTQlO1xuICBtYXJnaW4tcmlnaHQ6IDIuODU3MTQlOyB9XG4gIC5uZXdzIC5pbnB1dC1vdXRlciBpbnB1dCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAuNWVtIC43NWVtO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5ODk4OTg7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjNzOyB9XG4gICAgLm5ld3MgLmlucHV0LW91dGVyIGlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLm5ld3MgLmlucHV0LW91dGVyIGlucHV0Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgICAgLyogRmlyZWZveCAxOC0gKi9cbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLm5ld3MgLmlucHV0LW91dGVyIGlucHV0OjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAgIC8qIEZpcmVmb3ggMTkrICovXG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gICAgICBjb2xvcjogIzAwMDsgfVxuICAgIC5uZXdzIC5pbnB1dC1vdXRlciBpbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiO1xuICAgICAgY29sb3I6ICMwMDA7IH1cbiAgICAubmV3cyAuaW5wdXQtb3V0ZXIgaW5wdXQ6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgICAubmV3cyAuaW5wdXQtb3V0ZXIgaW5wdXQuZXJyb3Ige1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2M3MDkyMzsgfVxuXG4ubmV3cyAuYnRuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAyLjg1NzE0JTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjNzA5MjM7IH1cbiAgLm5ld3MgLmJ0bjpob3ZlciB7XG4gICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLm5ld3MgLmJ0biBzcGFuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4ubmV3cyBidXR0b24uYnRuIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAubmV3cyBidXR0b24uYnRuIHNwYW4ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSkgIWltcG9ydGFudDsgfVxuXG4ubmV3cyAuc2VjdGlvbi10YWJzIC5yb3cge1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubmV3cyAuc2VjdGlvbi10YWJzIC5jb2wge1xuICBib3JkZXItYm90dG9tOiBub25lOyB9XG4gIC5uZXdzIC5zZWN0aW9uLXRhYnMgLmNvbCBhIHtcbiAgICBjb2xvcjogIzAwMDsgfVxuXG4ubmV3cyAuc2VjdGlvbi10YWJzIC5jb250ZW50IHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gIGJvcmRlci1sZWZ0OiBub25lOyB9XG5cbi5uZXdzIC5zZWN0aW9uLXRhYnMgLnRleHQgcCB7XG4gIG1hcmdpbi10b3A6IC41cmVtOyB9XG5cbi5wYWdpbmF0aW9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctcmlnaHQ6IDUwcHg7XG4gIHBhZGRpbmctdG9wOiA2cHg7IH1cbiAgLnBhZ2luYXRpb24gdWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5wYWdpbmF0aW9uIHVsOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAucGFnaW5hdGlvbiBsaSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAyLjVyZW07IH1cbiAgICAucGFnaW5hdGlvbiBsaSBhIHtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgICAucGFnaW5hdGlvbiBsaSBhLmFjdGl2ZSwgLnBhZ2luYXRpb24gbGkgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIC5wYWdpbmF0aW9uIC5saW5rLW1vcmUge1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBib3R0b206IGF1dG87IH1cblxuLyogPT09IE5ld3MvU3BlY2lhbHMgc2luZ2xlIHBhZ2UgPT09ICovXG4ubmV3cy1zaW5nbGUge1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgcGFkZGluZy1ib3R0b206IDUuNXJlbTsgfVxuICAubmV3cy1zaW5nbGUgLmRhdGUge1xuICAgIHBhZGRpbmctdG9wOiAxLjVyZW07XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgLm5ld3Mtc2luZ2xlIC5pbWctb3V0ZXIge1xuICAgIG1hcmdpbjogMnJlbSAwIDIuNXJlbTsgfVxuICAubmV3cy1zaW5nbGUgLnRhYmxlIHtcbiAgICBwYWRkaW5nLXRvcDogMnJlbTsgfVxuICAgIC5uZXdzLXNpbmdsZSAudGFibGUgdGFibGUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLm5ld3Mtc2luZ2xlIC50YWJsZSB0YWJsZSB0cjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsgfVxuICAgIC5uZXdzLXNpbmdsZSAudGFibGUgdGQsIC5uZXdzLXNpbmdsZSAudGFibGUgdGgge1xuICAgICAgd2lkdGg6IDMzLjMzMzMzMzMzJTtcbiAgICAgIHBhZGRpbmc6IC41cmVtO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMmMwYzA7IH1cblxuLyogPT09IEZhdm91ciBwYWdlID09PSAqL1xuLmZhdm91ciBzZWxlY3Qge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5mYXZvdXIgLmJvb2stZm9ybSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9mYXZvdXJzLWJnLmpwZ1wiKSBjZW50ZXIgbm8tcmVwZWF0O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAuZmF2b3VyIC5ib29rLWZvcm0gLnRleHQgcCB7XG4gICAgbWFyZ2luLXRvcDogNC4xNjY2NyU7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg7IH1cblxuLmZhdm91ciAuZm9ybS1vdXRlciB7XG4gIHdpZHRoOiA0MS40Mjg1NyU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAyLjI1cmVtIDA7XG4gIHBhZGRpbmc6IDIuODU3MTQlO1xuICB0ZXh0LWFsaWduOiBpbml0aWFsO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7IH1cblxuLmZhdm91ciAuaW5wdXQtb3V0ZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogNC4xNjY2NyU7IH1cbiAgLmZhdm91ciAuaW5wdXQtb3V0ZXIgaW5wdXQsIC5mYXZvdXIgLmlucHV0LW91dGVyIHRleHRhcmVhIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IC41ZW0gLjhlbTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4OyB9XG4gICAgLmZhdm91ciAuaW5wdXQtb3V0ZXIgaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsIC5mYXZvdXIgLmlucHV0LW91dGVyIHRleHRhcmVhOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgICAgY29sb3I6ICMwMDA7IH1cbiAgICAuZmF2b3VyIC5pbnB1dC1vdXRlciBpbnB1dDotbW96LXBsYWNlaG9sZGVyLCAuZmF2b3VyIC5pbnB1dC1vdXRlciB0ZXh0YXJlYTotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAgIC8qIEZpcmVmb3ggMTgtICovXG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLmZhdm91ciAuaW5wdXQtb3V0ZXIgaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIsIC5mYXZvdXIgLmlucHV0LW91dGVyIHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAgIC8qIEZpcmVmb3ggMTkrICovXG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLmZhdm91ciAuaW5wdXQtb3V0ZXIgaW5wdXQ6LW1zLWlucHV0LXBsYWNlaG9sZGVyLCAuZmF2b3VyIC5pbnB1dC1vdXRlciB0ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICBjb2xvcjogIzAwMDsgfVxuICAuZmF2b3VyIC5pbnB1dC1vdXRlciB0ZXh0YXJlYSB7XG4gICAgbWluLWhlaWdodDogNy41ZW07IH1cblxuLmZhdm91ciBidXR0b24uYnRuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDQuMTY2NjclO1xuICBwYWRkaW5nLXRvcDogMy4xMjUlO1xuICBwYWRkaW5nLWJvdHRvbTogMy4xMjUlO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2M3MDkyMztcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICAuZmF2b3VyIGJ1dHRvbi5idG46aG92ZXIge1xuICAgIGNvbG9yOiAjYzcwOTIzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuLmZhdm91ciAuc2VjdGlvbi1jb250ZW50IHtcbiAgcGFkZGluZy1ib3R0b206IDhyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uZmF2b3VyIC5zbGlkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IDIuMjVyZW07XG4gIG92ZXJmbG93LXg6IGhpZGRlbjsgfVxuICAuZmF2b3VyIC5zbGlkZXIgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZmF2b3VyIC5zbGlkZXIgLmJ4LXdyYXBwZXIgLmJ4LXBhZ2VyIHtcbiAgICBib3R0b206IGF1dG87XG4gICAgdG9wOiAxMDAlOyB9XG5cbi5zZWxlY3QtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4OyB9XG4gIC5zZWxlY3QtY29udGFpbmVyIHVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTFweDtcbiAgICB0b3A6IGNhbGMoMTAwJSArIDRweCk7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDBweCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4O1xuICAgIHotaW5kZXg6IDI7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAuc2VsZWN0LWNvbnRhaW5lciBzcGFuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLnNlbGVjdC1jb250YWluZXIgbGk6aG92ZXIge1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIC5zZWxlY3QtY29udGFpbmVyIHNwYW4sIC5zZWxlY3QtY29udGFpbmVyIGxpIHtcbiAgICBwYWRkaW5nOiAuNWVtIC44ZW07XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gIC5zZWxlY3QtY29udGFpbmVyIC5jdXJyLW9wdCB7XG4gICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLnNlbGVjdC1jb250YWluZXIgLmZhIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNXB4O1xuICAgIHJpZ2h0OiAxcmVtO1xuICAgIGNvbG9yOiAjOTg5ODk4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIC5zZWxlY3QtY29udGFpbmVyIC5mYSB7XG4gICAgICAgIHRvcDogMTJweDsgfSB9XG4gICAgLnNlbGVjdC1jb250YWluZXIgLmZhLnJvdGF0ZWQge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuXG4uY29udHJvbHMgYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwOyB9XG5cbi5jb250cm9scyAucHJldiwgLmNvbnRyb2xzIC5uZXh0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBtYXJnaW4tdG9wOiAtMjVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjM1KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICAuY29udHJvbHMgLnByZXY6YmVmb3JlLCAuY29udHJvbHMgLm5leHQ6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyNXB4O1xuICAgIGxlZnQ6IDIwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XG4gICAgd2lkdGg6IDE0cHg7XG4gICAgaGVpZ2h0OiAxNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAjYzcwOTIzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7IH1cbiAgLmNvbnRyb2xzIC5wcmV2OmhvdmVyLCAuY29udHJvbHMgLm5leHQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTk5LCA5LCAzNSwgMC4zNSk7IH1cbiAgICAuY29udHJvbHMgLnByZXY6aG92ZXI6YmVmb3JlLCAuY29udHJvbHMgLm5leHQ6aG92ZXI6YmVmb3JlIHtcbiAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggI2ZmZjsgfVxuXG4uY29udHJvbHMgLnByZXYge1xuICBsZWZ0OiAwOyB9XG4gIC5jb250cm9scyAucHJldjpiZWZvcmUge1xuICAgIGxlZnQ6IDMwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDEzNWRlZyk7IH1cblxuLmNvbnRyb2xzIC5uZXh0IHtcbiAgcmlnaHQ6IDA7IH1cblxuLyogPT09IENhcnMgcGFnZSA9PT0gKi9cbiNoYXNoTmF2IHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgI2hhc2hOYXYgYS5pcy1hY3RpdmUge1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi5jYXJzIC5idG4ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAyLjQyODU3JSA1JTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2M3MDkyMztcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICAuY2FycyAuYnRuOmhvdmVyIHtcbiAgICBjb2xvcjogI2M3MDkyMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG5cbi5jYXJzIC5zcGVjaWZpY2F0aW9ucyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uc2hvcnQtZGVzY3Ige1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9jYXJzLWRlc2NyLWJnLmpwZ1wiKSB0b3AgY2VudGVyIG5vLXJlcGVhdDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuc2hvcnQtZGVzY3IgLndyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDI1JTtcbiAgICBtYXJnaW46IDhyZW0gMDtcbiAgICBwYWRkaW5nOiAzLjVyZW0gMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNjAwcHgpIHtcbiAgICAgIC5zaG9ydC1kZXNjciAuY29udGFpbmVyIHtcbiAgICAgICAgd2lkdGg6IDMyJTsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOiA0MCU7IH0gfVxuICAgIC5zaG9ydC1kZXNjciAuY29udGFpbmVyIC50aXRsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICBmb250LXNpemU6IDgwcHg7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC4zczsgfVxuICAgIC5zaG9ydC1kZXNjciAuY29udGFpbmVyIC5jb2wge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lciAuY29sIGxpOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC41cyAuNHM7IH1cbiAgICAgIC5zaG9ydC1kZXNjciAuY29udGFpbmVyIC5jb2wgbGk6bnRoLW9mLXR5cGUoMikge1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC41czsgfVxuICAgICAgLnNob3J0LWRlc2NyIC5jb250YWluZXIgLmNvbCBsaTpudGgtb2YtdHlwZSgzKSB7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXMgLjZzOyB9XG4gICAgICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lciAuY29sOmZpcnN0LW9mLXR5cGUgbGkge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEyNSUpOyB9XG4gICAgICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lciAuY29sOm50aC1vZi10eXBlKDIpIGxpIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMjUlKTsgfVxuICAgIC5zaG9ydC1kZXNjciAuY29udGFpbmVyIHAge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLnNob3J0LWRlc2NyIC5jb250YWluZXIgLnRleHQgPiBwIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC41NXM7IH1cbiAgICAuc2hvcnQtZGVzY3IgLmNvbnRhaW5lcjpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAxMDAlO1xuICAgICAgdG9wOiAwO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDIwMCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7IH1cbiAgLnNob3J0LWRlc2NyLnBsYXkgLnRpdGxlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG4gIC5zaG9ydC1kZXNjci5wbGF5IC5jb2w6Zmlyc3Qtb2YtdHlwZSBsaSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuICAuc2hvcnQtZGVzY3IucGxheSAuY29sOm50aC1vZi10eXBlKDIpIGxpIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG4gIC5zaG9ydC1kZXNjci5wbGF5IC50ZXh0ID4gcCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuXG4uc3BlY2lmaWNhdGlvbnMge1xuICBwYWRkaW5nLXRvcDogNC41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbiAgYmFja2dyb3VuZDogI2VlZTsgfVxuICAuc3BlY2lmaWNhdGlvbnMubm8tcGFkZC10b3Age1xuICAgIHBhZGRpbmctdG9wOiAwOyB9XG4gICAgLnNwZWNpZmljYXRpb25zLm5vLXBhZGQtdG9wIGgyLnRpdGxlLnBhZGRpbmdzIHtcbiAgICAgIG1hcmdpbi10b3A6IC0xcmVtO1xuICAgICAgcGFkZGluZy10b3A6IDA7IH1cbiAgLnNwZWNpZmljYXRpb25zIGgyLnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgaDIudGl0bGUucGFkZGluZ3Mge1xuICAgICAgcGFkZGluZy10b3A6IDNyZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMi4yNXJlbTsgfVxuICAuc3BlY2lmaWNhdGlvbnMgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLXNwZWNzIHRhYmxlIHtcbiAgICBtYXJnaW46IDJyZW0gMDsgfVxuICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLXNwZWNzIHRyOm50aC1jaGlsZChvZGQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1zcGVjcyB0cjpudGgtY2hpbGQoZXZlbikgdGQge1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2MyYzBjMDtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYzJjMGMwOyB9XG4gIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtc3BlY3MgdHI6bnRoLWNoaWxkKDMpIHRkIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMGMwOyB9XG4gIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtc3BlY3MgdHI6bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjMmMwYzA7IH1cbiAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1zcGVjcyB0ZCB7XG4gICAgcGFkZGluZzogMXJlbSAwO1xuICAgIHdpZHRoOiAyMCU7IH1cbiAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wLm5vLWZpeGVkIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luOiAyMHB4IDA7IH1cbiAgICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcC5uby1maXhlZCAucm93OmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wLm5vLWZpeGVkIC5yb3cgLmhlYWRpbmcge1xuICAgICAgICBwYWRkaW5nOiA4cHggMDtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCB0YWJsZSB7XG4gICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBtaW4td2lkdGg6IDEwMCU7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgdHIuaGlkZGVuIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgdGgsIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCB0ZCB7XG4gICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2MyYzBjMDsgfVxuICAgICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIHRoOmZpcnN0LWNoaWxkLCAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgdGQ6Zmlyc3QtY2hpbGQge1xuICAgICAgICB3aWR0aDogMjIlOyB9XG4gICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wLmV4cGVyaW1lbnQgLm91dGVyIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcC5leHBlcmltZW50IC5pbm5lciB7XG4gICAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgICBvdmVyZmxvdy15OiB2aXNpYmxlO1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtICRtbCk7XG4gICAgICBtYXJnaW4tbGVmdDogMjUwcHg7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AuZXhwZXJpbWVudCB0YWJsZSB0ciB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2MyYzBjMDsgfVxuICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcC5leHBlcmltZW50IHRhYmxlIHRkIHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2MyYzBjMDsgfVxuICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcC5leHBlcmltZW50IHRhYmxlIHRoOmZpcnN0LWNoaWxkIHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzJjMGMwO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB3aWR0aDogMjUwcHg7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLm91dGVyOmhvdmVyICsgLnRhYmxlLXNsaWRlciAuc2xpZGUtbGVmdCwgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIC5vdXRlcjpob3ZlciArIC50YWJsZS1zbGlkZXIgLnNsaWRlLXJpZ2h0IHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnJvdyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmb250LXNpemU6IDA7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMGMwO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnJvdzphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYzJjMGMwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICAgICAgICB6LWluZGV4OiAxOyB9XG4gICAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnJvdzpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIGJvcmRlci10b3A6IG5vbmU7IH1cbiAgICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCAucm93LmhpZGRlbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRoIHtcbiAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDI7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRoLCAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRkIHtcbiAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7XG4gICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2NjBweCkge1xuICAgICAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRoLCAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRkIHtcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7IH0gfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHtcbiAgICAgICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIC50aCwgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIC50ZCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxN3B4OyB9IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCAudGgsIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCAudGQge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsgfSB9XG4gICAgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIC50aCwgLnNwZWNpZmljYXRpb25zIC50YWJsZS1kcm9wIC5jb250ZW50LCAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnRkIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnJvdyAuY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBmb250LXNpemU6IDA7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gICAgICAuc3BlY2lmaWNhdGlvbnMgLnRhYmxlLWRyb3AgLnJvdyAuY29udGVudCAudGQge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAgIC5zcGVjaWZpY2F0aW9ucyAudGFibGUtZHJvcCAucm93IC5jb250ZW50IC50ZDpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAxcHg7XG4gICAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzJjMGMwO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTBweCwgLTUwJSk7IH1cbiAgLnNwZWNpZmljYXRpb25zIC5kcm9wIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDsgfVxuICAgIC5zcGVjaWZpY2F0aW9ucyAuZHJvcC1oZWFkZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZzogLjc1cmVtIDA7XG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgLnNwZWNpZmljYXRpb25zIC5kcm9wLWhlYWRlcjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gNXB4KTtcbiAgICAgICAgcmlnaHQ6IDE1cHg7XG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDc1JSA3NSU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggIzIzMjMyMztcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjRzOyB9XG4gICAgICAuc3BlY2lmaWNhdGlvbnMgLmRyb3AtaGVhZGVyLmV4cGFuZGVkOmFmdGVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDIyNWRlZyk7IH1cbiAgLnNwZWNpZmljYXRpb25zIC5idG4tc3Ryb2tlIHtcbiAgICB3aWR0aDogMjgwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICBwYWRkaW5nOiAxcmVtIDA7IH1cbiAgICAuc3BlY2lmaWNhdGlvbnMgLmJ0bi1zdHJva2U6bGFzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAycmVtOyB9XG4gICAgLnNwZWNpZmljYXRpb25zIC5idG4tc3Ryb2tlLnByZXNzZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5jb2xzcGFuLTIge1xuICB3aWR0aDogMzAwcHggIWltcG9ydGFudDsgfVxuXG4uY29sc3Bhbi0zIHtcbiAgd2lkdGg6IDQ1MHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tNCB7XG4gIHdpZHRoOiA2MDBweCAhaW1wb3J0YW50OyB9XG5cbi5jb2xzcGFuLTUge1xuICB3aWR0aDogNzUwcHggIWltcG9ydGFudDsgfVxuXG4uY29sc3Bhbi02IHtcbiAgd2lkdGg6IDkwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tNyB7XG4gIHdpZHRoOiAxMDUwcHggIWltcG9ydGFudDsgfVxuXG4uY29sc3Bhbi04IHtcbiAgd2lkdGg6IDEyMDBweCAhaW1wb3J0YW50OyB9XG5cbi5jb2xzcGFuLTkge1xuICB3aWR0aDogMTM1MHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTAge1xuICB3aWR0aDogMTUwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTEge1xuICB3aWR0aDogMTY1MHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTIge1xuICB3aWR0aDogMTgwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTMge1xuICB3aWR0aDogMTk1MHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTQge1xuICB3aWR0aDogMjEwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbHNwYW4tMTUge1xuICB3aWR0aDogMjI1MHB4ICFpbXBvcnRhbnQ7IH1cblxuLnRhYmxlLXNsaWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAwcHgpO1xuICB3aWR0aDogNDBweDsgfVxuICAudGFibGUtc2xpZGVyIC5zbGlkZS1sZWZ0LCAudGFibGUtc2xpZGVyIC5zbGlkZS1yaWdodCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogNTAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzOyB9XG4gICAgLnRhYmxlLXNsaWRlciAuc2xpZGUtbGVmdDpiZWZvcmUsIC50YWJsZS1zbGlkZXIgLnNsaWRlLWxlZnQ6YWZ0ZXIsIC50YWJsZS1zbGlkZXIgLnNsaWRlLXJpZ2h0OmJlZm9yZSwgLnRhYmxlLXNsaWRlciAuc2xpZGUtcmlnaHQ6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTc1JSwgLTc1JSkgcm90YXRlKC00NWRlZyk7XG4gICAgICB3aWR0aDogMTRweDtcbiAgICAgIGhlaWdodDogMTRweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAjYzcwOTIzO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7IH1cbiAgICAudGFibGUtc2xpZGVyIC5zbGlkZS1sZWZ0OmhvdmVyLCAudGFibGUtc2xpZGVyIC5zbGlkZS1yaWdodDpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpOyB9XG4gICAgLnRhYmxlLXNsaWRlciAuc2xpZGUtbGVmdDpiZWZvcmUsIC50YWJsZS1zbGlkZXIgLnNsaWRlLXJpZ2h0OmJlZm9yZSB7XG4gICAgICBsZWZ0OiAtMzBweDsgfVxuICAgIC50YWJsZS1zbGlkZXIgLnNsaWRlLWxlZnQ6aG92ZXI6YmVmb3JlLCAudGFibGUtc2xpZGVyIC5zbGlkZS1yaWdodDpob3ZlcjpiZWZvcmUge1xuICAgICAgbGVmdDogMjBweDsgfVxuICAgIC50YWJsZS1zbGlkZXIgLnNsaWRlLWxlZnQ6aG92ZXI6YWZ0ZXIsIC50YWJsZS1zbGlkZXIgLnNsaWRlLXJpZ2h0OmhvdmVyOmFmdGVyIHtcbiAgICAgIGxlZnQ6IDcwcHg7IH1cbiAgLnRhYmxlLXNsaWRlciAuc2xpZGUtbGVmdCB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpOyB9XG4gIC50YWJsZS1zbGlkZXI6aG92ZXIgLnNsaWRlLWxlZnQsIC50YWJsZS1zbGlkZXI6aG92ZXIgLnNsaWRlLXJpZ2h0IHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5nYWxsZXJpZXMge1xuICBwYWRkaW5nLXRvcDogNC41cmVtO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5nYWxsZXJpZXMgLnRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjI1cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuZ2FsbGVyaWVzIC5yb3cge1xuICAgIGZvbnQtc2l6ZTogMDtcbiAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkOyB9XG4gICAgLmdhbGxlcmllcyAucm93LmRvLW1hZ2ljIC5jb2wge1xuICAgICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgxMTAwcHgpIHJvdGF0ZVkoOTBkZWcpOyB9XG4gIC5nYWxsZXJpZXMgLmNvbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMjUlO1xuICAgIGhlaWdodDogNDEuNjY2NjY2Njd2dztcbiAgICBtYXgtaGVpZ2h0OiA5MDBweDtcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDExMDBweCkgcm90YXRlWSgwZGVnKTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjhzO1xuICAgIHotaW5kZXg6IDE7IH1cbiAgICAuZ2FsbGVyaWVzIC5jb2w6aG92ZXIgLnNoYWRvdy1iZyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7IH1cbiAgICAuZ2FsbGVyaWVzIC5jb2w6aG92ZXIgLmxpbmstbW9yZSB7XG4gICAgICB3aWR0aDogNTBweDsgfVxuICAgIC5nYWxsZXJpZXMgLmNvbDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZ2FsbC10aWxlLTEuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgLmdhbGxlcmllcyAuY29sOm50aC1vZi10eXBlKDMpIHtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9nYWxsLXRpbGUtMi5qcGdcIikgY2VudGVyIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbiAgICAuZ2FsbGVyaWVzIC5jb2w6bnRoLW9mLXR5cGUoNCkge1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2dhbGwtdGlsZS0zLmpwZ1wiKSBjZW50ZXIgbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAgIC5nYWxsZXJpZXMgLmNvbDpudGgtb2YtdHlwZSg1KSB7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZ2FsbC10aWxlLTQuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgLmdhbGxlcmllcyAuY29sIC50aXRsZSB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgLmdhbGxlcmllcyAuY29sIC50aXRsZTpob3ZlciAubGluay1tb3JlOmJlZm9yZSB7XG4gICAgICAgIGxlZnQ6IDIwcHg7IH1cbiAgICAgIC5nYWxsZXJpZXMgLmNvbCAudGl0bGU6aG92ZXIgLmxpbmstbW9yZTphZnRlciB7XG4gICAgICAgIGxlZnQ6IDcwcHg7IH1cbiAgICAuZ2FsbGVyaWVzIC5jb2wgLm1lZGlhIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmdhbGxlcmllcyAubWVkaWEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMXM7IH1cbiAgICAuZ2FsbGVyaWVzIC5tZWRpYS52aXNpYmxlIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuZ2FsbGVyaWVzIC5tZWRpYSAuYmxvY2sge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiA0MS42NDI4NTcxNDI4NTcxNDI4NTcxNDI4NTcxNDI4NTd2dztcbiAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAgICAgLmdhbGxlcmllcyAubWVkaWEgLmJsb2NrLnNob3cge1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG4gICAgICAuZ2FsbGVyaWVzIC5tZWRpYSAuYmxvY2sucHVzaC1mcm9udCB7XG4gICAgICAgIHotaW5kZXg6IDE7IH1cbiAgICAgIC5nYWxsZXJpZXMgLm1lZGlhIC5ibG9jayBpZnJhbWUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgICAgLmdhbGxlcmllcyAubWVkaWEgLmJsb2NrIC55b3V0dWJlIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLmdhbGxlcmllcyAuc2hhZG93LWJnIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYpO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjNzOyB9XG4gIC5nYWxsZXJpZXMgLmxpbmstbW9yZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIC4zczsgfVxuICAgIC5nYWxsZXJpZXMgLmxpbmstbW9yZTpiZWZvcmUsIC5nYWxsZXJpZXMgLmxpbmstbW9yZTphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAyNXB4O1xuICAgICAgbGVmdDogMjBweDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAjZmZmO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7IH1cbiAgICAuZ2FsbGVyaWVzIC5saW5rLW1vcmU6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IC0zMHB4OyB9XG4gIC5nYWxsZXJpZXMgLmxpbmstYmFjayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHotaW5kZXg6IDE7XG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIC4zczsgfVxuICAgIC5nYWxsZXJpZXMgLmxpbmstYmFjazpiZWZvcmUsIC5nYWxsZXJpZXMgLmxpbmstYmFjazphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAyNXB4O1xuICAgICAgbGVmdDogNzBweDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgxMzVkZWcpO1xuICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAjZmZmO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7IH1cbiAgICAuZ2FsbGVyaWVzIC5saW5rLWJhY2s6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IDIwcHg7IH1cbiAgICAuZ2FsbGVyaWVzIC5saW5rLWJhY2s6aG92ZXI6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IC0zMHB4OyB9XG4gICAgLmdhbGxlcmllcyAubGluay1iYWNrOmhvdmVyOmFmdGVyIHtcbiAgICAgIGxlZnQ6IDI1cHg7IH1cbiAgICAuZ2FsbGVyaWVzIC5saW5rLWJhY2sgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAxO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgbGluZS1oZWlnaHQ6IDUwcHg7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7IH1cbiAgLmdhbGxlcmllcyAuc2xpZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmdhbGxlcmllcyAuY29udHJvbHMgLnByZXYsIC5nYWxsZXJpZXMgLmNvbnRyb2xzIC5uZXh0IHtcbiAgICB0b3A6IGF1dG87XG4gICAgYm90dG9tOiA1JTtcbiAgICBtYXJnaW4tdG9wOiAwcHg7IH1cbiAgLmdhbGxlcmllcyAuY29udHJvbHMgLnByZXYge1xuICAgIGxlZnQ6IGNhbGMoNTAlIC0gNjBweCk7IH1cbiAgLmdhbGxlcmllcyAuY29udHJvbHMgLm5leHQge1xuICAgIHJpZ2h0OiBjYWxjKDUwJSAtIDYwcHgpOyB9XG5cbi5jYXItY29sb3JzIC5vdXRlciB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLmNhci1jb2xvcnMgLnJvdyB7XG4gIHdpZHRoOiAyMDAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMS4ycztcbiAgZm9udC1zaXplOiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC5jYXItY29sb3JzIC5yb3cuc2hvdy1yaWdodC10YWIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cblxuLmNhci1jb2xvcnMgLmNvbCB7XG4gIGZsb2F0OiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG4gIC5jYXItY29sb3JzIC5jb2wgbGkge1xuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSA3Ljc1cmVtIC0gMjZweCAtIDEwNXB4IC0gNTBweCk7IH1cbiAgLmNhci1jb2xvcnMgLmNvbCBsaSBpbWcge1xuICAgIG1heC13aWR0aDogODAlO1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5jYXItY29sb3JzLXBhZ2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNhci1jb2xvcnMtcGFnZXIgLmlubmVyIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuY2FyLWNvbG9ycy1wYWdlciAucGFnZS1idG4tb3V0ZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogOS4zNTcxNDI4NTcxNDI4NTcxNDI4NTcxNDI4NTcxNDI5JTtcbiAgICBtaW4td2lkdGg6IDEyMHB4O1xuICAgIG1hcmdpbjogMCAzcHg7XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsgfVxuICAgIC5jYXItY29sb3JzLXBhZ2VyIC5wYWdlLWJ0bi1vdXRlcjpudGgtY2hpbGQoMSkgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjOEQ4RTk4IDAlLCAjRTVFN0VGIDEwMCUpOyB9XG4gICAgLmNhci1jb2xvcnMtcGFnZXIgLnBhZ2UtYnRuLW91dGVyOm50aC1jaGlsZCgyKSBhIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICMwOTA3MDkgMCUsICM1NDU1NTkgMTAwJSk7IH1cbiAgICAuY2FyLWNvbG9ycy1wYWdlciAucGFnZS1idG4tb3V0ZXI6bnRoLWNoaWxkKDMpIGEge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzQ5NTk3NiAwJSwgIzk4YmRkMCAxMDAlKTsgfVxuICAgIC5jYXItY29sb3JzLXBhZ2VyIC5wYWdlLWJ0bi1vdXRlcjpudGgtY2hpbGQoNCkgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjMTUyYzVhIDAlLCAjODA5MmJjIDEwMCUpOyB9XG4gICAgLmNhci1jb2xvcnMtcGFnZXIgLnBhZ2UtYnRuLW91dGVyOm50aC1jaGlsZCg1KSBhIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNFQkVCRTkgMCUsICNmZmYgMTAwJSk7XG4gICAgICBjb2xvcjogIzAwMDsgfVxuICAuY2FyLWNvbG9ycy1wYWdlciBhIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuN2VtO1xuICAgIHBhZGRpbmctdG9wOiAyNy40ODA5MTYwMzA1MzQzNTExNDUwMzgxNjc5Mzg5MzElO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGxpbmVhcjsgfVxuICAgIC5jYXItY29sb3JzLXBhZ2VyIGEuYWN0aXZlIHtcbiAgICAgIHBhZGRpbmctdG9wOiAzNSU7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLmNhci1jb2xvcnMtcGFnZXIgYTpudGgtY2hpbGQoMSkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzA5MDcwOSAwJSwgIzU0NTU1OSAxMDAlKTsgfVxuICAgIC5jYXItY29sb3JzLXBhZ2VyIGE6bnRoLWNoaWxkKDIpIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICM4NzE2MTIgMCUsICNmZjVlNzkgMTAwJSk7IH1cbiAgICAuY2FyLWNvbG9ycy1wYWdlciBhOm50aC1jaGlsZCgzKSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjNDk1OTc2IDAlLCAjOThiZGQwIDEwMCUpOyB9XG4gICAgLmNhci1jb2xvcnMtcGFnZXIgYTpudGgtY2hpbGQoNCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzE1MmM1YSAwJSwgIzgwOTJiYyAxMDAlKTsgfVxuICAgIC5jYXItY29sb3JzLXBhZ2VyIGEgcCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDAgMHJlbSAuMjVyZW07XG4gICAgICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuXG4uY2FyLWNvbG9ycyAuYngtd3JhcHBlciAuYngtY2FwdGlvbiB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbi5jYXItY29sb3JzIC5ieC13cmFwcGVyIC5ieC1jYXB0aW9uIHNwYW4ge1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjtcbiAgY29sb3I6ICMwMDA7IH1cblxuLmNhci1jb2xvcnMgI2NhckludGVyQ29sb3JTbCBpbWcge1xuICBtYXgtaGVpZ2h0OiA1MDBweDsgfVxuXG4uYWNjZXNzb3JpZXMuZGVzY3JpcHRpb24gLmNvbDpsYXN0LW9mLXR5cGUge1xuICBwYWRkaW5nLXRvcDogNXJlbTsgfVxuXG4uYWNjZXNzb3JpZXMgLnJvdyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAuYWNjZXNzb3JpZXMgLnJvdzphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmFjY2Vzc29yaWVzIC5jb2wge1xuICB3aWR0aDogNTAlO1xuICBmbG9hdDogbGVmdDsgfVxuICAuYWNjZXNzb3JpZXMgLmNvbDpsYXN0LW9mLXR5cGUge1xuICAgIHBhZGRpbmctbGVmdDogNC4yODU3MSU7IH1cbiAgLmFjY2Vzc29yaWVzIC5jb2wgaW1nIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cblxuLmFjY2Vzc29yaWVzIGltZyB7XG4gIG1heC1oZWlnaHQ6IDQwdnc7IH1cblxuLnNlY3Rpb24tdGFicyAuY29udGVudCB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2M3MDkyMzsgfVxuICAuc2VjdGlvbi10YWJzIC5jb250ZW50IC50ZXh0IHAge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cblxuLyogPT09IEVxdWlwbWVudCBwYWdlID09PSAqL1xuLmVxdWlwbWVudCAudW5kZXItY2VudGVyZWQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmVxdWlwbWVudCAuc2VjdGlvbi1jb250ZW50IC50aXRsZSB7XG4gIG1hcmdpbi10b3A6IDMuNzVyZW07IH1cbiAgLmVxdWlwbWVudCAuc2VjdGlvbi1jb250ZW50IC50aXRsZSArIC50ZXh0IHAge1xuICAgIG1hcmdpbi10b3A6IDEuODc1cmVtOyB9XG5cbi5lcXVpcG1lbnQgLmVxdWlwLW1vZHVsZXMgLmNvbCB7XG4gIHdpZHRoOiA1MCU7XG4gIGZsb2F0OiBsZWZ0OyB9XG4gIC5lcXVpcG1lbnQgLmVxdWlwLW1vZHVsZXMgLmNvbDpmaXJzdC1vZi10eXBlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0LjI4NTcxJTsgfVxuICAuZXF1aXBtZW50IC5lcXVpcC1tb2R1bGVzIC5jb2w6bGFzdC1vZi10eXBlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDQuMjg1NzElOyB9XG5cbi5lcXVpcG1lbnQgLmVxdWlwLW1vZHVsZXMgLnRleHQgcCB7XG4gIG1hcmdpbi10b3A6IDA7IH1cblxuLmVxdWlwbWVudCAuZXF1aXAtbW9kdWxlcyAudGV4dCBoMyB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgZm9udC1zaXplOiAxLjM3NWVtO1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG5cbi5lcXVpcG1lbnQgLmFyZ3VtZW50cyB7XG4gIG1hcmdpbi10b3A6IDMuNzVyZW07XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9lcXVpcG1lbnQtYmcuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbiAgLmVxdWlwbWVudCAuYXJndW1lbnRzIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5lcXVpcG1lbnQgLmFyZ3VtZW50cyAuY29sIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgZm9udC1zaXplOiAwOyB9XG4gICAgLmVxdWlwbWVudCAuYXJndW1lbnRzIC5jb2wgPiB1bCA+IGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbi10b3A6IDMuNzVyZW07XG4gICAgICBtaW4taGVpZ2h0OiAxMTZweDtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgICAuZXF1aXBtZW50IC5hcmd1bWVudHMgLmNvbCA+IHVsID4gbGkgPiBwIHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMjVweDtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiO1xuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApOyB9XG4gICAgICAuZXF1aXBtZW50IC5hcmd1bWVudHMgLmNvbCA+IHVsID4gbGkgdWwge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEyNXB4OyB9XG4gICAgICAgIC5lcXVpcG1lbnQgLmFyZ3VtZW50cyAuY29sID4gdWwgPiBsaSB1bCA+IGxpIHtcbiAgICAgICAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMXJlbTsgfVxuICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xuICAgICAgICAgICAgLmVxdWlwbWVudCAuYXJndW1lbnRzIC5jb2wgPiB1bCA+IGxpIHVsID4gbGkge1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcmVtOyB9IH1cbiAgICAgICAgICAuZXF1aXBtZW50IC5hcmd1bWVudHMgLmNvbCA+IHVsID4gbGkgdWwgPiBsaTpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogLjczNzVlbTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogLjRlbTtcbiAgICAgICAgICAgIGhlaWdodDogLjRlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7IH1cbiAgICAgICAgICAuZXF1aXBtZW50IC5hcmd1bWVudHMgLmNvbCA+IHVsID4gbGkgdWwgPiBsaSBwIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7IH1cblxuLyogPT09IEJvZHkgcmVwYWlyLWxpZ2h0IHBhZ2UgPT09ICovXG4uYm9keS1yZXBhaXItbGlnaHQgLnZpZGVvIGlmcmFtZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4uY29udGFjdC1pbmZvIHtcbiAgcGFkZGluZy10b3A6IDMuNzVyZW07XG4gIHBhZGRpbmctYm90dG9tOiA0LjVlbTsgfVxuICAuY29udGFjdC1pbmZvIC5yb3cge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY29udGFjdC1pbmZvIC5yb3cgLmNvbCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMjAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIuODU3MTQlO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLmNvbnRhY3QtaW5mbyAuYmxvY2sge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH1cbiAgLmNvbnRhY3QtaW5mby10aXRsZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiOyB9XG4gIC5jb250YWN0LWluZm8tdGV4dCB7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYkxpZ2h0XCI7IH1cbiAgLmNvbnRhY3QtaW5mbyAuYnRuIHtcbiAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYzcwOTIzO1xuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7IH1cbiAgICAuY29udGFjdC1pbmZvIC5idG46aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi8qID09PSBCb2R5IHJlcGFpciBwYWdlID09PSAqL1xuLmJvZHktcmVwYWlyOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogOC43NXJlbTsgfVxuXG4uYm9keS1yZXBhaXIgLmZlYXR1cmUge1xuICBtYXJnaW46IDIuMjVyZW0gMDtcbiAgZm9udC1zaXplOiAwOyB9XG4gIC5ib2R5LXJlcGFpciAuZmVhdHVyZSAuY29sIHtcbiAgICB3aWR0aDogMzIuMTQyODYlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAxLjc4NTcxJTtcbiAgICBwYWRkaW5nLWxlZnQ6IDIuODU3MTQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDIuODU3MTQlO1xuICAgIGZsb2F0OiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgLmJvZHktcmVwYWlyIC5mZWF0dXJlIC5jb2w6bnRoLW9mLXR5cGUoM24tMikge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLmJvZHktcmVwYWlyIC5mZWF0dXJlIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLmJvZHktcmVwYWlyIC5mZWF0dXJlLXRpdGxlIHtcbiAgICBtYXJnaW46IDFyZW0gMDtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1heC1oZWlnaHQ6IDEuMmVtO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmJvZHktcmVwYWlyIC5mZWF0dXJlLXRleHQge1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG5cbi5ib2R5LXJlcGFpciAuc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAyLjI1cmVtO1xuICBvdmVyZmxvdy14OiBoaWRkZW47IH1cbiAgLmJvZHktcmVwYWlyIC5zbGlkZXIgdWwge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLmJvZHktcmVwYWlyIC5zbGlkZXIgbGkge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cblxuLyogPT09IENvcnBvcmF0ZSB0cmFkZSBwYWdlID09PSAqL1xuLmNvcnBvcmF0ZS10cmFkZSAuYXJndW1lbnRzIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2NvcnBvcmF0ZS1iZy5qcGdcIikgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAuY29ycG9yYXRlLXRyYWRlIC5hcmd1bWVudHMgLnRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmNvcnBvcmF0ZS10cmFkZSAuYXJndW1lbnRzIGxpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4gIC5jb3Jwb3JhdGUtdHJhZGUgLmFyZ3VtZW50cyAuY29sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwJTsgfVxuICAgIC5jb3Jwb3JhdGUtdHJhZGUgLmFyZ3VtZW50cyAuY29sOm50aC1vZi10eXBlKDIpIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwJTtcbiAgICAgIHBhZGRpbmctbGVmdDogNS43MTQyOSU7IH1cbiAgLmNvcnBvcmF0ZS10cmFkZSAuYXJndW1lbnRzIC50ZXh0IHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBwYWRkaW5nLXRvcDogLjVyZW07XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5jb3Jwb3JhdGUtdHJhZGUgLmFyZ3VtZW50cyAudGV4dCBhIHtcbiAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi8qID09PSBQYXJ0cyBwYWdlID09PSAqL1xuLnBhcnRzIC5ib29rLWZvcm0ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvcGFydHMtYmcuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cblxuLnBhcnRzIC5zZWN0aW9uLWNvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogM3JlbTsgfVxuXG4ucGFydHMgLnRleHQge1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5wYXJ0cyAudGV4dCBwIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMge1xuICBwYWRkaW5nLWJvdHRvbTogOHJlbTtcbiAgcGFkZGluZy10b3A6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgLnBhcnRzIC5zcGVjaWZpY2F0aW9ucyBoMi50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMi41cmVtOyB9XG4gIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3Age1xuICAgIG1hcmdpbi1ib3R0b206IC4yNXJlbTsgfVxuICAgIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3AtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cbiAgICAgIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3AtaGVhZGVyOmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsgfVxuICAgIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3AgLml0ZW0ge1xuICAgICAgcGFkZGluZzogMi4xNDI4NiUgMCAwOyB9XG4gICAgICAucGFydHMgLnNwZWNpZmljYXRpb25zIC5kcm9wIC5pdGVtIC5pbWctb3V0ZXIge1xuICAgICAgICB3aWR0aDogMjEuNDI4NTclO1xuICAgICAgICBmbG9hdDogbGVmdDsgfVxuICAgICAgLnBhcnRzIC5zcGVjaWZpY2F0aW9ucyAuZHJvcCAuaXRlbSAuY29udGVudCB7XG4gICAgICAgIHdpZHRoOiA3OC41NzE0MyU7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDQuMjg1NzElO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gICAgICAgIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3AgLml0ZW0gLmNvbnRlbnQgLnRpdGxlIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogLjI1cmVtOyB9XG4gICAgICAgIC5wYXJ0cyAuc3BlY2lmaWNhdGlvbnMgLmRyb3AgLml0ZW0gLmNvbnRlbnQgLnRpdGxlLCAucGFydHMgLnNwZWNpZmljYXRpb25zIC5kcm9wIC5pdGVtIC5jb250ZW50IC5kZXNjciB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG4vKiA9PT0gUGFydHMgcGFnZSA9PT0gKi9cbi53YXJyYW50eSAuc2VjdGlvbi1jb250ZW50IC50aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ud2FycmFudHkgLnN1Yi10aXRsZSB7XG4gIG1hcmdpbjogMi41cmVtIDAgMS41cmVtOyB9XG4gIC53YXJyYW50eSAuc3ViLXRpdGxlIHAge1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjsgfVxuXG4ud2FycmFudHkgLnRleHQgdWwge1xuICBtYXJnaW4tdG9wOiAxcmVtOyB9XG5cbi53YXJyYW50eSAudGV4dCBwLCAud2FycmFudHkgLnRleHQgbGkge1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuXG4ud2FycmFudHkgLnRleHQgdWwgbGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogMS41cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogLjc1cmVtOyB9XG4gIC53YXJyYW50eSAudGV4dCB1bCBsaTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC43Mzc1ZW07XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogLjRlbTtcbiAgICBoZWlnaHQ6IC40ZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7IH1cblxuLndhcnJhbnR5IC50ZXh0IHN0cm9uZyB7XG4gIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi53YXJyYW50eSAudGFibGUtZHJvcCB7XG4gIHBhZGRpbmctdG9wOiAwLjg3NXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDQuNXJlbTsgfVxuICAud2FycmFudHkgLnRhYmxlLWRyb3AgLnRleHQgaDQge1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICBmb250LXNpemU6IDEuMzc1ZW07XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuICAud2FycmFudHkgLnRhYmxlLWRyb3AgLnRleHQgcCB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTsgfVxuXG4vKiA9PT0gQWNjZXNzb3JpZXMgcGFnZSA9PT0gKi9cbi5hY2Nlc3NvcmllcyA+IC53cmFwIHtcbiAgcGFkZGluZy1ib3R0b206IDQuNXJlbTsgfVxuXG4uYWNjZXNzb3JpZXMgLnRleHQgcCB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG5cbi5hY2Nlc3NvcmllcyAuY2FyLXRpdGxlIHtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyogPT09IFRyYWRlLWluIHBhZ2UgPT09ICovXG4udHJhZGUtaW4gcCB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiOyB9XG5cbi50cmFkZS1pbiAuYXJndW1lbnRzIHtcbiAgcGFkZGluZy1ib3R0b206IDdyZW07XG4gIHBhZGRpbmctdG9wOiAwO1xuICBiYWNrZ3JvdW5kOiAjZmZmOyB9XG4gIC50cmFkZS1pbiAuYXJndW1lbnRzIC5jb2wge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLnRyYWRlLWluIC5hcmd1bWVudHMgLmNvbCBsaSB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAgICAgLnRyYWRlLWluIC5hcmd1bWVudHMgLmNvbCBsaTpudGgtb2YtdHlwZShvZGQpIHAge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAycmVtOyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHtcbiAgICAgICAgLnRyYWRlLWluIC5hcmd1bWVudHMgLmNvbCBsaSBpbWcge1xuICAgICAgICAgIHdpZHRoOiA2NXB4OyB9IH1cbiAgICAudHJhZGUtaW4gLmFyZ3VtZW50cyAuY29sID4gdWwgPiBsaSA+IHAge1xuICAgICAgcGFkZGluZy1sZWZ0OiA5MHB4OyB9XG4gIC50cmFkZS1pbiAuYXJndW1lbnRzIC50ZXh0IHtcbiAgICBwYWRkaW5nLXRvcDogLjI1cmVtO1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLyogPT09IFByb1RlY3QgcGFnZSA9PT0gKi9cbi5wcm90ZWN0IHAge1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuXG4ucHJvdGVjdCAuc2VjdGlvbi1jb250ZW50IHtcbiAgcGFkZGluZy1ib3R0b206IDFyZW07IH1cblxuLnByb3RlY3QgLnN1Yi10aXRsZSB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNjNzA5MjM7IH1cblxuLnByb3RlY3QgLmFyZ3VtZW50cyAuY29sIHtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLnByb3RlY3QgLmFyZ3VtZW50cyAuY29sIGxpIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAucHJvdGVjdCAuYXJndW1lbnRzIC5jb2wgPiB1bCA+IGxpID4gcCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMjBweDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xuICAgICAgLnByb3RlY3QgLmFyZ3VtZW50cyAuY29sID4gdWwgPiBsaSA+IHAge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDkwcHg7IH0gfVxuXG4ucHJvdGVjdCAuYXJndW1lbnRzIHN0cm9uZyB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgZm9udC1zaXplOiAxLjM3NWVtOyB9XG5cbi5wcm90ZWN0IC5zbGlkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA4cmVtOyB9XG4gIC5wcm90ZWN0IC5zbGlkZXIgbGksIC5wcm90ZWN0IC5zbGlkZXIgdWwge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLnByb3RlY3QgLnNsaWRlciAuY29udHJvbHMgLnByZXYsIC5wcm90ZWN0IC5zbGlkZXIgLmNvbnRyb2xzIC5uZXh0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7IH1cblxuLyogPT09IEFzc2lzdGFuY2UgcGFnZSA9PT0gKi9cbi5hc3Npc3RhbmNlIC5zZWN0aW9uLWFzayB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9hc3Npc3RhbmNlLWJnLmpwZ1wiKSBjZW50ZXIgbm8tcmVwZWF0OyB9XG4gIC5hc3Npc3RhbmNlIC5zZWN0aW9uLWFzayBzdHJvbmcge1xuICAgIGNvbG9yOiAjYzcwOTIzOyB9XG5cbi5hc3Npc3RhbmNlIC50YWJsZS1kcm9wIHRhYmxlIHtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7IH1cbiAgLmFzc2lzdGFuY2UgLnRhYmxlLWRyb3AgdGFibGUgdGhlYWQge1xuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgLmFzc2lzdGFuY2UgLnRhYmxlLWRyb3AgdGFibGUgdGJvZHkgdGQ6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gICAgY29sb3I6ICNjNzA5MjM7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuXG4uYXNzaXN0YW5jZSAudGFibGUtZHJvcCBwIGIge1xuICBtYXJnaW4tYm90dG9tOiAtMXJlbTtcbiAgZm9udC1mYW1pbHk6IFwiTGF0b1dlYlwiOyB9XG5cbi5hc3Npc3RhbmNlIC50YWJsZS1kcm9wIG9sIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsOyB9XG4gIC5hc3Npc3RhbmNlIC50YWJsZS1kcm9wIG9sIGxpIHtcbiAgICBwYWRkaW5nLXRvcDogLjVyZW07IH1cbiAgICAuYXNzaXN0YW5jZSAudGFibGUtZHJvcCBvbCBsaSBiIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjsgfVxuXG4uYXNzaXN0YW5jZSBoNC5jb2xvcmVkIHtcbiAgY29sb3I6ICNjNzA5MjM7IH1cblxuLmFzc2lzdGFuY2UgaDQgaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1sZWZ0OiAyLjI1cmVtO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZm9vdGVyLWljb24tbWFya2VyLnN2Z1wiKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byAyLjVyZW07IH1cblxuLmFzc2lzdGFuY2UgaDQgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1sZWZ0OiAyLjI1cmVtO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZm9vdGVyLWljb24tcGhvbmUuc3ZnXCIpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDIuNXJlbTtcbiAgY29sb3I6ICMwMDA7IH1cbiAgLmFzc2lzdGFuY2UgaDQgYS5tb2JpbGUge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9pY29uLW1vYmlsZS5zdmdcIikgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAyLjVyZW07IH1cblxuLmFzc2lzdGFuY2UgaDQgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJMaWdodFwiO1xuICBmb250LXNpemU6IC43MjcyNzI3MmVtO1xuICBjb2xvcjogIzAwMDsgfVxuXG4uYXNzaXN0YW5jZSAuY29sdW1ucyB7XG4gIHdpZHRoOiA3NSU7XG4gIGNvbHVtbi1jb3VudDogMzsgfVxuXG4uYXNzaXN0YW5jZSAuc2VsZWN0LWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIG1heC13aWR0aDogNDAwcHg7IH1cbiAgLmFzc2lzdGFuY2UgLnNlbGVjdC1jb250YWluZXIgLnNlbGVjdCBsaTpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmFzc2lzdGFuY2UgLnNwZWNpZmljYXRpb25zIHtcbiAgcGFkZGluZy1ib3R0b206IDZyZW07IH1cblxuLyogPT09IFZhY2FuY2llcyBwYWdlID09PSAqL1xuLnZhY2FuY2llcyAuc3BlY2lmaWNhdGlvbnMge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuXG4udmFjYW5jaWVzIC5kcm9wLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cbiAgLnZhY2FuY2llcyAuZHJvcC1oZWFkZXI6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cblxuLnZhY2FuY2llcyAudGFibGUtZHJvcCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLnZhY2FuY2llcyBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLm91dC1kcm9wIHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAub3V0LWRyb3AgaDQge1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjtcbiAgICBmb250LXNpemU6IDEuMzc1ZW07XG4gICAgbWFyZ2luLXRvcDogNHJlbTsgfVxuXG4vKiA9PT0gSW5zdXJhbmNlIHBhZ2UgPT09ICovXG4uaW5zdXJhbmNlIC5hcmd1bWVudHMge1xuICBtYXJnaW4tdG9wOiAwO1xuICBiYWNrZ3JvdW5kOiBub25lOyB9XG4gIC5pbnN1cmFuY2UgLmFyZ3VtZW50cyAucm93IHtcbiAgICBmb250LXNpemU6IDA7IH1cbiAgLmluc3VyYW5jZSAuYXJndW1lbnRzIC5jb2wge1xuICAgIHdpZHRoOiAyNSU7XG4gICAgcGFkZGluZzogMCAyLjE0Mjg2JTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICAuaW5zdXJhbmNlIC5hcmd1bWVudHMgLmNvbCBpbWcge1xuICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTsgfVxuXG4uaW5zdXJhbmNlIC5zZWN0aW9uLWNvbnRlbnQ6bGFzdC1vZi10eXBlIHtcbiAgcGFkZGluZy1ib3R0b206IDhyZW07IH1cblxuLmluc3VyYW5jZSAuc2VjdGlvbi1jb250ZW50IHAge1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5pbnN1cmFuY2UgLnNlY3Rpb24tY29udGVudCB1bCB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLmluc3VyYW5jZSAuc2VjdGlvbi1jb250ZW50IGxpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgcGFkZGluZy1ib3R0b206IC43NXJlbTsgfVxuICAuaW5zdXJhbmNlIC5zZWN0aW9uLWNvbnRlbnQgbGk6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAuNzM3NWVtO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IC40ZW07XG4gICAgaGVpZ2h0OiAuNGVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5pbnN1cmFuY2UgLnNlY3Rpb24tY29udGVudCAud2l0aC1pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nLWxlZnQ6IDIuMjVyZW07XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9mb290ZXItaWNvbi1waG9uZS5zdmdcIikgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMi41cmVtO1xuICBjb2xvcjogIzAwMDsgfVxuXG4uaW5zdXJhbmNlIC5zZWN0aW9uLWNvbnRlbnQgLmNvbG9yZWQge1xuICBjb2xvcjogI2M3MDkyMzsgfVxuXG4vKiA9PT0gQ29uc3VsdGFudHMgcGFnZSA9PT0gKi9cbi5jb25zdWx0YW50cyB1bCB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIGZvbnQtc2l6ZTogMDsgfVxuICAuY29uc3VsdGFudHMgdWw6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTsgfVxuXG4uY29uc3VsdGFudHMgLmNhdGVnLWxpc3Qge1xuICBtYXJnaW46IDMuNzVyZW0gMDsgfVxuICAuY29uc3VsdGFudHMgLmNhdGVnLWxpc3QgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7IH1cbiAgLmNvbnN1bHRhbnRzIC5jYXRlZy1saXN0IGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5jb25zdWx0YW50cyAuY2F0ZWctbGlzdCBpbnB1dFt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsIHtcbiAgICAgIGNvbG9yOiAjYzcwOTIzOyB9XG4gIC5jb25zdWx0YW50cyAuY2F0ZWctbGlzdCBsYWJlbCB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBjb2xvcjogIzAwMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4yczsgfVxuICAgIC5jb25zdWx0YW50cyAuY2F0ZWctbGlzdCBsYWJlbDpob3ZlciB7XG4gICAgICBjb2xvcjogI2M3MDkyMztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7IH1cblxuLmNvbnN1bHRhbnRzLWxpc3QgbGkge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDIxLjQyODU3JTtcbiAgbWFyZ2luLXJpZ2h0OiA0LjI4NTcxJTtcbiAgbWFyZ2luLWJvdHRvbTogNC41cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gIC5jb25zdWx0YW50cy1saXN0IGxpOm50aC1vZi10eXBlKDRuKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbi5jb25zdWx0YW50cy1saXN0IC5jb250ZW50IHtcbiAgcGFkZGluZy10b3A6IC41cmVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi5jb25zdWx0YW50cy1saXN0IC5uYW1lIHtcbiAgbWFyZ2luLXRvcDogMXJlbTsgfVxuXG4uY29uc3VsdGFudHMtbGlzdCAub2NjdXBhdGlvbiBwIHtcbiAgbWluLWhlaWdodDogMy4xNWVtOyB9XG5cbi5jb25zdWx0YW50cy1saXN0IC50ZWxzIHAge1xuICBtYXJnaW4tdG9wOiAuNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4OyB9XG5cbi5jb25zdWx0YW50cy1saXN0IC50ZWxzIC50ZWwge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoXCIuLi9pbWcvZm9vdGVyLWljb24tcGhvbmUuc3ZnXCIpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDsgfVxuXG4uY29uc3VsdGFudHMtbGlzdCAudGVscyAuZmF4IHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2ljb24tZmF4LnN2Z1wiKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7IH1cblxuLmNvbnN1bHRhbnRzLWxpc3QgLnRlbHMgLm1vYiB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9pY29uLW1vYmlsZS5zdmdcIikgMC43NSUgY2VudGVyIG5vLXJlcGVhdDsgfVxuXG4uY29uc3VsdGFudHMtbGlzdCAuYnRuIHtcbiAgcGFkZGluZzogMTJweCAzMHB4OyB9XG5cbi8qID09PSBRdWVzdGlvbnMgcGFnZSA9PT0gKi9cbi5xdWVzdGlvbnMgLnRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5xdWVzdGlvbnMtcGFnZSB7XG4gIHBhZGRpbmctdG9wOiA3cmVtO1xuICBmb250LWZhbWlseTogXCJMYXRvV2ViTGlnaHRcIjsgfVxuXG4ucXVlc3Rpb25zLWl0ZW0ge1xuICBwYWRkaW5nLWJvdHRvbTogM3JlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAucXVlc3Rpb25zLWl0ZW06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLnF1ZXN0aW9ucy1pdGVtIC50ZXh0IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi5xdWVzdGlvbnMgLmNvbCB7XG4gIGZsb2F0OiBsZWZ0OyB9XG4gIC5xdWVzdGlvbnMgLmNvbC0xIHtcbiAgICB3aWR0aDogMTIwcHg7IH1cbiAgLnF1ZXN0aW9ucyAuY29sLTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMjBweCk7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjUxNTE1JTtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjNzA5MjM7IH1cblxuLnF1ZXN0aW9ucyAubmFtZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9XZWJcIjsgfVxuXG4ucXVlc3Rpb25zIC5kYXRlLCAucXVlc3Rpb25zIC5hbnN3ZXIge1xuICBjb2xvcjogIzZENkQ2RDsgfVxuXG4ucXVlc3Rpb25zIC50b2dnbGVyIC5mYSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzOyB9XG5cbi5xdWVzdGlvbnMgLnRvZ2dsZXIuc2hvd2luZyAuZmEge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG5cbi5xdWVzdGlvbnMgLnBhZ2luYXRpb24ge1xuICBtYXJnaW4tYm90dG9tOiA2cmVtOyB9XG5cbi5xdWVzdGlvbnMgLmxpbmstbW9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5xdWVzdGlvbnMgLmxpbmstbW9yZTpiZWZvcmUsIC5xdWVzdGlvbnMgLmxpbmstbW9yZTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjVweDtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgIHdpZHRoOiAxNHB4O1xuICAgIGhlaWdodDogMTRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgIGJveC1zaGFkb3c6IDFweCAxcHggI2ZmZjtcbiAgICB0cmFuc2l0aW9uOiBsZWZ0IC4zczsgfVxuICAucXVlc3Rpb25zIC5saW5rLW1vcmU6YmVmb3JlIHtcbiAgICBsZWZ0OiAtMzBweDsgfVxuICAucXVlc3Rpb25zIC5saW5rLW1vcmU6aG92ZXI6YmVmb3JlIHtcbiAgICBsZWZ0OiAyMHB4OyB9XG4gIC5xdWVzdGlvbnMgLmxpbmstbW9yZTpob3ZlcjphZnRlciB7XG4gICAgbGVmdDogNzBweDsgfVxuXG4ucXVlc3Rpb25zIC5hc2stZm9ybSAudGl0bGUge1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi5xdWVzdGlvbnMgLmFzay1mb3JtIC5mb3JtLW91dGVyIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIC5xdWVzdGlvbnMgLmFzay1mb3JtIC5mb3JtLW91dGVyIC50ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnF1ZXN0aW9ucyAuYXNrLWZvcm0gLmZvcm0tb3V0ZXIgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuXG4ucXVlc3Rpb25zIC5hc2stZm9ybSAuaGFsZi13aWR0aCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDQ4LjM4NzElOyB9XG4gIC5xdWVzdGlvbnMgLmFzay1mb3JtIC5oYWxmLXdpZHRoOm50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cblxuLyogPT09IEJ1eSBjYXIgcGFnZSA9PT0gKi9cbi5idXktY2FyIHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAuYnV5LWNhciAuc2VjdGlvbi1jb250ZW50IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogOXJlbTsgfVxuICAgIC5idXktY2FyIC5zZWN0aW9uLWNvbnRlbnQ6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgLmJ1eS1jYXIgLnRpdGxlLXN0ZXAge1xuICAgIG1hcmdpbi10b3A6IDZyZW07IH1cbiAgICAuYnV5LWNhciAudGl0bGUtc3RlcCBwIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBmb250LXNpemU6IDAuOTFlbTsgfVxuICAgIC5idXktY2FyIC50aXRsZS1zdGVwIHNwYW4ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLmJ1eS1jYXIgLnNlY3Rpb24tY29udGVudCA+IC5jb2wge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgICAuYnV5LWNhciAuc2VjdGlvbi1jb250ZW50ID4gLmNvbC1hIHtcbiAgICAgIHdpZHRoOiAzOC44ODg4OSU7XG4gICAgICBmbG9hdDogbGVmdDsgfVxuICAgIC5idXktY2FyIC5zZWN0aW9uLWNvbnRlbnQgPiAuY29sLWIge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNS43MTQyOSU7IH1cbiAgLmJ1eS1jYXIgLnNlbGVjdC1jb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICAuYnV5LWNhciAuc2VsZWN0LWNvbnRhaW5lciB1bCB7XG4gICAgICB6LWluZGV4OiA1MTsgfVxuICAuYnV5LWNhciAuY2FyLWNvbG9ycyAuY29sIHtcbiAgICBmbG9hdDogbm9uZTsgfVxuICAgIC5idXktY2FyIC5jYXItY29sb3JzIC5jb2wgLmJ4LWNvbnRyb2xzIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuYnV5LWNhciAuY2FyLWNvbG9ycyAuY29sIGxpIGltZyB7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0MDBweCkge1xuICAgICAgLmJ1eS1jYXIgLmNhci1jb2xvcnMgLmNvbCAuYngtY2FwdGlvbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gICAgLmJ1eS1jYXIgLmNhci1jb2xvcnMgLmNvbCAuY2FyLWNvbG9ycy1wYWdlciB7XG4gICAgICBoZWlnaHQ6IDIxMHB4OyB9XG4gIC5idXktY2FyIC5hc2stZm9ybSAuZm9ybS1vdXRlciB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuYnV5LWNhciAuYXNrLWZvcm0gLmZvcm0tb3V0ZXIgLnRleHQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuLyogPT09IDQwNCBwYWdlID09PSAqL1xuLnBhZ2UtNDA0LmhlYWRlciB7XG4gIHBhZGRpbmc6IDVyZW0gMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5wYWdlLTQwNC5oZWFkZXIgLnRpdGxlIHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvV2ViXCI7XG4gICAgZm9udC1zaXplOiAzMjBweDtcbiAgICBjb2xvcjogI2E1YTVhNTsgfVxuICAucGFnZS00MDQuaGVhZGVyIC50ZXh0IHAge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLnBhZ2UtNDA0LmhlYWRlciAudGV4dCBhIHtcbiAgICBjb2xvcjogI2M3MDkyMzsgfVxuXG4vKiA9PT0gQ3JlZGl0IHBhZ2UgPT09ICovXG4uY3JlZGl0IC5uby1wYWQtdG9wIHtcbiAgcGFkZGluZy10b3A6IDA7IH1cblxuLmNyZWRpdCAuZG91YmxlLXBhZC1ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogNy41cmVtOyB9XG5cbi5jcmVkaXQgLnNlY3Rpb24tY29udGVudCBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAxLjc1cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogLjc1cmVtOyB9XG4gIC5jcmVkaXQgLnNlY3Rpb24tY29udGVudCBsaTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC43Mzc1ZW07XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogLjRlbTtcbiAgICBoZWlnaHQ6IC40ZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7IH1cblxuLmNyZWRpdCAudGVscyBwOmxhc3QtY2hpbGQge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoLi4vaW1nL2Zvb3Rlci1pY29uLXBob25lLnN2ZykgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMy4yNXJlbTsgfVxuXG4uY3JlZGl0IC50YWJsZS1kcm9wIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4uY3JlZGl0IHRhYmxlIHRkOm50aC1jaGlsZChuICsgMykge1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKiA9PT0gU3BlY2lhbCBvZmZlcnMgcGFnZSA9PT0gKi9cbi5zcGVjLW9mZmVycyAuc2VjdGlvbi1jb250ZW50LnBhZC1ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMTByZW07IH1cblxuLnNwZWMtb2ZmZXJzIC5zZWN0aW9uLWNvbnRlbnQgcDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7IH1cblxuLnNwZWMtb2ZmZXJzIC5zZWN0aW9uLWNvbnRlbnQgdWwge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07IH1cblxuLnNwZWMtb2ZmZXJzIC50ZWxzIHA6bGFzdC1jaGlsZCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi9pbWcvaWNvbi1tb2JpbGUuc3ZnKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byAyLjVyZW07IH1cblxuLnNwZWMtb2ZmZXJzIC50YWJsZS1kcm9wIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi8qID09PSBTZWFyY2ggcmVzdWx0IHBhZ2UgPT09ICovXG4uc2VhcmNoLXJlc3VsdCBwIGEge1xuICBjb2xvcjogI2M3MDkyMzsgfVxuXG4uc2VhcmNoLXJlc3VsdCAuc2VjdGlvbi1jb250ZW50IHtcbiAgcGFkZGluZy1ib3R0b206IDZyZW07IH1cblxuLnNlYXJjaC1yZXN1bHQgLnJlc3VsdCB7XG4gIHBhZGRpbmctdG9wOiA0LjVyZW07IH1cbiAgLnNlYXJjaC1yZXN1bHQgLnJlc3VsdDpmaXJzdC1jaGlsZCB7XG4gICAgcGFkZGluZy10b3A6IDA7IH1cbiAgLnNlYXJjaC1yZXN1bHQgLnJlc3VsdCAuc2VjdGlvbiB7XG4gICAgY29sb3I6ICNjNzA5MjM7IH1cbiAgLnNlYXJjaC1yZXN1bHQgLnJlc3VsdCBhIHtcbiAgICBjb2xvcjogIzAwMDsgfVxuICAuc2VhcmNoLXJlc3VsdCAucmVzdWx0IC5wb3N0IHtcbiAgICBwYWRkaW5nLXRvcDogM3JlbTsgfVxuICAuc2VhcmNoLXJlc3VsdCAucmVzdWx0IC50ZXh0IHAge1xuICAgIG1hcmdpbi10b3A6IC43NXJlbTsgfVxuICAuc2VhcmNoLXJlc3VsdCAucmVzdWx0IC5idG4ge1xuICAgIHBhZGRpbmc6IDEuMDcxNDMlIDIuMTQyODYlO1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5zZWFyY2gtcmVzdWx0IC5wYWdpbmF0aW9uIHtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTsgfVxuICAuc2VhcmNoLXJlc3VsdCAucGFnaW5hdGlvbiAubGluay1tb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAuc2VhcmNoLXJlc3VsdCAucGFnaW5hdGlvbiAubGluay1tb3JlOmJlZm9yZSwgLnNlYXJjaC1yZXN1bHQgLnBhZ2luYXRpb24gLmxpbmstbW9yZTphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAyNXB4O1xuICAgICAgbGVmdDogMjBweDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzcwOTIzO1xuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAjZmZmO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7IH1cbiAgICAuc2VhcmNoLXJlc3VsdCAucGFnaW5hdGlvbiAubGluay1tb3JlOmJlZm9yZSB7XG4gICAgICBsZWZ0OiAtMzBweDsgfVxuICAgIC5zZWFyY2gtcmVzdWx0IC5wYWdpbmF0aW9uIC5saW5rLW1vcmU6aG92ZXI6YmVmb3JlIHtcbiAgICAgIGxlZnQ6IDIwcHg7IH1cbiAgICAuc2VhcmNoLXJlc3VsdCAucGFnaW5hdGlvbiAubGluay1tb3JlOmhvdmVyOmFmdGVyIHtcbiAgICAgIGxlZnQ6IDcwcHg7IH1cblxuLnNlYXJjaC1yZXN1bHQgLnNlY3Rpb24tdGFicyB7XG4gIHBhZGRpbmctYm90dG9tOiA5cmVtOyB9XG4gIC5zZWFyY2gtcmVzdWx0IC5zZWN0aW9uLXRhYnMgLmNvbnRlbnQge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzcwOTIzOyB9XG4iLCJAZnVuY3Rpb24gZW0oJHRhcmdldCwgJGNvbnRleHQ6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG4gICBAaWYgJHRhcmdldCA9PSAwIHsgQHJldHVybiAwIH1cclxuICAgQHJldHVybiAkdGFyZ2V0IC8gJGNvbnRleHQgKyAwZW07XHJcbn1cclxuXHJcbi8qIHNldCB5b3VyIGJhc2UgZm9udCBhbmQgdW5jb21tZW50XHJcblxyXG4kYmFzZS1mb250LXNpemU6IDE1cHg7XHJcblxyXG4qLyIsIi8qIFdlYmZvbnQ6IExhdG8tUmVndWxhciAqL1xyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGF0b1dlYic7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTGF0by1SZWd1bGFyLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTGF0by1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cclxuICAgICAgICAgdXJsKCcuLi9mb250cy9MYXRvLVJlZ3VsYXIud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0xhdG8tUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0xhdG8tUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcclxufVxyXG5cclxuLyogV2ViZm9udDogTGF0by1MaWdodCAqL1xyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGF0b1dlYkxpZ2h0JztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9MYXRvLUxpZ2h0LmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTGF0by1MaWdodC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTGF0by1MaWdodC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTGF0by1MaWdodC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0xhdG8tTGlnaHQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XHJcbn1cclxuXHJcbi8qIFdlYmZvbnQ6IExhdG8tTWVkaXVtICovXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdMYXRvV2ViTWVkaXVtJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9MYXRvLU1lZGl1bS5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL0xhdG8tTWVkaXVtLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cclxuICAgICAgICAgdXJsKCcuLi9mb250cy9MYXRvLU1lZGl1bS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTGF0by1NZWRpdW0ud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cclxuICAgICAgICAgdXJsKCcuLi9mb250cy9MYXRvLU1lZGl1bS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcclxufVxyXG5cclxuLyogV2ViZm9udDogTGF0by1TZW1pYm9sZCAqL1xyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGF0b1dlYlNlbWlib2xkJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9MYXRvLVNlbWlib2xkLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTGF0by1TZW1pYm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTGF0by1TZW1pYm9sZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvTGF0by1TZW1pYm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL0xhdG8tU2VtaWJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XHJcbn0iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cblxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cbm9sLCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBjb250ZW50OiBub25lO1xufVxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn0iLCIvKiA9PT0gQmFzZSBzdHlsZXMgPT09ICovXHJcbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcclxuXHJcbmh0bWwsIGJvZHl7XHJcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE5MDBweCkge1xyXG4gICRiYXNlLWZvbnQtc2l6ZTogMTZweDtcclxuICBodG1sLCBib2R5e1xyXG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNzAwcHgpIHtcclxuICAkYmFzZS1mb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSAtIDE7IC8vMTVweFxyXG4gIGh0bWwsIGJvZHl7XHJcbiAgICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1OTlweCkge1xyXG4gICRiYXNlLWZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplIC0gMzsgLy8xNHB4XHJcbiAgaHRtbCwgYm9keXtcclxuICAgIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQzMHB4KSB7XHJcbiAgJGJhc2UtZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUgLSA0OyAvLzEzcHhcclxuICBodG1sLCBib2R5e1xyXG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpIHtcclxuICAkYmFzZS1mb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSAtIDg7IC8vOHB4XHJcbiAgaHRtbCwgYm9keXtcclxuICAgIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xyXG4gIH1cclxufVxyXG5cclxuaDEsIGgyLCBoMywgYSwgcCwgc3BhbntcclxuICBmb250LWZhbWlseTogJGZmcjtcclxufVxyXG5cclxuZGl2LCBzZWN0aW9uLCBoZWFkZXIsIGZvb3RlciwgbmF2IHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5he1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLndyYXBwZXJ7XHJcbiAgcGFkZGluZy10b3A6IGNhbGMoNy43NXJlbSArIDI2cHgpOy8vIDUuNjI1cmVtICsgMS4wNjI1cmVtICsgMjJweCAqIDEuMlxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2NjBweCl7XHJcbiAgICAme1xyXG4gICAgICBwYWRkaW5nLXRvcDogY2FsYyg3Ljc1cmVtICsgMjRweCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI4MHB4KXtcclxuICAgICZ7XHJcbiAgICAgIHBhZGRpbmctdG9wOiBjYWxjKDcuNzVyZW0gKyAyMXB4KTtcclxuICAgIH1cclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpe1xyXG4gICAgJntcclxuICAgICAgcGFkZGluZy10b3A6IGNhbGMoNy43NXJlbSArIDE5cHgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnRvLWhpZGV7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDUyO1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCl7XHJcbiAgICAme1xyXG4gICAgICBtaW4td2lkdGg6IDEwMjRweDtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZm9ybXtcclxuXHJcbiAgLmlucHV0LW91dGVye1xyXG4gICAgaW5wdXQuZXJyb3J7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4udW5kZXJ7XHJcblxyXG4gICYtbGluZWR7XHJcbiAgICAmOmFmdGVye1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgbWFyZ2luLXRvcDogLjkzNzVyZW07XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtY2VudGVyZWR7XHJcbiAgICAmOmFmdGVye1xyXG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi1saW5le1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDRweDtcclxuICAgIG1hcmdpbi10b3A6IC45Mzc1cmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC43cztcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLmNsZWFyZml4OmFmdGVye1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG4gIGRpc3BsYXk6IHRhYmxlO1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcblxyXG4uaGVhZGVye1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG5cclxuICAubG9hZGVye1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNnMgZWFzZS1vdXQ7XHJcblxyXG4gICAgJi5sb2FkaW5ne1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIiRmZnI6ICdMYXRvV2ViJztcclxuJGZmbDogJ0xhdG9XZWJMaWdodCc7XHJcbiRmZm06ICdMYXRvV2ViTWVkaXVtJztcclxuJGZmc2I6ICdMYXRvV2ViU2VtaWJvbGQnO1xyXG5cclxuJGNvbG9yOiAjYzcwOTIzO1xyXG4kY29sb3IxOiAjMDAwO1xyXG4kY29sb3IyOiAjZmZmO1xyXG5cclxuJGNvbHJnYjogcmdiYSgxOTksIDksIDM1LCAuOCk7XHJcbiRjb2xyZ2JmdWxsOiByZ2JhKDE5OSwgOSwgMzUsIDEpOyIsIi8qID09PSBCYXNlIEZvbnQgc2NoZW1lID09PSAqL1xyXG5cclxuLmZvbnRBIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NTtcclxufVxyXG5cclxuLmZvbnRBQSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS41NjI1O1xyXG59XHJcblxyXG4uZm9udEFCIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7XHJcbn1cclxuXHJcbi5mb250QiB7XHJcbiAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS4yO1xyXG59XHJcblxyXG4uZm9udEMge1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcclxufVxyXG5cclxuLmZvbnREIHtcclxuICAgIGZvbnQtc2l6ZTogMjZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbn1cclxuXHJcbi5mb250RSB7XHJcbiAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS4yO1xyXG59XHJcblxyXG4uZm9udEYge1xyXG4gICAgZm9udC1zaXplOiA1MnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcclxufVxyXG5cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTY2MHB4KSB7XHJcblxyXG4gICAgLmZvbnRBIHtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7IC8vMTZweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjg3NTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEFBIHtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7IC8vMTZweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRCIHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7IC8vMjBweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRDIHtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7IC8vMjJweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnREIHtcclxuICAgICAgICBmb250LXNpemU6IDIzcHg7IC8vMjZweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRFIHtcclxuICAgICAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjsgLy8zMnB4XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRGIHtcclxuICAgICAgICBmb250LXNpemU6IDQ2cHg7IC8vNTJweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpIHtcclxuXHJcbiAgICAuZm9udEEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDsgLy8xNnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuODc1O1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250QUEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDsgLy8xNnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTYyNTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDsgLy8yMHB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEMge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDsgLy8yMnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDsgLy8yNnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yOyAvLzMycHhcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEYge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNDZweDsgLy81MnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xyXG5cclxuICAgIC5mb250QSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4OyAvLzE2cHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS44NzU7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRBQSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4OyAvLzE2cHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41NjI1O1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250QiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxN3B4OyAvLzIwcHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250QyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4OyAvLzIycHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250RCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyM3B4OyAvLzI2cHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250RSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7IC8vMzJweFxyXG4gICAgfVxyXG5cclxuICAgIC5mb250RiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzOHB4OyAvLzUycHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcblxyXG4gICAgLmZvbnRBIHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7IC8vMTZweFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvbnRBQSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMnB4OyAvLzE2cHhcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41NjI1O1xyXG4gICAgfVxyXG5cclxuICAgIC5mb250QUIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDsgLy8xNnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTYyNTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDsgLy8yMHB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEMge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDsgLy8yMnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjFweDsgLy8yNnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS4yOyAvLzMycHhcclxuICAgIH1cclxuXHJcbiAgICAuZm9udEYge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzRweDsgLy81MnB4XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNzAwcHgpIHtcclxuXHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTU5OXB4KSB7XHJcblxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0MzBweCkge1xyXG5cclxufSIsIi8qID09PSBMYXlvdXQgZ3JpZCA9PT0gKi9cclxuXHJcbi53cmFwcGVye1xyXG4gIG1pbi13aWR0aDogMTAyNHB4O1xyXG4gIG1heC13aWR0aDogMTkyMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4ud3JhcHtcclxuICBAaW5jbHVkZSBjb250YWluZXIoKTtcclxuXHJcbiAgbWluLXdpZHRoOiAxMDI0cHg7XHJcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XHJcblxyXG4gICYud2lkZXJ7XHJcbiAgICBtYXgtd2lkdGg6IDE2NjBweDtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTY2MHB4KSB7XHJcbiAgLndyYXB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMuOTA2MjUlO1xyXG4gICAgcGFkZGluZy1yaWdodDogMy45MDYyNSU7XHJcbiAgfVxyXG59IiwiLy8gcmVtIFN1cHBvcnRcclxuLy8gPT09PT09PT09PT1cclxuXHJcbi8vIHJlbVxyXG4vLyAtLS1cclxuLy8gQ2hlY2sgZm9yIGFuIGV4aXN0aW5nIHN1cHBvcnQgbWl4aW4sIG9yIG91dHB1dCBkaXJlY3RseS5cclxuLy8gLSAkcHJvcCAgOiA8Y3NzIHByb3BlcnR5PlxyXG4vLyAtICR2YWwgICA6IDxjc3MgdmFsdWU+XHJcbkBtaXhpbiBzdXN5LXJlbShcclxuICAkcHJvcCxcclxuICAkdmFsXHJcbikge1xyXG4gICRfcmVxczogKFxyXG4gICAgdmFyaWFibGU6IHJoeXRobS11bml0IHJlbS13aXRoLXB4LWZhbGxiYWNrLFxyXG4gICAgbWl4aW46IHJlbSxcclxuICApO1xyXG4gIEBpZiBzdXN5LXN1cHBvcnQocmVtLCAkX3JlcXMsICR3YXJuOiBmYWxzZSkgYW5kICRyaHl0aG0tdW5pdCA9PSByZW0ge1xyXG4gICAgQGluY2x1ZGUgcmVtKCRwcm9wLCAkdmFsKTtcclxuICB9IEBlbHNlIHtcclxuICAgICN7JHByb3B9OiAkdmFsO1xyXG4gIH1cclxufVxyXG4iLCIvLyBDb250YWluZXIgU3ludGF4XHJcbi8vID09PT09PT09PT09PT09PT1cclxuXHJcbi8vIENvbnRhaW5lciBbbWl4aW5dXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCBhIGNvbnRhaW5lciBlbGVtZW50XHJcbi8vIC0gWyRsYXlvdXRdICA6IDxzZXR0aW5ncz5cclxuQG1peGluIGNvbnRhaW5lcihcclxuICAkbGF5b3V0OiAkc3VzeVxyXG4pIHtcclxuICAkaW5zcGVjdCAgICA6ICRsYXlvdXQ7XHJcbiAgJGxheW91dCAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xyXG5cclxuICAkX3dpZHRoICAgICA6IGdldC1jb250YWluZXItd2lkdGgoJGxheW91dCk7XHJcbiAgJF9qdXN0aWZ5ICAgOiBwYXJzZS1jb250YWluZXItcG9zaXRpb24oc3VzeS1nZXQoY29udGFpbmVyLXBvc2l0aW9uLCAkbGF5b3V0KSk7XHJcbiAgJF9wcm9wZXJ0eSAgOiBpZihzdXN5LWdldChtYXRoLCAkbGF5b3V0KSA9PSBzdGF0aWMsIHdpZHRoLCBtYXgtd2lkdGgpO1xyXG5cclxuICAkX2JveCAgICAgICA6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRsYXlvdXQpO1xyXG5cclxuICBAaWYgJF9ib3gge1xyXG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkX2JveCkpO1xyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGNvbnRhaW5lciwgJGluc3BlY3QpO1xyXG4gIEBpbmNsdWRlIGZsb2F0LWNvbnRhaW5lcigkX3dpZHRoLCAkX2p1c3RpZnksICRfcHJvcGVydHkpO1xyXG4gIEBpbmNsdWRlIHNob3ctZ3JpZCgkbGF5b3V0KTtcclxufVxyXG5cclxuLy8gQ29udGFpbmVyIFtmdW5jdGlvbl1cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUmV0dXJuIGNvbnRhaW5lciB3aWR0aFxyXG4vLyAtIFskbGF5b3V0XSAgOiA8c2V0dGluZ3M+XHJcbkBmdW5jdGlvbiBjb250YWluZXIoXHJcbiAgJGxheW91dDogJHN1c3lcclxuKSB7XHJcbiAgJGxheW91dDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcclxuICBAcmV0dXJuIGdldC1jb250YWluZXItd2lkdGgoJGxheW91dCk7XHJcbn1cclxuXHJcbi8vIEdldCBDb250YWluZXIgV2lkdGhcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBDYWxjdWxhdGUgdGhlIGNvbnRhaW5lciB3aWR0aFxyXG4vLyAtIFskbGF5b3V0XTogPHNldHRpbmdzPlxyXG5AZnVuY3Rpb24gZ2V0LWNvbnRhaW5lci13aWR0aChcclxuICAkbGF5b3V0OiAkc3VzeVxyXG4pIHtcclxuICAkbGF5b3V0ICAgICAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xyXG4gICRfd2lkdGggICAgICAgICA6IHN1c3ktZ2V0KGNvbnRhaW5lciwgJGxheW91dCk7XHJcbiAgJF9jb2x1bW4td2lkdGggIDogc3VzeS1nZXQoY29sdW1uLXdpZHRoLCAkbGF5b3V0KTtcclxuICAkX21hdGggICAgICAgICAgOiBzdXN5LWdldChtYXRoLCAkbGF5b3V0KTtcclxuXHJcbiAgQGlmIG5vdCgkX3dpZHRoKSBvciAkX3dpZHRoID09IGF1dG8ge1xyXG4gICAgQGlmIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpIHtcclxuICAgICAgJF9jb2x1bW5zICAgOiBzdXN5LWdldChjb2x1bW5zLCAkbGF5b3V0KTtcclxuICAgICAgJF9ndXR0ZXJzICAgOiBzdXN5LWdldChndXR0ZXJzLCAkbGF5b3V0KTtcclxuICAgICAgJF9zcHJlYWQgICAgOiBpZihpcy1zcGxpdCgkbGF5b3V0KSwgd2lkZSwgbmFycm93KTtcclxuICAgICAgJF93aWR0aCAgICAgOiBzdXN5LXN1bSgkX2NvbHVtbnMsICRfZ3V0dGVycywgJF9zcHJlYWQpICogJF9jb2x1bW4td2lkdGg7XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgJF93aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEByZXR1cm4gJF93aWR0aDtcclxufVxyXG5cclxuLy8gUGFyc2UgQ29udGFpbmVyIFBvc2l0aW9uXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBQYXJzZSB0aGUgJGNvbnRhaW5lci1wb3NpdGlvbiBpbnRvIG1hcmdpbiB2YWx1ZXMuXHJcbi8vIC0gWyRqdXN0aWZ5XSAgIDogbGVmdCB8IGNlbnRlciB8IHJpZ2h0IHwgPGxlbmd0aD4gWzxsZW5ndGg+XVxyXG5AZnVuY3Rpb24gcGFyc2UtY29udGFpbmVyLXBvc2l0aW9uKFxyXG4gICRqdXN0aWZ5OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBjb250YWluZXItcG9zaXRpb24pXHJcbikge1xyXG4gICRfcmV0dXJuOiBpZigkanVzdGlmeSA9PSBsZWZ0LCAwLCBhdXRvKSBpZigkanVzdGlmeSA9PSByaWdodCwgMCwgYXV0byk7XHJcblxyXG4gIEBpZiBub3QoaW5kZXgobGVmdCByaWdodCBjZW50ZXIsICRqdXN0aWZ5KSkge1xyXG4gICAgJF9yZXR1cm46IG50aCgkanVzdGlmeSwgMSk7XHJcbiAgICAkX3JldHVybjogJF9yZXR1cm4gaWYobGVuZ3RoKCRqdXN0aWZ5KSA+IDEsIG50aCgkanVzdGlmeSwgMiksICRfcmV0dXJuKTtcclxuICB9XHJcblxyXG4gIEByZXR1cm4gJF9yZXR1cm47XHJcbn1cclxuIiwiLy8gU3VzeSBGYWxsYmFjayBDbGVhcmZpeFxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5cclxuLy8gQ2xlYXJmaXhcclxuLy8gLS0tLS0tLS1cclxuLy8gQ2hlY2sgZm9yIGFuIGV4aXN0aW5nIHN1cHBvcnQgbWl4aW4sIG9yIHByb3ZpZGUgYSBzaW1wbGUgZmFsbGJhY2suXHJcbkBtaXhpbiBzdXN5LWNsZWFyZml4IHtcclxuICBAaWYgc3VzeS1zdXBwb3J0KGNsZWFyZml4LCAobWl4aW46IGNsZWFyZml4KSkge1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXg7XHJcbiAgfSBAZWxzZSB7XHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgY29udGVudDogXCIgXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBjbGVhcjogYm90aDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLyogPT09IEhlYWRlciBsYXlvdXQgPT09ICovXHJcblxyXG4iLCIvKiA9PT0gTWFpbiBsYXlvdXQgPT09ICovXHJcblxyXG4ubWFpbntcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxOTIwcHgpe1xyXG4gICAgJntcclxuICAgICAgcGFkZGluZy1ib3R0b206IDUyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDgwcHgpIGFuZCAobWF4LXdpZHRoOiAxOTE5cHgpe1xyXG4gICAgJntcclxuICAgICAgcGFkZGluZy1ib3R0b206IDI3LjAzMTI1dnc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0ODBweCl7XHJcbiAgICAme1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogNDAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEZvb3RlciBsYXlvdXQgPT09ICovIiwiLyogPT09IFNpZGViYXIgbGF5b3V0ID09PSAqLyIsIi8qID09PSBUb3AgaGVhZGVyIG1vZHVsZSA9PT0gKi9cclxuXHJcbi50b3AtaGVhZGVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICBwYWRkaW5nOiAxLjA2MjVyZW0gMDtcclxuXHJcbiAgYXtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG5cclxuICAubGVmdHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gIH1cclxuXHJcbiAgLnJpZ2h0e1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB9XHJcblxyXG4gIC5waG9uZS1udW1ze1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAgIGF7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMS41cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNvY3tcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmctbGVmdDogc3BhbigyKTtcclxuXHJcbiAgICAuaWNvbntcclxuICAgICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi8vIFNwYW4gU3ludGF4XHJcbi8vID09PT09PT09PT09XHJcblxyXG4vLyBTcGFuIFttaXhpbl1cclxuLy8gLS0tLS0tLS0tLS0tXHJcbi8vIFNldCBhIHNwYW5uaW5nIGVsZW1lbnQgdXNpbmcgc2hvcnRoYW5kIHN5bnRheC5cclxuLy8gLSAkc3BhbiAgOiA8c3Bhbj5cclxuQG1peGluIHNwYW4oXHJcbiAgJHNwYW5cclxuKSB7XHJcbiAgJGluc3BlY3Q6ICRzcGFuO1xyXG4gICRzcGFuOiBwYXJzZS1zcGFuKCRzcGFuKTtcclxuICAkb3V0cHV0OiBzcGFuLW1hdGgoJHNwYW4pO1xyXG4gICRuZXN0aW5nOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XHJcbiAgJGNsZWFyOiBzdXN5LWdldChjbGVhciwgJHNwYW4pO1xyXG5cclxuICAkYm94OiBzdXN5LWdldChib3gtc2l6aW5nLCAkc3Bhbik7XHJcbiAgJGNvbnRlbnQtYm94OiBpZihzdXN5LWdldChnbG9iYWwtYm94LXNpemluZykgIT0gJ2JvcmRlci1ib3gnLCB0cnVlLCBmYWxzZSk7XHJcbiAgJGJveDogJGJveCBvciBpZihpcy1pbnNpZGUoJHNwYW4pIGFuZCAkY29udGVudC1ib3gsIGJvcmRlci1ib3gsIG51bGwpO1xyXG5cclxuICBAaWYgJGNsZWFyID09IGJyZWFrIHtcclxuICAgIEBpbmNsdWRlIGJyZWFrO1xyXG4gIH0gQGVsc2UgaWYgJGNsZWFyID09IG5vYnJlYWsge1xyXG4gICAgQGluY2x1ZGUgbm9icmVhaztcclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChzcGFuLCAkaW5zcGVjdCk7XHJcbiAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkYm94KSk7XHJcbiAgQGluY2x1ZGUgZmxvYXQtc3Bhbi1vdXRwdXQoJG91dHB1dC4uLik7XHJcblxyXG4gIEBpZiB2YWxpZC1jb2x1bW5zKCRuZXN0aW5nLCBzaWxlbnQpIHtcclxuICAgIEBpbmNsdWRlIG5lc3RlZCgkc3BhbikgeyBAY29udGVudDsgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBTcGFuIFtmdW5jdGlvbl1cclxuLy8gLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFJldHVybiB0aGUgd2lkdGggb2YgYSBzcGFuLlxyXG4vLyAtICRzcGFuICA6IDxzcGFuPlxyXG5AZnVuY3Rpb24gc3BhbihcclxuICAkc3BhblxyXG4pIHtcclxuICBAcmV0dXJuIGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcclxufVxyXG5cclxuLy8gU3BhbiBNYXRoXHJcbi8vIC0tLS0tLS0tLVxyXG4vLyBHZXQgYWxsIHRoZSBzcGFuIHJlc3VsdHMuXHJcbi8vIC0gJHNwYW46IDxtYXA+XHJcbkBmdW5jdGlvbiBzcGFuLW1hdGgoXHJcbiAgJHNwYW5cclxuKSB7XHJcbiAgJG5lc3QgICAgICAgICAgICAgOiBpZihzdXN5LWdldChyb2xlLCAkc3BhbikgPT0gbmVzdCwgdHJ1ZSwgZmFsc2UpO1xyXG4gICRzcGxpdC1uZXN0ICAgICAgIDogaWYoaXMtc3BsaXQoJHNwYW4pIGFuZCAkbmVzdCwgdHJ1ZSwgZmFsc2UpO1xyXG4gICRlZGdlICAgICAgICAgICAgIDogZ2V0LWVkZ2UoJHNwYW4pO1xyXG4gICRsb2NhdGlvbiAgICAgICAgIDogZ2V0LWxvY2F0aW9uKCRzcGFuKTtcclxuXHJcbiAgJGZsb2F0ICAgICAgICAgICAgOiBmcm9tO1xyXG4gICRwYWRkaW5nLWJlZm9yZSAgIDogbnVsbDtcclxuICAkcGFkZGluZy1hZnRlciAgICA6IG51bGw7XHJcbiAgJG1hcmdpbi1iZWZvcmUgICAgOiBudWxsO1xyXG4gICRtYXJnaW4tYWZ0ZXIgICAgIDogbnVsbDtcclxuXHJcbiAgLy8gY2FsY3VsYXRlIHdpZHRoc1xyXG4gICRzcHJlYWQ6IGluZGV4KG1hcC12YWx1ZXMoJHNwYW4pLCBzcHJlYWQpO1xyXG4gICRzcGFuOiBpZigkc3BsaXQtbmVzdCBhbmQgbm90KCRzcHJlYWQpLCBtYXAtbWVyZ2UoJHNwYW4sIChzcHJlYWQ6IHdpZGUpKSwgJHNwYW4pO1xyXG4gICR3aWR0aDogZ2V0LXNwYW4td2lkdGgoJHNwYW4pO1xyXG4gICRndXR0ZXJzOiBnZXQtZ3V0dGVycygkc3Bhbik7XHJcblxyXG4gIC8vIGFwcGx5IGd1dHRlcnNcclxuICBAaWYgaXMtaW5zaWRlKCRzcGFuKSB7XHJcbiAgICBAaWYgbm90KHN1c3ktZ2V0KHJvbGUsICRzcGFuKSkge1xyXG4gICAgICAkcGFkZGluZy1iZWZvcmU6IG1hcC1nZXQoJGd1dHRlcnMsIGJlZm9yZSk7XHJcbiAgICAgICRwYWRkaW5nLWFmdGVyOiBtYXAtZ2V0KCRndXR0ZXJzLCBhZnRlcik7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAaWYgbm90KCRzcGxpdC1uZXN0KSB7XHJcbiAgICAgICRtYXJnaW4tYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xyXG4gICAgICAkbWFyZ2luLWFmdGVyOiBtYXAtZ2V0KCRndXR0ZXJzLCBhZnRlcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBzcGVjaWFsIG1hcmdpbiBoYW5kbGluZ1xyXG4gIEBpZiBzdXN5LWdldChvdXRwdXQsICRzcGFuKSA9PSBpc29sYXRlIGFuZCAkbG9jYXRpb24ge1xyXG4gICAgJG1hcmdpbi1iZWZvcmU6IGdldC1pc29sYXRpb24oJHNwYW4pO1xyXG4gICAgJG1hcmdpbi1hZnRlcjogLTEwMCU7XHJcbiAgfSBAZWxzZSBpZiAkZWRnZSB7XHJcbiAgICAkaXMtc3BsaXQ6IGlzLXNwbGl0KCRzcGFuKTtcclxuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xyXG5cclxuICAgIEBpZiAkZWRnZSA9PSBsYXN0IHtcclxuICAgICAgJGZsb2F0OiBzdXN5LWdldChsYXN0LWZsb3csICRzcGFuKTtcclxuICAgIH1cclxuXHJcbiAgICBAaWYgbm90KCRpcy1zcGxpdCkge1xyXG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gZmlyc3QgYW5kICRwb3MgPT0gYmVmb3JlKSB7XHJcbiAgICAgICAgJG1hcmdpbi1iZWZvcmU6IDA7XHJcbiAgICAgIH1cclxuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGxhc3QgYW5kICRwb3MgPT0gYWZ0ZXIpIHtcclxuICAgICAgICAkbWFyZ2luLWFmdGVyOiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgQHJldHVybiAoXHJcbiAgICB3aWR0aCAgICAgICAgICAgOiAkd2lkdGgsXHJcbiAgICBmbG9hdCAgICAgICAgICAgOiAkZmxvYXQsXHJcbiAgICBtYXJnaW4tYmVmb3JlICAgOiAkbWFyZ2luLWJlZm9yZSxcclxuICAgIG1hcmdpbi1hZnRlciAgICA6ICRtYXJnaW4tYWZ0ZXIsXHJcbiAgICBwYWRkaW5nLWJlZm9yZSAgOiAkcGFkZGluZy1iZWZvcmUsXHJcbiAgICBwYWRkaW5nLWFmdGVyICAgOiAkcGFkZGluZy1hZnRlcixcclxuICAgIGZsb3cgICAgICAgICAgICA6IHN1c3ktZ2V0KGZsb3csICRzcGFuKSxcclxuICApO1xyXG59XHJcblxyXG4vLyBHZXQgU3BhbiBXaWR0aFxyXG4vLyAtLS0tLS0tLS0tLS0tLVxyXG4vLyBSZXR1cm4gc3BhbiB3aWR0aC5cclxuLy8gLSAkc3BhbjogPG1hcD5cclxuQGZ1bmN0aW9uIGdldC1zcGFuLXdpZHRoKFxyXG4gICRzcGFuXHJcbikge1xyXG4gICRzcGFuICAgICA6IHBhcnNlLXNwYW4oJHNwYW4pO1xyXG5cclxuICAkbiAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XHJcbiAgJGxvY2F0aW9uIDogZ2V0LWxvY2F0aW9uKCRzcGFuKTtcclxuICAkY29sdW1ucyAgOiBzdXN5LWdldChjb2x1bW5zLCAkc3Bhbik7XHJcbiAgJGd1dHRlcnMgIDogc3VzeS1nZXQoZ3V0dGVycywgJHNwYW4pO1xyXG4gICRzcHJlYWQgICA6IHN1c3ktZ2V0KHNwcmVhZCwgJHNwYW4pO1xyXG5cclxuICAkY29udGV4dCAgOiBudWxsO1xyXG4gICRzcGFuLXN1bSA6IG51bGw7XHJcbiAgJHdpZHRoICAgIDogbnVsbDtcclxuXHJcbiAgQGlmICRuID09ICdmdWxsJyB7XHJcbiAgICAkcG9zOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRzcGFuKTtcclxuICAgICRyb2xlOiBzdXN5LWdldChyb2xlLCAkc3Bhbik7XHJcbiAgICAkbjogaWYoJHBvcyA9PSBzcGxpdCBhbmQgJHJvbGUgIT0gbmVzdCwgc3VzeS1jb3VudCgkY29sdW1ucyksIDEwMCUpO1xyXG4gIH1cclxuXHJcbiAgQGlmIHR5cGUtb2YoJG4pICE9IG51bWJlciB7XHJcbiAgICBAd2FybiBcIigje3R5cGUtb2YoJG4pfSkgI3skbn0gaXMgbm90IGEgdmFsaWQgc3Bhbi5cIjtcclxuICB9IEBlbHNlIGlmIHVuaXRsZXNzKCRuKSB7XHJcbiAgICAkY29udGV4dDogc3VzeS1zdW0oJGNvbHVtbnMsICRndXR0ZXJzLCBpZihpcy1zcGxpdCgkc3BhbiksIHdpZGUsIG5hcnJvdykpO1xyXG4gICAgJHNwcmVhZDogaWYoaXMtaW5zaWRlKCRzcGFuKSwgJHNwcmVhZCBvciB3aWRlLCAkc3ByZWFkKTtcclxuICAgICRzcGFuLXN1bTogc3VzeSgkbiwgJGxvY2F0aW9uLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQpO1xyXG5cclxuICAgICRfbWF0aDogc3VzeS1nZXQobWF0aCwgJHNwYW4pO1xyXG4gICAgJF9jb2x1bW4td2lkdGg6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJHNwYW4pO1xyXG4gICAgQGlmICRfbWF0aCA9PSBzdGF0aWMge1xyXG4gICAgICAkd2lkdGg6ICRzcGFuLXN1bSAqIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICR3aWR0aDogcGVyY2VudGFnZSgkc3Bhbi1zdW0gLyAkY29udGV4dCk7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICAkd2lkdGg6ICRuO1xyXG4gIH1cclxuXHJcbiAgQHJldHVybiAkd2lkdGg7XHJcbn1cclxuIiwiLyogPT09IFRvcCBuYXYgbW9kdWxlID09PSAqL1xyXG5cclxuLnRvcC1uYXZ7XHJcbiAgaGVpZ2h0OiA1LjYyNXJlbTtcclxuICAvLyBwYWRkaW5nOiAwLjgxMjVyZW0gMCAwO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjOWI5YjliO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gIC53cmFwe1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLmxvZ297XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEzLjc1cmVtO1xyXG4gICAgLy8gd2lkdGg6IDEzLjI1MzAxMjA0ODE5Mjc3MTA4NDMzNzM0OTM5NzU5JTtcclxuICAgIHBhZGRpbmctdG9wOiAwLjgxMjVyZW07XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6IDIyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNlYXJjaHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIHdpZHRoOiAyOHB4O1xyXG4gICAgaGVpZ2h0OiA1LjYyNXJlbTtcclxuICAgIG1hcmdpbi1yaWdodDogMy44cmVtO1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDFweDtcclxuICAgICAgbGVmdDogY2FsYyg1MCUgLSA5cHgpO1xyXG4gICAgICB3aWR0aDogMDtcclxuICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICBib3JkZXI6IDlweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xyXG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjOWI5YjliO1xyXG4gICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcztcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyOmFmdGVyLCAmLmlzLWFjdGl2ZTphZnRlcntcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuXHJcbiAgICAubWFnbmlmaWVye1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgfVxyXG5cclxuICAgIGltZ3tcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEzMjBweCl7XHJcbiAgICAgICAgJntcclxuICAgICAgICAgIHdpZHRoOiAyMnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMyMHB4KXtcclxuICAgICAgJntcclxuICAgICAgICB3aWR0aDogMjJweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDQuOHJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxhbmd7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG5cclxuICAgIGF7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuMjVzO1xyXG5cclxuICAgICAgJi5zZWxlY3RlZHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAvLyBkaXNwbGF5OiBpbml0aWFsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNjYwcHgpe1xyXG4gICAgICByaWdodDogMy45MDYyNSVcclxuICAgIH1cclxuXHJcbiAgICAmLnNob3d7XHJcblxyXG4gICAgICBhe1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmFjdGl2ZXtcclxuICAgICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLm1haW4tbmF2e1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgJiA+IHVse1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgJiA+IHVsID4gbGl7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAvLyBsaW5lLWhlaWdodDogNS42MjVyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogNHJlbTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICAmOmZpcnN0LW9mLXR5cGV7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDFweDtcclxuICAgICAgbGVmdDogY2FsYyg1MCUgLSA5cHgpO1xyXG4gICAgICB3aWR0aDogMDtcclxuICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICBib3JkZXI6IDlweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xyXG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjOWI5YjliO1xyXG4gICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcztcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyOmFmdGVyLCAmLmlzLWFjdGl2ZTphZnRlcntcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuXHJcbiAgICAmLmlzLWFjdGl2ZSBhe1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICYgPiBhe1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE1MDBweCl7XHJcbiAgICAgICZ7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIuNXZ3O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpe1xyXG4gICAgICAme1xyXG4gICAgICAgIC8vIGxpbmUtaGVpZ2h0OiA2cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gJiA+IHVse1xyXG4gICAgLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAvLyAgIGxlZnQ6IDUwJTtcclxuICAgIC8vICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgLy8gICBib3gtc2hhZG93OiAwcHggMHB4IDNweCAjOTg5ODk4O1xyXG5cclxuICAgIC8vICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAvLyAgIGxpe1xyXG4gICAgLy8gICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAvLyAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyAgICAgcGFkZGluZzogLjVyZW07XHJcbiAgICAvLyAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICAvLyAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIC8vICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzk4OTg5ODtcclxuICAgIC8vICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cclxuICAgIC8vICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAvLyAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgLy8gICAgIH1cclxuXHJcbiAgICAvLyAgICAgJjpob3ZlcntcclxuICAgIC8vICAgICAgIGF7XHJcbiAgICAvLyAgICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAvLyAgICAgICB9XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICB9XHJcblxyXG4gICAgLy8gICBhe1xyXG4gICAgLy8gICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9XHJcbiAgfVxyXG5cclxuICAmID4gdWwgPiBsaSA+IGF7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBsaW5lLWhlaWdodDogNS42MjVyZW07XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICB9XHJcbn1cclxuXHJcbi5jYXItcGFnZS1oYXNoLW5hdntcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuOSk7XHJcbiAgLy8gYm94LXNoYWRvdzogMHB4IDBweCAzcHggIzk4OTg5ODtcclxuXHJcbiAgLy8gZGlzcGxheTogbm9uZTtcclxuICB1bHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMDtcclxuXHJcbiAgICAmOmFmdGVye1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICBsaXtcclxuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDRyZW07XHJcbiAgICAgIHBhZGRpbmc6IDEuMzVyZW0gMDtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblxyXG4gICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYXtcclxuICAgICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYXtcclxuICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc2VhcmNoLWZvcm17XHJcbiAgcGFkZGluZzogMTJweCAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICB6LWluZGV4OiAyO1xyXG4gIHRvcDogMTAwJTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzliOWI5YjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gIC5pbnB1dC1vdXRlcntcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIGhlaWdodDogMjhweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM5NTk1OTU7XHJcblxyXG4gICAgaW5wdXR7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcblxyXG4gICAgICAmOmZvY3Vze1xyXG4gICAgICAgIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBsYWJlbHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIGltZ3tcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuaW5wdXQtb3V0ZXIsIGxhYmVse1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICB9XHJcblxyXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl17XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufSIsIi8qID09PSBTdWIgbmF2IG1vZHVsZSA9PT0gKi9cclxuXHJcbi5zdWItbmF2e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDI7XHJcblxyXG4gICY6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDE1MCU7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IC0yNSU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTg5ODk4O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi5saXN0LW91dGVye1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gIHVse1xyXG4gICAgcGFkZGluZy10b3A6IDEuNTYyNXJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwLjU2MjVyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbGl7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG5cclxuICBhe1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIC4zcztcclxuXHJcbiAgICAmLmlzLWFjdGl2ZSwgJjpob3ZlcntcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYudG8tY2VudGVye1xyXG4gICAgdWx7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBsaXtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5jYXItdGh1bWJze1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGxpe1xyXG4gICAgICBAaW5jbHVkZSBzcGFuKDcgb2YgNDIgYWZ0ZXIpO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG5cclxuICAgICAgJjpudGgtb2YtdHlwZSg2bil7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgIC5jYXItdGl0bGV7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgcHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogMCAxLjM3NXJlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjI7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkMmQyZDI7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCIvLyBEaXJlY3Rpb24gSGVscGVyc1xyXG4vLyA9PT09PT09PT09PT09PT09PVxyXG5cclxuLy8gU3VzeSBGbG93IERlZmF1bHRzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAtIFBSSVZBVEVcclxuQGluY2x1ZGUgc3VzeS1kZWZhdWx0cygoXHJcbiAgZmxvdzogbHRyLFxyXG4pKTtcclxuXHJcbi8vIEdldCBEaXJlY3Rpb25cclxuLy8gLS0tLS0tLS0tLS0tLVxyXG4vLyBSZXR1cm4gdGhlICdmcm9tJyBvciAndG8nIGRpcmVjdGlvbiBvZiBhIGx0ciBvciBydGwgZmxvdy5cclxuLy8gLSBbJGZsb3ddICA6IGx0ciB8IHJ0bFxyXG4vLyAtIFska2V5XSAgIDogZnJvbSB8IHRvXHJcbkBmdW5jdGlvbiBnZXQtZGlyZWN0aW9uKFxyXG4gICRmbG93OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBmbG93KSxcclxuICAka2V5OiBmcm9tXHJcbikge1xyXG4gICRyZXR1cm46IGlmKCRmbG93ID09IHJ0bCwgKGZyb206IHJpZ2h0LCB0bzogbGVmdCksIChmcm9tOiBsZWZ0LCB0bzogcmlnaHQpKTtcclxuICBAcmV0dXJuIG1hcC1nZXQoJHJldHVybiwgJGtleSk7XHJcbn1cclxuXHJcbi8vIFRvXHJcbi8vIC0tXHJcbi8vIFJldHVybiB0aGUgJ3RvJyBkaXJlY3Rpb24gb2YgYSBmbG93XHJcbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcclxuQGZ1bmN0aW9uIHRvKFxyXG4gICRmbG93OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBmbG93KVxyXG4pIHtcclxuICBAcmV0dXJuIGdldC1kaXJlY3Rpb24oJGZsb3csIHRvKTtcclxufVxyXG5cclxuLy8gRnJvbVxyXG4vLyAtLS0tXHJcbi8vIFJldHVybiB0aGUgJ2Zyb20nIGRpcmVjdGlvbiBvZiBhIGZsb3dcclxuLy8gLSBbJGZsb3ddICA6IGx0ciB8IHJ0bFxyXG5AZnVuY3Rpb24gZnJvbShcclxuICAkZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdylcclxuKSB7XHJcbiAgQHJldHVybiBnZXQtZGlyZWN0aW9uKCRmbG93LCBmcm9tKTtcclxufVxyXG4iLCIvLyBHdXR0ZXIgU3ludGF4XHJcbi8vID09PT09PT09PT09PT1cclxuXHJcblxyXG4vLyBHdXR0ZXJzXHJcbi8vIC0tLS0tLS1cclxuLy8gU2V0IGd1dHRlcnMgb24gYW4gZWxlbWVudC5cclxuLy8gLSBbJHNwYW5dICAgOiA8c2V0dGluZ3M+XHJcbkBtaXhpbiBndXR0ZXJzKFxyXG4gICRzcGFuOiAkc3VzeVxyXG4pIHtcclxuICAkaW5zcGVjdCAgOiAkc3BhbjtcclxuICAkc3BhbiAgICAgOiBwYXJzZS1ndXR0ZXJzKCRzcGFuKTtcclxuICAkX2d1dHRlcnMgOiBnZXQtZ3V0dGVycygkc3Bhbik7XHJcblxyXG4gICRfb3V0cHV0OiAoXHJcbiAgICBiZWZvcmU6IG1hcC1nZXQoJF9ndXR0ZXJzLCBiZWZvcmUpLFxyXG4gICAgYWZ0ZXI6IG1hcC1nZXQoJF9ndXR0ZXJzLCBhZnRlciksXHJcbiAgICBmbG93OiBzdXN5LWdldChmbG93LCAkc3BhbiksXHJcbiAgKTtcclxuXHJcbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGd1dHRlcnMsICRpbnNwZWN0KTtcclxuXHJcbiAgQGlmIGlzLWluc2lkZSgkc3Bhbikge1xyXG4gICAgQGluY2x1ZGUgcGFkZGluZy1vdXRwdXQoJF9vdXRwdXQuLi4pO1xyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGluY2x1ZGUgbWFyZ2luLW91dHB1dCgkX291dHB1dC4uLik7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gZ3V0dGVyKFxyXG4gICRzcGFuOiAkc3VzeVxyXG4pIHtcclxuICBAaW5jbHVkZSBndXR0ZXJzKCRzcGFuKTtcclxufVxyXG5cclxuXHJcbi8vIEd1dHRlclxyXG4vLyAtLS0tLS1cclxuLy8gUmV0dXJuIHRoZSB3aWR0aCBvZiBhIGd1dHRlci5cclxuLy8gLSBbJHNwYW5dICAgOiA8c2V0dGluZ3M+XHJcbkBmdW5jdGlvbiBndXR0ZXIoXHJcbiAgJHNwYW46ICRzdXN5XHJcbikge1xyXG4gICRzcGFuOiBwYXJzZS1ndXR0ZXJzKCRzcGFuKTtcclxuXHJcbiAgJF9ndXR0ZXJzOiBnZXQtZ3V0dGVycygkc3Bhbik7XHJcbiAgJF9ndXR0ZXJzOiBtYXAtZ2V0KCRfZ3V0dGVycywgYmVmb3JlKSBvciBtYXAtZ2V0KCRfZ3V0dGVycywgYWZ0ZXIpO1xyXG5cclxuICBAcmV0dXJuICRfZ3V0dGVycztcclxufVxyXG5cclxuQGZ1bmN0aW9uIGd1dHRlcnMoXHJcbiAgJHNwYW46ICRzdXN5XHJcbikge1xyXG4gIEByZXR1cm4gZ3V0dGVyKCRzcGFuKTtcclxufVxyXG5cclxuXHJcbi8vIEdldCBHdXR0ZXIgV2lkdGhcclxuLy8gLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBSZXR1cm4gZ3V0dGVyIHdpZHRoLlxyXG4vLyAtIFskY29udGV4dF06IDxjb250ZXh0PlxyXG5AZnVuY3Rpb24gZ2V0LWd1dHRlci13aWR0aChcclxuICAkY29udGV4dDogJHN1c3lcclxuKSB7XHJcbiAgJGNvbnRleHQgIDogcGFyc2UtZ3V0dGVycygkY29udGV4dCk7XHJcblxyXG4gICRfZ3V0dGVycyA6IHN1c3ktZ2V0KGd1dHRlcnMsICRjb250ZXh0KTtcclxuICAkX2d1dHRlciAgOiBzdXN5LWdldChndXR0ZXItb3ZlcnJpZGUsICRjb250ZXh0KTtcclxuXHJcbiAgQGlmICRfZ3V0dGVycyBhbmQgKCRfZ3V0dGVycyA+IDApIGFuZCBub3QoJF9ndXR0ZXIpIHtcclxuICAgICRfY29sdW1uLXdpZHRoOiBzdXN5LWdldChjb2x1bW4td2lkdGgsICRjb250ZXh0KTtcclxuICAgICRfbWF0aDogZ3V0dGVyLW1hdGgoJGNvbnRleHQpO1xyXG4gICAgQGlmICRfbWF0aCA9PSBzdGF0aWMge1xyXG4gICAgICAkX2d1dHRlcjogJF9ndXR0ZXJzICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgJF9jb2x1bW5zIDogc3VzeS1nZXQoY29sdW1ucywgJGNvbnRleHQpO1xyXG4gICAgICAkX3NwcmVhZCAgOiBpZihpcy1zcGxpdCgkY29udGV4dCksIHdpZGUsIHN1c3ktZ2V0KHNwcmVhZCwgJGNvbnRleHQpKTtcclxuICAgICAgJF9ndXR0ZXIgIDogcGVyY2VudGFnZSgkX2d1dHRlcnMgLyBzdXN5LXN1bSgkX2NvbHVtbnMsICRfZ3V0dGVycywgJF9zcHJlYWQpKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICRfZ3V0dGVyOiBpZigkX2d1dHRlciA9PSAnbm8tZ3V0dGVycycgb3IgJF9ndXR0ZXIgPT0gJ25vLWd1dHRlcicsIG51bGwsICRfZ3V0dGVyKTtcclxuXHJcbiAgQHJldHVybiAkX2d1dHRlcjtcclxufVxyXG5cclxuXHJcbi8vIEdldCBHdXR0ZXJzXHJcbi8vIC0tLS0tLS0tLS0tXHJcbi8vIFJldHVybiBiZWZvcmUgYW5kIGFmdGVyIGd1dHRlciB2YWx1ZXMuXHJcbi8vIC0gWyRjb250ZXh0XTogPGNvbnRleHQ+XHJcbkBmdW5jdGlvbiBnZXQtZ3V0dGVycyhcclxuICAkY29udGV4dDogJHN1c3lcclxuKSB7XHJcbiAgJGNvbnRleHQgICAgICAgICAgICA6IHBhcnNlLWd1dHRlcnMoJGNvbnRleHQpO1xyXG5cclxuICAkX2d1dHRlci1wb3NpdGlvbiAgIDogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XHJcbiAgJF9ndXR0ZXIgICAgICAgICAgICA6IGdldC1ndXR0ZXItd2lkdGgoJGNvbnRleHQpO1xyXG5cclxuICAkX3JldHVybiAgICAgICAgICAgIDogKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG51bGwpO1xyXG5cclxuICBAaWYgaXMtc3BsaXQoJGNvbnRleHQpIGFuZCAkX2d1dHRlciB7XHJcbiAgICAkX2d1dHRlcjogJF9ndXR0ZXIgLyAyO1xyXG4gICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKGJlZm9yZTogJF9ndXR0ZXIsIGFmdGVyOiAkX2d1dHRlcikpO1xyXG4gIH0gQGVsc2Uge1xyXG4gICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKCRfZ3V0dGVyLXBvc2l0aW9uOiAkX2d1dHRlcikpO1xyXG4gIH1cclxuXHJcbiAgQHJldHVybiAkX3JldHVybjtcclxufVxyXG5cclxuXHJcbi8vIElzIEluc2lkZVxyXG4vLyAtLS0tLS0tLS1cclxuLy8gUmV0dXJucyB0cnVlIGlmIGd1dHRlcnMgYXJlIGluc2lkZS5cclxuLy8gJGNvbnRleHQ6IDxjb250ZXh0PlxyXG5AZnVuY3Rpb24gaXMtaW5zaWRlKFxyXG4gICRjb250ZXh0XHJcbikge1xyXG4gICRfaW5zaWRlOiBpbnNpZGUgaW5zaWRlLXN0YXRpYztcclxuICAkX2d1dHRlci1wb3NpdGlvbjogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XHJcblxyXG4gIEByZXR1cm4gaWYoaW5kZXgoJF9pbnNpZGUsICRfZ3V0dGVyLXBvc2l0aW9uKSwgdHJ1ZSwgZmFsc2UpO1xyXG59XHJcblxyXG5cclxuLy8gSXMgU3BsaXRcclxuLy8gLS0tLS0tLS1cclxuLy8gUmV0dXJucyB0cnVlIGlmIGd1dHRlcnMgYXJlIHNwbGl0LlxyXG4vLyAkY29udGV4dDogPGNvbnRleHQ+XHJcbkBmdW5jdGlvbiBpcy1zcGxpdChcclxuICAkY29udGV4dFxyXG4pIHtcclxuICAkX3NwbGl0OiBzcGxpdCBpbnNpZGUgaW5zaWRlLXN0YXRpYztcclxuICAkX2d1dHRlci1wb3NpdGlvbjogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XHJcblxyXG4gIEByZXR1cm4gaWYoaW5kZXgoJF9zcGxpdCwgJF9ndXR0ZXItcG9zaXRpb24pLCB0cnVlLCBmYWxzZSk7XHJcbn1cclxuXHJcblxyXG4vLyBHdXR0ZXIgTWF0aFxyXG4vLyAtLS0tLS0tLS0tLVxyXG4vLyBSZXR1cm4gdGhlIG1hdGggdG8gdXNlIGZvciBndXR0ZXIgY2FsY3VsYXRpb25zXHJcbi8vICRjb250ZXh0OiA8Y29udGV4dD5cclxuQGZ1bmN0aW9uIGd1dHRlci1tYXRoKFxyXG4gICRjb250ZXh0OiAkc3VzeVxyXG4pIHtcclxuICAkX3JldHVybiAgOiBzdXN5LWdldChtYXRoLCAkY29udGV4dCk7XHJcbiAgJF9yZXR1cm4gIDogaWYoc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCkgPT0gaW5zaWRlLXN0YXRpYywgc3RhdGljLCAkX3JldHVybik7XHJcblxyXG4gIEByZXR1cm4gJF9yZXR1cm47XHJcbn1cclxuIiwiLyogPT09IFNsaWRlciBtb2R1bGUgPT09ICovXHJcblxyXG4uc2xpZGVyLW1haW57XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICBvcGFjaXR5OiAxO1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgdHJhbnNpdGlvbjogYWxsIC45cyBlYXNlLW91dDtcclxuXHJcblxyXG4gICYubG9hZGluZ3tcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gICYuc2NhbGV7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgfVxyXG5cclxuICBsaXtcclxuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSA3Ljc1cmVtIC0gMjZweCk7XHJcbiAgfVxyXG5cclxuICBpbWd7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcblxyXG4gIC53cmFwLndpZGVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLmxhYmVse1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDBweDtcclxuICAgICAgbGVmdDogY2FsYyg1MCUgLSA5cHgpO1xyXG4gICAgICB3aWR0aDogMDtcclxuICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICBib3JkZXI6IDlweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyLXRvcC1jb2xvcjogJGNvbG9yO1xyXG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcztcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNzgwcHgpIHtcclxuICAgICAgJntcclxuICAgICAgICByaWdodDogNiU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5ieC1jb250cm9sc3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMnJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAuYngtcGFnZXItaXRlbXtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgLmJ4LXBhZ2VyLWxpbmt7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMTZweDtcclxuICAgIGhlaWdodDogMTZweDtcclxuICAgIG1hcmdpbjogMCA5cHg7XHJcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcclxuXHJcbiAgICAmLmFjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5idWxsZXRze1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBib3R0b206IDJyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBkaXNwbGF5OiBub25lO1xyXG5cclxuICB1bHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcblxyXG4gIGxpe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDE2cHg7XHJcbiAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICBtYXJnaW46IDAgOXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yMjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XHJcblxyXG4gICAgJi5zZWxlY3RlZHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gU2lkZSBmbG9hdGVyIG1vZHVsZSA9PT0gKi9cclxuXHJcbi5zaWRlLWZsb2F0ZXJ7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgZGlyZWN0aW9uOiBydGw7XHJcblxyXG4gICYtb3V0ZXJ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMDtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgei1pbmRleDogMTtcclxuICB9XHJcblxyXG4gIC5pY29ue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAyNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gICAgcGFkZGluZzogN3B4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbHJnYjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgdHJhbnNpdGlvbjogd2lkdGggLjNzO1xyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogN3B4O1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgICBsaW5lLWhlaWdodDogMzZweDtcclxuICAgICAgY29sb3I6ICRjb2xvcjI7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XHJcbiAgICAgIC8vIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgLjI1cztcclxuXHJcbiAgICAgIC8vIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgd2lkdGg6IDI1MHB4O1xyXG5cclxuICAgICAgc3BhbntcclxuICAgICAgICBhbmltYXRpb246IHNsaWRlSW5UZXh0IC4ycyAuMTVzIGZvcndhcmRzO1xyXG4gICAgICAgIC8vIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICAgICAgLy8gdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4xcyAwcztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGltZ3tcclxuICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICB3aWR0aDogMzZweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2xpZGVJblRleHR7XHJcbiAgMCV7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gIH1cclxuICAxMDAle1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcclxuICB9XHJcbn0iLCIvKiA9PT0gQ2FycyBtb2R1bGUgPT09ICovXHJcblxyXG4uc2VjdGlvbi1jYXJze1xyXG4gIHBhZGRpbmctdG9wOiA0LjVyZW07XHJcbiAgcGFkZGluZy1ib3R0b206IDEuNXJlbTtcclxuXHJcbiAgLnRpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxufVxyXG5cclxuLmNhcnMtbGlzdHtcclxuICBAaW5jbHVkZSBjb250YWluZXIoKTtcclxuICBwYWRkaW5nLXRvcDogMi4zNzVyZW07XHJcblxyXG4gIC5jYXJ7XHJcblxyXG4gICAgJi1pdGVte1xyXG4gICAgICBAaW5jbHVkZSBzcGFuKDE2IG9mIDcwIDApO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHNwYW4oMik7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAuMjVyZW07XHJcblxyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICY6bnRoLW9mLXR5cGUoNG4pe1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaW1ne1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcntcclxuICAgICAgICAuY2FyLXRpdGxle1xyXG4gICAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLXRpdGxle1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIC4ycztcclxuXHJcbiAgICAgIHB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMS4zNzVyZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IyO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJkMmQyO1xyXG4gICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1wcmljZXtcclxuXHJcbiAgICAgIHAsIHNwYW57XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jYXItaXRlbXtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICY6aG92ZXJ7XHJcbiAgICAuaG92ZXItYm94e1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmhvdmVyLWJveHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxLjJlbSAtIDRweCk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnRpemUoJGNvbG9yLCAuMDUpO1xyXG4gIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gIGNvbG9yOiAkY29sb3IyO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgb3BhY2l0eTogMDtcclxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcztcclxuXHJcbiAgLnZlcnRpY2Fse1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbiAgfVxyXG5cclxuICAuaG92ZXItdGl0bGV7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxuICAgIHB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1bHtcclxuICAgIGNvbHVtbnM6IDI7XHJcbiAgfVxyXG5cclxuICBsaXtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NTtcclxuICAgIC8vIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcclxuXHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpiZWZvcmV7XHJcbiAgICAgIGNvbnRlbnQ6ICfigKIgJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNwYW57XHJcbiAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcclxuICB9XHJcbn1cclxuXHJcbi5zdGlja2Vye1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwO1xyXG4gIHRvcDogNjYlO1xyXG4gIHdpZHRoOiAxMDBweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcblxyXG4gICYtbmV3e1xyXG4gICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9uZXcucG5nJykgbGVmdCB0b3Agbm8tcmVwZWF0O1xyXG4gIH1cclxuXHJcbiAgJi1zYWxle1xyXG4gICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9zYWxlLnBuZycpIGxlZnQgdG9wIG5vLXJlcGVhdDtcclxuICB9XHJcblxyXG4gICYtc3BlY2lhbHtcclxuICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvYWtjaWEucG5nJykgbGVmdCB0b3Agbm8tcmVwZWF0O1xyXG4gIH1cclxuXHJcbiAgJi1oeWJyaWR7XHJcbiAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2h5YnJpZC5wbmcnKSBsZWZ0IHRvcCBuby1yZXBlYXQ7XHJcbiAgfVxyXG59IiwiLyogPT09IEFzayBtb2R1bGUgPT09ICovXHJcblxyXG4uc2VjdGlvbi1hc2t7XHJcbiAgaGVpZ2h0OiAyMC44MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzN2dztcclxuICBtYXgtaGVpZ2h0OiA0MDBweDtcclxuICBtaW4taGVpZ2h0OiAyNDBweDtcclxuICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2Fzay1iZy5qcGcnKSBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpe1xyXG4gICAgJntcclxuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC53cmFwe1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLnRpdGxle1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1JSk7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC41cztcclxuICB9XHJcblxyXG4gIC5idG57XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3M7XHJcblxyXG4gICAgJjphZnRlcntcclxuICAgICAgLy8gY29udGVudDogYXR0cihkYXRhLWNvbnRlbnQpO1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICB3aWR0aDogNSU7XHJcbiAgICAgIGhlaWdodDogMTEwJTtcclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgxOTksIDksIDM1LCAuMDEpO1xyXG4gICAgICBib3gtc2hhZG93OiAtMjVweCAtM3B4IDEwcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIC42KTtcclxuXHJcbiAgICAgIHRyYW5zZm9ybTogc2tldygzMGRlZykgdHJhbnNsYXRlWCgzNTBweCk7XHJcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNnMgMHM7XHJcbiAgICB9XHJcblxyXG4gICAgJjpiZWZvcmV7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgIGhlaWdodDogMTEwJTtcclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgxOTksIDksIDM1LCAuNSk7XHJcblxyXG4gICAgICB0cmFuc2Zvcm06IHNrZXcoMzBkZWcpIHRyYW5zbGF0ZVgoLTIwMHB4KTtcclxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC42cyAwcztcclxuICAgIH1cclxuXHJcbiAgICBzcGFue1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIC4zcztcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVye1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICBzcGFue1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYucGxheXtcclxuICAgIC50aXRsZXtcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcclxuICAgIH1cclxuXHJcbiAgICAuYnRue1xyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2tldygzMGRlZykgdHJhbnNsYXRlWCgtNTBweCk7XHJcbiAgICAgIH1cclxuICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KDMwZGVnKSB0cmFuc2xhdGVYKDM1MHB4KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcjphZnRlcntcclxuICAgICAgICAvLyB0cmFuc2Zvcm06IHNrZXcoMzBkZWcpIHRyYW5zbGF0ZVgoMzUwcHgpO1xyXG4gICAgICAgIC8vIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgMHM7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuLmJ0bntcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXRvcDogMnJlbTtcclxuICBwYWRkaW5nOiBzcGFuKDEpIHNwYW4oMik7XHJcbiAgY29sb3I6ICRjb2xvcjI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG59XHJcblxyXG4udmVydGljYWwtY2VudGVye1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwO1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNjYwcHgpe1xyXG4gICAgLnNlY3Rpb24tYXNrICZ7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAzLjkwNjI1JSk7XHJcbiAgICAgIGxlZnQ6IDMuOTA2MjUlO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi8qID09PSBUYWJzIG1vZHVsZSA9PT0gKi9cclxuXHJcbi50YWItdGl0bGVze1xyXG4gIHBhZGRpbmctYm90dG9tOiAyLjVyZW07XHJcblxyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgdWx7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuXHJcbiAgbGl7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgdG9wOiAtMC40Njg3NXJlbTtcclxuICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJkMmQyO1xyXG4gICAgfVxyXG5cclxuICAgICY6Zmlyc3QtY2hpbGQ6YmVmb3Jle1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIGgye1xyXG4gICAgICBwYWRkaW5nOiAwIDEuODc1cmVtO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogLjkzNzVyZW07XHJcblxyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGxlZnQgLjVzIC4xMjVzO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5oaWRkZW4tbGluZTpudGgtY2hpbGQoMSkgaDJ7XHJcbiAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgbGVmdDogMTIyJTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IC41cztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuaGlkZGVuLWxpbmUudG8tbGVmdDpudGgtY2hpbGQoMikgaDJ7XHJcbiAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgbGVmdDogLTIyJTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IC41cztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuaGlkZGVuLWxpbmUudG8tcmlnaHQ6bnRoLWNoaWxkKDIpIGgye1xyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGxlZnQ6IDEyMiU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbGVmdCAuNXM7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmhpZGRlbi1saW5lOm50aC1jaGlsZCgzKSBoMntcclxuICAgICAgJjphZnRlcntcclxuICAgICAgICBsZWZ0OiAtMjIlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGxlZnQgLjVzO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgfVxyXG5cclxuICAudGl0bGV7XHJcblxyXG4gIH1cclxufVxyXG5cclxuLnNlY3Rpb24tdGFic3tcclxuICBwYWRkaW5nLXRvcDogNC41cmVtO1xyXG4gIHBhZGRpbmctYm90dG9tOiA0LjVyZW07XHJcblxyXG4gIC5vdXRlcntcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG5cclxuICAucm93e1xyXG4gICAgQGluY2x1ZGUgY29udGFpbmVyKCk7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogc3Bhbig3MCBvZiAyMTQgMCk7XHJcbiAgICAvLyB3aWR0aDogY2FsYygxMDAlIC8gMyk7XHJcbiAgICBAaW5jbHVkZSBwdXNoKDIgb2YgMjE0IDApO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuXHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG5cclxuICAgICY6Zmlyc3Qtb2YtdHlwZXtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJi1jb250YWluZXJ7XHJcbiAgICB3aWR0aDogc3BhbigyMTQgb2YgNzAgMCk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDEuMnM7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cclxuICAgICAgJi5zaG93LXNlY29uZC10YWJ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHNwYW4oNzIgb2YgMjE0KSAqIC0xKTtcclxuICAgICAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTMzLjMzMzMzMzMzMyUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLnNob3ctdGhpcmQtdGFie1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWChzcGFuKDE0NCBvZiAyMTQpICogLTEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY29se1xyXG4gICAgQGluY2x1ZGUgc3BhbigyMiBvZiA3MCAwKTtcclxuICAgIG1hcmdpbi1yaWdodDogc3BhbigyKTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFweDtcclxuXHJcbiAgICBmbG9hdDogbm9uZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcblxyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvcjtcclxuXHJcbiAgICAmOm50aC1vZi10eXBlKDNuKXtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGltZ3tcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jb250ZW50e1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy10b3A6IHNwYW4oMS41IG9mIDIyKTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IHNwYW4oMSBvZiAyMik7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgIHBhZGRpbmctbGVmdDogc3BhbigxIG9mIDIyKTtcclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRjb2xvcjtcclxuXHJcbiAgICAudGl0bGV7XHJcbiAgICAgIG1heC1oZWlnaHQ6IDIuNGVtO1xyXG4gICAgICAvLyBtYXgtaGVpZ2h0OiBjYWxjKDMuNmVtICsgLjkzNzVyZW0gKyA0cHgpO1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICAgLy8gZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAgIC8vIC13ZWJraXQtbGluZS1jbGFtcDogMjtcclxuICAgICAgLy8gLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgICAgLy8gb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgLy8gdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IGNhbGMoLjkzNzVyZW0gKyA0cHgpO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6ICcuLi4nO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDEuMmVtO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgICAgIGhlaWdodDogMS4yZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgYmFja2dyb3VuZCA6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAxKSA1NSUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnVuZGVyLWxpbmVke1xyXG4gICAgICBoZWlnaHQ6IGNhbGMoMi40ZW0gKyAuOTM3NXJlbSArIDRweCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGV4dHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogY2FsYygyZW0gKiAxLjg3NSk7XHJcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIC8vIHBhZGRpbmctdG9wOiBzcGFuKC43NSBvZiAyMik7XHJcblxyXG4gICAgcHtcclxuICAgICAgbWF4LWhlaWdodDogY2FsYygyZW0gKiAxLjg3NSk7XHJcbiAgICAgIC8vIGhlaWdodDogMy43NWVtO1xyXG4gICAgICAvLyBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgICAgLy8gLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xyXG4gICAgICAvLyAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG4gICAgICAvLyBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAvLyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcbiAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgY29udGVudDogJy4uLic7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogY2FsYygxZW0gKiAxLjg3NSk7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxLjg3NWVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIGJhY2tncm91bmQgOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMSkgNzUlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCl7XHJcbiAgICAgICZ7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDJlbSAqIDEuNTYyNSk7XHJcblxyXG4gICAgICAgIHB7XHJcbiAgICAgICAgICBtYXgtaGVpZ2h0OiBjYWxjKDJlbSAqIDEuNTYyNSk7XHJcblxyXG4gICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgdG9wOiBjYWxjKDFlbSAqIDEuNTYyNSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGluay1tb3Jle1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJjpiZWZvcmUsICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDI1cHg7XHJcbiAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICB3aWR0aDogMTRweDtcclxuICAgICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XHJcbiAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggJGNvbG9yMjtcclxuICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7XHJcbiAgICB9XHJcblxyXG4gICAgJjpiZWZvcmV7XHJcbiAgICAgIGxlZnQ6IC0zMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6YmVmb3Jle1xyXG4gICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6YWZ0ZXJ7XHJcbiAgICAgIGxlZnQ6IDcwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY2FuLXpvb217XHJcblxyXG4gIC5pbWctYXtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAxKTtcclxuXHJcbiAgICAmLmxvYWR7XHJcbiAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuOXMgZWFzZS1vdXQ7XHJcblxyXG4gICAgICAmLmxvYWR7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG5cclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSIsIi8qID09PSBGb290ZXIgbW9kdWxlID09PSAqL1xyXG5cclxuLmZvb3RlcntcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAwO1xyXG4gIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGhlaWdodDogMjcuMDMxMjV2dztcclxuICBtaW4taGVpZ2h0OiA0MDBweDtcclxuICBtYXgtaGVpZ2h0OiA1MjBweDtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgLnBhcmFsbGF4LWJne1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNDEuNzE4NDI2NTAxMDM1MTk2Njg3MzcwNjAwNDE0MDc5dnc7XHJcbiAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2Zvb3Rlci1iZy5qcGcnKSBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcblxyXG4gIC5vdXRlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjgpO1xyXG4gIH1cclxuXHJcbiAgLnZlcnRpY2FsLWNlbnRlcntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLnJvd3tcclxuICAgIEBpbmNsdWRlIGNvbnRhaW5lcigpO1xyXG4gIH1cclxuXHJcbiAgLmNvbHtcclxuICAgIEBpbmNsdWRlIHNwYW4oMjIgb2YgNzAgMCk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IHNwYW4oMik7XHJcblxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICY6bnRoLW9mLXR5cGUoM24pe1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAuaWNvbntcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogMS42NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY3dnc7XHJcbiAgICAgIG1heC13aWR0aDogMnJlbTtcclxuXHJcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTYwMHB4KXtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWluLXdpZHRoOiAyLjVyZW07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQzMHB4KXtcclxuICAgICAgICBtaW4td2lkdGg6IDNyZW07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KXtcclxuICAgICAgICBtaW4td2lkdGg6IDMuNXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRpdGxle1xyXG4gICAgcGFkZGluZzogLjc1cmVtIDA7XHJcbiAgICBjb2xvcjogJGNvbG9yO1xyXG4gIH1cclxuXHJcbiAgLnRleHR7XHJcbiAgICBwLCBhe1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgICAgY29sb3I6ICRjb2xvcjI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc29je1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiBjYWxjKDkuMDYlIC0gMTVweCk7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHJcbiAgICAuaWNvbntcclxuICAgICAgcGFkZGluZzogMCAxLjI1cmVtO1xyXG4gICAgICBjb2xvcjogJGNvbG9yMjtcclxuICAgICAgdHJhbnNpdGlvbjogY29sb3IgLjNzO1xyXG5cclxuICAgICAgJjpob3ZlcntcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudmVydGljYWwtY2VudGVye1xyXG5cclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTYwMHB4KXtcclxuICAgICAgJiB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01NSUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzY2cHgpe1xyXG4gICAgICAmIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTYyJSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi53cml0ZS11c3tcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbWFyZ2luLXRvcDogMi41cmVtO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICBwe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogMCAxLjM3NXJlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IyO1xyXG4gIH1cclxuXHJcbiAgJjpiZWZvcmUsICY6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB3aWR0aDogNzgwcHg7XHJcbiAgICB3aWR0aDogY2FsYyg0NCUgLSA0LjRyZW0pO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJkMmQyO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5cclxuICAmOmJlZm9yZXtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG5cclxuICAmOmFmdGVye1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2MDBweCl7XHJcblxyXG4gICAgJjpiZWZvcmUsICY6YWZ0ZXJ7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDQyJSAtIDQuNHJlbSk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzIwcHgpe1xyXG5cclxuICAgICY6YmVmb3JlLCAmOmFmdGVye1xyXG4gICAgICB3aWR0aDogY2FsYyg0MSUgLSA0LjRyZW0pO1xyXG4gICAgfVxyXG5cclxuICB9XHJcbn1cclxuXHJcbi5idG4tc3Ryb2tle1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwYWRkaW5nOiBzcGFuKDEpIHNwYW4oMy41KTtcclxuICBjb2xvcjogJGNvbG9yO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjtcclxuICB0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG5cclxuICAmOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgY29sb3I6ICRjb2xvcjI7XHJcbiAgfVxyXG59IiwiLyogPT09IFBvcHVwcyBtb2R1bGUgPT09ICovXHJcblxyXG4uYm9keS1sb2NrZWR7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLnBvcHVwe1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjcpO1xyXG4gIHotaW5kZXg6IDUxO1xyXG5cclxuICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAmLWlubmVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMTV2aCBhdXRvO1xyXG4gICAgcGFkZGluZzogNjVweCA3MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmLmRvdWJsZS13aWR0aHtcclxuICAgICAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcblxyXG4gICAgICAuaW5wdXQtb3V0ZXJ7XHJcbiAgICAgICAgd2lkdGg6NDglO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG5cclxuICAgICAgICAmOm50aC1vZi10eXBlKGV2ZW4pe1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDQlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5pcy1zaG93bntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuXHJcblxyXG4gIC50ZXh0e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgfVxyXG5cclxuICBoMi50aXRsZXtcclxuICAgICYgKyAudGV4dHtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWxlY3QtY29udGFpbmVye1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB9XHJcblxyXG4gIGlucHV0LCB0ZXh0YXJlYXtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG5cclxuICAgICY6aW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgfVxyXG4gICAgJjppbnB1dDotbW96LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIH1cclxuICAgICY6aW5wdXQ6Oi1tb3otaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgfVxyXG4gICAgJjppbnB1dDo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIH1cclxuXHJcbiAgICAmOmZvY3Vze1xyXG4gICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmlucHV0LW91dGVyIGlucHV0LmVycm9ye1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yO1xyXG4gIH1cclxuXHJcbiAgdGV4dGFyZWF7XHJcbiAgICBtaW4taGVpZ2h0OiAxNzBweDtcclxuICB9XHJcblxyXG4gIGltZ3tcclxuICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgfVxyXG5cclxuICAudXBsb2FkLWZpbGV7XHJcbiAgICBwYWRkaW5nLXRvcDogMi41cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBpbnB1dFt0eXBlPVwiZmlsZVwiXXtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICBsYWJlbHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogNDBweDtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yO1xyXG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4ycztcclxuXHJcbiAgICAgIC51cGxvYWQtaW1ne1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjogNXB4IGF1dG87XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHJcbiAgICAgICAgLnVwbG9hZC1pbWd7XHJcbiAgICAgICAgICBwYXRoe1xyXG4gICAgICAgICAgICBmaWxsOiAkY29sb3I7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBsaW5lLWhlaWdodDogNDBweDtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIH1cclxuXHJcbiAgICAuZmlsZS1pbmZve1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDcwcHg7XHJcblxyXG4gICAgICBwe1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLm5hbWV7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAucmVtb3Zle1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IGF1dG87XHJcbiAgICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgc3BhbntcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAub3V0ZXItY2VudGVyZWR7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmctdG9wOiAycmVtO1xyXG5cclxuICAgIC5pbnB1dC1vdXRlcntcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGZsb2F0OiBub25lO1xyXG4gICAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIC5zbWFsbHtcclxuICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5mb3Jnb3QsIC5idG4tcmVne1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgIGNvbG9yOiAkY29sb3IyO1xyXG4gIH1cclxuXHJcbiAgLmJ0bi1sb2dpbntcclxuICAgIC8vIG1heC13aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IC41cmVtIDRyZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjI7XHJcbiAgfVxyXG5cclxuICAuZm9yZ290LCAuYnRuLXJlZywgLmJ0bi1sb2dpbntcclxuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gIC5idG4tbGlua3tcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gIC5jbG9zZSwgLnJlbW92ZXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMjBweDtcclxuICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4zcztcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgJjpiZWZvcmUsICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3aWR0aDogMnB4O1xyXG4gICAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoNDVkZWcpO1xyXG4gICAgfVxyXG4gICAgJjphZnRlcntcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEFib3V0IHBhZ2UgPT09ICovXHJcblxyXG4uYWJvdXR7XHJcblxyXG4gIC50aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5hZGRyZXNze1xyXG4gICAgbWFyZ2luLXRvcDogMi4yNXJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG5cclxuICAgIC5pbWctb3V0ZXJ7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgd2lkdGg6IDI2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkcmVzc3tcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnJvd3tcclxuICAgIEBpbmNsdWRlIGNvbnRhaW5lcigpO1xyXG4gIH1cclxuXHJcbiAgLmNvbHtcclxuICAgIEBpbmNsdWRlIHNwYW4oMzUgb2YgNzAgMCk7XHJcblxyXG4gICAgJjpmaXJzdC1vZi10eXBle1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiBzcGFuKDQpO1xyXG4gICAgfVxyXG5cclxuICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IHNwYW4oNCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1bHtcclxuICAgIG1hcmdpbi10b3A6IDZweDtcclxuICB9XHJcblxyXG4gIGxpe1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICB9XHJcblxyXG4gIGltZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuLmFyZ3VtZW50c3tcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZzogMy43NXJlbSAwO1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2Fib3V0LWJnLmpwZycpIGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHJcbiAgLmJnLXNoYWRvd3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjkpO1xyXG4gICAgei1pbmRleDogMDtcclxuICB9XHJcblxyXG4gIC53cmFwe1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgei1pbmRleDogMTtcclxuICB9XHJcblxyXG4gIC50aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gICAgYXtcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGxpe1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWluLWhlaWdodDogNC42ODc1ZW07XHJcblxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI4MHB4KSB7XHJcbiAgICAgICZ7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNHJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW1ne1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gIH1cclxuXHJcbiAgLmNvbCA+IHVsID4gbGkgPiBwe1xyXG4gICAgcGFkZGluZy1sZWZ0OiA3NXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMXJlbTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICB9XHJcbn1cclxuXHJcbi5iYW5uZXJ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBpbWd7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG59XHJcblxyXG4uc2VjdGlvbi1jb250ZW50e1xyXG4gIHBhZGRpbmctdG9wOiA0LjVyZW07XHJcbiAgcGFkZGluZy1ib3R0b206IDMuNzVyZW07XHJcbn1cclxuXHJcbi50ZXh0e1xyXG4gIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG5cclxuICBwe1xyXG4gICAgbWFyZ2luLXRvcDogMi4yNXJlbTtcclxuICB9XHJcbn1cclxuXHJcbi5pbWctb3V0ZXJ7XHJcbiAgaW1ne1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59IiwiLyogPT09IENvbnRhY3RzIHBhZ2UgPT09ICovXHJcblxyXG4uY29udGFjdHN7XHJcblxyXG4gIC5yb3d7XHJcbiAgICBAaW5jbHVkZSBjb250YWluZXIoKTtcclxuICB9XHJcblxyXG4gIC5jb2x7XHJcbiAgICBAaW5jbHVkZSBzcGFuKDMyIG9mIDcwIDApO1xyXG5cclxuICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICBAaW5jbHVkZSBwdXNoKDYpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnN1YntcclxuICAgICYtdGl0bGV7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgICBpbWd7XHJcbiAgICAgICAgd2lkdGg6IDI4cHg7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBwe1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtY29se1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgcGFkZGluZy10b3A6IDIuNXJlbTtcclxuICAgICAgcGFkZGluZy1yaWdodDogMnJlbTtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDIuNXJlbTtcclxuXHJcbiAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGV4dHtcclxuICAgIHAsIGFkZHJlc3N7XHJcbiAgICAgIG1hcmdpbi10b3A6IDIuMjVyZW07XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmlucHV0LW91dGVye1xyXG4gICAgQGluY2x1ZGUgc3BhbigxNS41IG9mIDMyIDApO1xyXG5cclxuICAgIG1hcmdpbi10b3A6IHNwYW4oMik7XHJcblxyXG4gICAgJjpudGgtb2YtdHlwZShldmVuKXtcclxuICAgICAgQGluY2x1ZGUgcHVzaCgyKTtcclxuICAgIH1cclxuXHJcbiAgICAmOmxhc3Qtb2YtdHlwZXtcclxuICAgICAgQGluY2x1ZGUgc3BhbigzMiBvZiAzMiAwKVxyXG4gICAgfVxyXG5cclxuICAgIGlucHV0LCB0ZXh0YXJlYXtcclxuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IC41ZW0gMS4yNWVtO1xyXG5cclxuICAgICAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIH1cclxuICAgICAgJjotbW96LXBsYWNlaG9sZGVyIHsgLyogRmlyZWZveCAxOC0gKi9cclxuICAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICB9XHJcbiAgICAgICY6Oi1tb3otcGxhY2Vob2xkZXIgeyAgLyogRmlyZWZveCAxOSsgKi9cclxuICAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICB9XHJcbiAgICAgICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGV4dGFyZWF7XHJcbiAgICAgIG1pbi1oZWlnaHQ6IDcuNWVtO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VsZWN0e1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgLnNlbGVjdC1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4O1xyXG5cclxuICAgIHVse1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGxlZnQ6IC0xcHg7XHJcbiAgICAgIHRvcDogY2FsYygxMDAlICsgNHB4KTtcclxuICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIDJweCk7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5ODk4OTg7XHJcbiAgICAgIHotaW5kZXg6IDE7XHJcblxyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgei1pbmRleDogMTtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIGxpOmhvdmVye1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIHNwYW4sbGl7XHJcbiAgICAgIHBhZGRpbmc6IC41ZW0gMS4yNWVtO1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC5jdXJyLW9wdHtcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAuZmF7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAxNXB4O1xyXG4gICAgICByaWdodDogMXJlbTtcclxuICAgICAgY29sb3I6ICM5ODk4OTg7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcztcclxuXHJcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgICAgJntcclxuICAgICAgICAgIHRvcDogMTJweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYucm90YXRlZHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBidXR0b257XHJcbiAgICBAaW5jbHVkZSBzcGFuKDI0IG9mIDMyIDApO1xyXG4gICAgcGFkZGluZy10b3A6IHNwYW4oMSBvZiAzMik7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogc3BhbigxIG9mIDMyKTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcclxuXHJcbiAgICAmOmhvdmVye1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IyO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLm1hcHtcclxuICBtaW4taGVpZ2h0OiA0NDBweDtcclxufSIsIi8qID09PSBTZXJ2aWNlIHBhZ2UgPT09ICovXHJcblxyXG4uc2VydmljZXtcclxuXHJcbi5zZWN0aW9uLWNvbnRlbnR7XHJcbiAgcGFkZGluZy10b3A6IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDA7XHJcbn1cclxuXHJcbiAgLnJvd3tcclxuICAgIEBpbmNsdWRlIGNvbnRhaW5lcigpO1xyXG4gIH1cclxuXHJcbiAgLmNvbHtcclxuICAgIEBpbmNsdWRlIHNwYW4oMzUgb2YgNzAgMCk7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGV7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogc3BhbigzKTtcclxuICAgIH1cclxuXHJcbiAgICBpbWd7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuXHJcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgICAgJntcclxuICAgICAgICAgIG1heC1oZWlnaHQ6IDUwMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRpdGxle1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICB9XHJcblxyXG4gIC50ZXh0e1xyXG4gICAgcHtcclxuICAgICAgbWFyZ2luLXRvcDogMi4yNXJlbTtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuYnRue1xyXG4gICAgbWFyZ2luLXRvcDogMi4yNXJlbTtcclxuICAgIHBhZGRpbmc6IHNwYW4oMSBvZiAzNSkgc3BhbigyIG9mIDM1KTtcclxuICB9XHJcblxyXG4gIC5jYXItdGl0bGV7XHJcbiAgICBtYXgtaGVpZ2h0OiAxLjJlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJjpiZWZvcmV7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgcHtcclxuICAgICAgcGFkZGluZzogMCAuMzc1cmVtO1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY2FyLXByaWNle1xyXG4gICAgcHtcclxuICAgICAgaGVpZ2h0OiAyLjRlbTtcclxuICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjtcclxuICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IExveWFsdHkgcGFnZSA9PT0gKi9cclxuXHJcbi5sb3lhbHR5e1xyXG5cclxuICAuc2VjdGlvbi1jb250ZW50e1xyXG5cclxuICB9XHJcblxyXG4gIC5zcGVjaWZpY2F0aW9uc3tcclxuICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHJcbiAgICAuZHJvcC1oZWFkZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcblxyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGFibGUtZHJvcHtcclxuICAgICAgcGFkZGluZzogM3JlbSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGg0e1xyXG4gICAgICBmb250LWZhbWlseTogICRmZnI7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4zNzVlbTtcclxuICAgIH1cclxuXHJcbiAgICBzcGFue1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIHVse1xyXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgfVxyXG5cclxuICAgIGxpe1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMS43NXJlbTtcclxuICAgICAgcGFkZGluZy1ib3R0b206IC43NXJlbTtcclxuXHJcbiAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC43Mzc1ZW07XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogLjRlbTtcclxuICAgICAgICBoZWlnaHQ6IC40ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M3MDkyMztcclxuICAgICAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC50aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC50ZXh0e1xyXG5cclxuICAgIHB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG5cclxuICAgICAgYXtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGFibGV7XHJcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjI1cmVtO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MxYmZiZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICB0ZCwgdGh7XHJcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgIHBhZGRpbmc6IC41cmVtIDEuNXJlbTtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2MxYmZiZjtcclxuICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgbWF4LXdpZHRoOiAyMCU7XHJcblxyXG4gICAgICAmOm50aC1jaGlsZChuICsgMyl7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoZWFkIHRyOmxhc3QtY2hpbGR7XHJcblxyXG4gICAgICB0aHtcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGVsc3tcclxuICAgIHB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMi43NXJlbTtcclxuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2Zvb3Rlci1pY29uLXBob25lLnN2Z1wiKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAzLjI1cmVtO1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9pY29uLW1vYmlsZS5zdmdcIikgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMi41cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuYXJndW1lbnRze1xyXG4gICAgcGFkZGluZzogNnJlbSAwO1xyXG4gICAgdWx7XHJcbiAgICAgIGxpe1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLyogPT09IE5ld3MvU3BlY2lhbHMgcGFnZSA9PT0gKi9cclxuXHJcbi5uZXdze1xyXG5cclxuICAuc2VjdGlvbi1hc2t7XHJcbiAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL25ld3MtYmcuanBnJykgY2VudGVyIG5vLXJlcGVhdDtcclxuICB9XHJcblxyXG4gIC5pbnB1dC1vdXRlcntcclxuICAgIEBpbmNsdWRlIHNwYW4oMTggb2YgNzAgMCk7XHJcblxyXG4gICAgbWFyZ2luLXRvcDogc3BhbigyKTtcclxuICAgIG1hcmdpbi1yaWdodDogc3BhbigyKTtcclxuXHJcbiAgICBpbnB1dHtcclxuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IC41ZW0gLjc1ZW07XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5ODk4OTg7XHJcbiAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCAwKTtcclxuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3M7XHJcblxyXG4gICAgICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgfVxyXG4gICAgICAmOi1tb3otcGxhY2Vob2xkZXIgeyAvKiBGaXJlZm94IDE4LSAqL1xyXG4gICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIH1cclxuICAgICAgJjo6LW1vei1wbGFjZWhvbGRlciB7ICAvKiBGaXJlZm94IDE5KyAqL1xyXG4gICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIH1cclxuICAgICAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6Zm9jdXN7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLmVycm9ye1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmJ0bntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbi10b3A6IHNwYW4oMik7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAvLyBoZWlnaHQ6IGNhbGMoMi4yZW0gKyAycHgpO1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjtcclxuXHJcbiAgICAmOmhvdmVye1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGJ1dHRvbi5idG57XHJcbiAgICAvLyBib3JkZXI6IG5vbmU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSkgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWN0aW9uLXRhYnN7XHJcblxyXG4gICAgLnJvd3tcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuXHJcbiAgICAgIGF7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY29udGVudHtcclxuICAgICAgcGFkZGluZy1yaWdodDogMDtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC50ZXh0e1xyXG4gICAgICBwe1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnaW5hdGlvbntcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDUwcHg7XHJcbiAgcGFkZGluZy10b3A6IDZweDtcclxuXHJcbiAgdWx7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgJjphZnRlcntcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgICBjbGVhcjogYm90aDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGxpe1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIuNXJlbTtcclxuXHJcbiAgICBhe1xyXG4gICAgICBjb2xvcjogJGNvbG9yMTtcclxuXHJcbiAgICAgICYuYWN0aXZlLCAmOmhvdmVye1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5saW5rLW1vcmV7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIGJvdHRvbTogYXV0bztcclxuICB9XHJcbn0iLCIvKiA9PT0gTmV3cy9TcGVjaWFscyBzaW5nbGUgcGFnZSA9PT0gKi9cclxuXHJcbi5uZXdzLXNpbmdsZXtcclxuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xyXG4gIHBhZGRpbmctdG9wOiA0cmVtO1xyXG4gIHBhZGRpbmctYm90dG9tOiA1LjVyZW07XHJcblxyXG4gIC5kYXRle1xyXG4gICAgcGFkZGluZy10b3A6IDEuNXJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gIH1cclxuXHJcbiAgLmltZy1vdXRlcntcclxuICAgIG1hcmdpbjogMnJlbSAwIDIuNXJlbTtcclxuICB9XHJcblxyXG4gIC50YWJsZXtcclxuICAgIHBhZGRpbmctdG9wOiAycmVtO1xyXG5cclxuICAgIHRhYmxle1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICYgdHI6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRkLCB0aHtcclxuICAgICAgd2lkdGg6IDMzLjMzMzMzMzMzJTtcclxuICAgICAgcGFkZGluZzogLjVyZW07XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMmMwYzA7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEZhdm91ciBwYWdlID09PSAqL1xyXG5cclxuLmZhdm91cntcclxuXHJcbiAgc2VsZWN0e1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcblxyXG4gIC5ib29rLWZvcm17XHJcbiAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2Zhdm91cnMtYmcuanBnJykgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHJcbiAgICAudGV4dHtcclxuICAgICAgcHtcclxuICAgICAgICBtYXJnaW4tdG9wOiBzcGFuKDEgb2YgMjQpO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS44O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuZm9ybS1vdXRlcntcclxuICAgIHdpZHRoOiBzcGFuKDI5KTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbjogMi4yNXJlbSAwO1xyXG4gICAgcGFkZGluZzogc3BhbigyKTtcclxuICAgIHRleHQtYWxpZ246IGluaXRpYWw7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC45KTtcclxuICB9XHJcblxyXG4gIC5pbnB1dC1vdXRlcntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgIG1hcmdpbi10b3A6IHNwYW4oMSBvZiAyNCk7XHJcblxyXG4gICAgaW5wdXQsIHRleHRhcmVhe1xyXG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgcGFkZGluZzogLjVlbSAuOGVtO1xyXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzk4OTg5ODtcclxuXHJcbiAgICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICB9XHJcbiAgICAgICY6LW1vei1wbGFjZWhvbGRlciB7IC8qIEZpcmVmb3ggMTgtICovXHJcbiAgICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgfVxyXG4gICAgICAmOjotbW96LXBsYWNlaG9sZGVyIHsgIC8qIEZpcmVmb3ggMTkrICovXHJcbiAgICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgfVxyXG4gICAgICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRleHRhcmVhe1xyXG4gICAgICBtaW4taGVpZ2h0OiA3LjVlbTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGJ1dHRvbi5idG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IHNwYW4oMSBvZiAyNCk7XHJcbiAgICBwYWRkaW5nLXRvcDogc3BhbigxIG9mIDMyKTtcclxuICAgIHBhZGRpbmctYm90dG9tOiBzcGFuKDEgb2YgMzIpO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3I7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc2VjdGlvbi1jb250ZW50e1xyXG4gICAgcGFkZGluZy1ib3R0b206IDhyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgLnRleHR7XHJcbiAgICAgIHB7XHJcblxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc2xpZGVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLXRvcDogMi4yNXJlbTtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuXHJcbiAgICBpbWd7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAuYngtd3JhcHBlciAuYngtcGFnZXJ7XHJcbiAgICAgIGJvdHRvbTogYXV0bztcclxuICAgICAgdG9wOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICB9XHJcbn1cclxuXHJcbi5zZWxlY3QtY29udGFpbmVye1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4O1xyXG5cclxuICB1bHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IC0xcHg7XHJcbiAgICB0b3A6IGNhbGMoMTAwJSArIDRweCk7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlICsgMHB4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTg5ODk4O1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbiAgc3BhbntcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG5cclxuICBsaTpob3ZlcntcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG5cclxuICBzcGFuLGxpe1xyXG4gICAgcGFkZGluZzogLjVlbSAuOGVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgfVxyXG5cclxuICAuY3Vyci1vcHR7XHJcbiAgICBjb2xvcjogJGNvbG9yO1xyXG4gIH1cclxuXHJcbiAgLmZhe1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxNXB4O1xyXG4gICAgcmlnaHQ6IDFyZW07XHJcbiAgICBjb2xvcjogIzk4OTg5ODtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XHJcblxyXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcclxuICAgICAgJntcclxuICAgICAgICB0b3A6IDEycHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLnJvdGF0ZWR7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY29udHJvbHN7XHJcbiAgYXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG5cclxuICAucHJldiwgLm5leHR7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zNSk7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcclxuXHJcbiAgICAmOmJlZm9yZXtcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMjVweDtcclxuICAgICAgbGVmdDogMjBweDtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XHJcbiAgICAgIHdpZHRoOiAxNHB4O1xyXG4gICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XHJcbiAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggJGNvbG9yO1xyXG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTk5LCA5LCAzNSwgLjM1KTtcclxuXHJcbiAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggJGNvbG9yMjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnByZXZ7XHJcbiAgICBsZWZ0OiAwO1xyXG5cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICBsZWZ0OiAzMHB4O1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoMTM1ZGVnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5uZXh0e1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgfVxyXG59IiwiLyogPT09IENhcnMgcGFnZSA9PT0gKi9cclxuXHJcbiNoYXNoTmF2e1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICBhLmlzLWFjdGl2ZXtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG59XHJcblxyXG4uY2Fyc3tcclxuXHJcblxyXG4gIC5idG57XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgcGFkZGluZzogc3BhbiguODUgb2YgMzUpIHNwYW4oMS43NSBvZiAzNSk7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3I7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc3BlY2lmaWNhdGlvbnN7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uc2hvcnQtZGVzY3J7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvY2Fycy1kZXNjci1iZy5qcGcnKSB0b3AgY2VudGVyIG5vLXJlcGVhdDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAud3JhcHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcblxyXG4gIC5jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQ1JSk7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgbWFyZ2luOiA4cmVtIDA7XHJcbiAgICBwYWRkaW5nOiAzLjVyZW0gMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2MDBweCl7XHJcbiAgICAgIHdpZHRoOiAzMiU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMwMHB4KXtcclxuICAgICAgd2lkdGg6IDQwJTtcclxuICAgIH1cclxuXHJcbiAgICAudGl0bGV7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICBmb250LXNpemU6IDgwcHg7XHJcbiAgICAgIGNvbG9yOiAkY29sb3IyO1xyXG5cclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcclxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC41cyAuM3M7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgICBsaTpudGgtb2YtdHlwZSgxKXtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC40cztcclxuICAgICAgfVxyXG4gICAgICBsaTpudGgtb2YtdHlwZSgyKXtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC41cztcclxuICAgICAgfVxyXG4gICAgICBsaTpudGgtb2YtdHlwZSgzKXtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIC42cztcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpmaXJzdC1vZi10eXBle1xyXG4gICAgICAgIGxpe1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMjUlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJjpudGgtb2YtdHlwZSgyKXtcclxuICAgICAgICBsaXtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjI1JSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHtcclxuICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgIGNvbG9yOiAkY29sb3IyO1xyXG4gICAgfVxyXG5cclxuICAgIC50ZXh0ID4gcHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcclxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC41cyAuNTVzO1xyXG4gICAgfVxyXG5cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgcmlnaHQ6IDEwMCU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB3aWR0aDogMjAwJTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuNSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLnBsYXl7XHJcbiAgICAudGl0bGV7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICB9XHJcbiAgICAuY29sOmZpcnN0LW9mLXR5cGV7XHJcbiAgICAgIGxpe1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5jb2w6bnRoLW9mLXR5cGUoMil7XHJcbiAgICAgIGxpe1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGV4dCA+IHB7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuJHRkV2lkdGg6IDE1MHB4O1xyXG4uc3BlY2lmaWNhdGlvbnN7XHJcbiAgcGFkZGluZy10b3A6IDQuNXJlbTtcclxuICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcclxuICBiYWNrZ3JvdW5kOiAjZWVlO1xyXG5cclxuICAmLm5vLXBhZGQtdG9we1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcblxyXG4gICAgaDIudGl0bGUucGFkZGluZ3N7XHJcbiAgICAgIG1hcmdpbi10b3A6IC0xcmVtO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGgyLnRpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICYucGFkZGluZ3N7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAzcmVtO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMi4yNXJlbTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC50YWJsZS1zcGVjc3tcclxuICAgIHRhYmxle1xyXG4gICAgICBtYXJnaW46IDJyZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICB0cjpudGgtY2hpbGQob2RkKXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICB0cjpudGgtY2hpbGQoZXZlbil7XHJcbiAgICAgIHRke1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2MyYzBjMDtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYzJjMGMwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdHI6bnRoLWNoaWxkKDMpe1xyXG4gICAgICB0ZHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjYzJjMGMwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdHI6bGFzdC1jaGlsZHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjMmMwYzA7XHJcbiAgICB9XHJcblxyXG4gICAgdGR7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW0gMDtcclxuICAgICAgd2lkdGg6IDIwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC50YWJsZS1kcm9we1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJi5uby1maXhlZHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIG1hcmdpbjogMjBweCAwO1xyXG5cclxuICAgICAgLnJvd3tcclxuICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5oZWFkaW5ne1xyXG4gICAgICAgICAgcGFkZGluZzogOHB4IDA7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRhYmxle1xyXG4gICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgICB3aWR0aDogYXV0bztcclxuICAgICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIHRyLmhpZGRlbntcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICB0aCwgdGR7XHJcbiAgICAgIC8vIHdpZHRoOiAxNi42NjY2NjY2NyU7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2MyYzBjMDtcclxuXHJcbiAgICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgLy8gd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIHdpZHRoOiAyMiU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmV4cGVyaW1lbnR7XHJcblxyXG4gICAgICAub3V0ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB9XHJcbiAgICAgICRtbDogMjUwcHg7XHJcbiAgICAgIC5pbm5lcntcclxuICAgICAgICBvdmVyZmxvdy14OnNjcm9sbDtcclxuICAgICAgICBvdmVyZmxvdy15OnZpc2libGU7XHJcbiAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gJG1sKTtcclxuICAgICAgICBtYXJnaW4tbGVmdDokbWw7XHJcbiAgICAgIH1cclxuICAgICAgdGFibGV7XHJcbiAgICAgICAgLy8gdGFibGUtbGF5b3V0OiBmaXhlZDtcclxuICAgICAgICAvLyB3aWR0aDogMTAwJTtcclxuICAgICAgICB0cntcclxuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzJjMGMwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZHtcclxuICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2MyYzBjMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGg6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2MyYzBjMDtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgICAgICAgICB3aWR0aDogJG1sO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5vdXRlciB7XHJcblxyXG4gICAgICAmOmhvdmVye1xyXG5cclxuICAgICAgICAmICsgLnRhYmxlLXNsaWRlcntcclxuICAgICAgICAgIC5zbGlkZXtcclxuICAgICAgICAgICAgJi1sZWZ0LCAmLXJpZ2h0e1xyXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucm93IHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBmb250LXNpemU6IDA7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMmMwYzA7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAvLyBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYzJjMGMwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKXtcclxuICAgICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLmhpZGRlbntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRoe1xyXG4gICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB6LWluZGV4OiAyO1xyXG4gICAgfVxyXG5cclxuICAgIC50aCwgLnRke1xyXG4gICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcblxyXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE2NjBweCkge1xyXG4gICAgICAgICZ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xyXG4gICAgICAgICZ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xyXG4gICAgICAgICZ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRoLCAuY29udGVudCwgLnRke1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgfVxyXG5cclxuICAgIC5yb3cgLmNvbnRlbnQge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZvbnQtc2l6ZTogMDtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgLnRke1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB3aWR0aDogJHRkV2lkdGg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiA1MDBweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjMmMwYzA7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMHB4LCAtNTAlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5kcm9we1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcblxyXG4gICAgJi1oZWFkZXJ7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgcGFkZGluZzogLjc1cmVtIDA7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gNXB4KTtcclxuICAgICAgICByaWdodDogMTVweDtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA3NSUgNzUlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAjMjMyMzIzO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjRzO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLmV4cGFuZGVkOmFmdGVye1xyXG5cclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoMjI1ZGVnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmJ0bi1zdHJva2V7XHJcbiAgICB3aWR0aDogMjgwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG4gICAgcGFkZGluZzogMXJlbSAwO1xyXG5cclxuICAgICY6bGFzdC1vZi10eXBle1xyXG5cclxuICAgIG1hcmdpbi1sZWZ0OiAycmVtO1xyXG4gICAgfVxyXG5cclxuICAgICYucHJlc3NlZHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgICBjb2xvcjogJGNvbG9yMjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBmb3IgJGkgZnJvbSAyIHRocm91Z2ggMTUge1xyXG4gIC5jb2xzcGFuLSN7JGl9IHt3aWR0aDogJHRkV2lkdGggKiAkaSAhaW1wb3J0YW50O31cclxufVxyXG5cclxuLnRhYmxlLXNsaWRlcntcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgdG9wOiAwO1xyXG4gIGhlaWdodDogY2FsYygxMDAlIC0gMHB4KTtcclxuICB3aWR0aDogNDBweDtcclxuXHJcbiAgLnNsaWRle1xyXG4gICAgJi1sZWZ0LCAmLXJpZ2h0e1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjQpO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzO1xyXG5cclxuICAgICAgJjpiZWZvcmUsICY6YWZ0ZXJ7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNzUlLCAtNzUlKSByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICB3aWR0aDogMTRweDtcclxuICAgICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAkY29sb3I7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbGVmdCAuM3M7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuNzUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBsZWZ0OiAtMzBweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcjpiZWZvcmV7XHJcbiAgICAgICAgbGVmdDogMjBweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcjphZnRlcntcclxuICAgICAgICBsZWZ0OiA3MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1sZWZ0e1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmOmhvdmVye1xyXG4gICAgLnNsaWRle1xyXG4gICAgICAmLWxlZnQsICYtcmlnaHR7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmdhbGxlcmllc3tcclxuICBwYWRkaW5nLXRvcDogNC41cmVtO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gIC50aXRsZXtcclxuICAgIG1hcmdpbi1ib3R0b206IDIuMjVyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAucm93e1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG5cclxuICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XHJcblxyXG4gICAgJi5kby1tYWdpYyAuY29se1xyXG4gICAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDExMDBweCkgcm90YXRlWSg5MGRlZyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY29se1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLy8gZmxvYXQ6IGxlZnQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgaGVpZ2h0OiA0MS42NjY2NjY2N3Z3O1xyXG4gICAgbWF4LWhlaWdodDogOTAwcHg7XHJcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDExMDBweCkgcm90YXRlWSgwZGVnKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuOHM7XHJcbiAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcblxyXG4gICAgICAuc2hhZG93LWJne1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAubGluay1tb3Jle1xyXG4gICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpudGgtb2YtdHlwZSgyKXtcclxuICAgICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9nYWxsLXRpbGUtMS5qcGcnKSBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgfVxyXG5cclxuICAgICY6bnRoLW9mLXR5cGUoMyl7XHJcbiAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvZ2FsbC10aWxlLTIuanBnJykgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIH1cclxuXHJcbiAgICAmOm50aC1vZi10eXBlKDQpe1xyXG4gICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vaW1nL2dhbGwtdGlsZS0zLmpwZycpIGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJjpudGgtb2YtdHlwZSg1KXtcclxuICAgICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9nYWxsLXRpbGUtNC5qcGcnKSBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAudGl0bGV7XHJcbiAgICAgIGNvbG9yOiAkY29sb3IyO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAmOmhvdmVyIC5saW5rLW1vcmU6YmVmb3Jle1xyXG4gICAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXIgLmxpbmstbW9yZTphZnRlcntcclxuICAgICAgICBsZWZ0OiA3MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1lZGlhe1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1lZGlhe1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMXM7XHJcblxyXG4gICAgJi52aXNpYmxle1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG5cclxuICAgIC5ibG9ja3tcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDQxLjY0Mjg1NzE0Mjg1NzE0Mjg1NzE0Mjg1NzE0Mjg1N3Z3O1xyXG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcblxyXG4gICAgICAmLnNob3d7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5wdXNoLWZyb250e1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmcmFtZXtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgIH1cclxuICAgICAgLnlvdXR1YmV7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zaGFkb3ctYmd7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC42KTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjNzO1xyXG4gIH1cclxuXHJcbiAgLmxpbmstbW9yZXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAwcHg7IC8vIDUwcHhcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xyXG4gICAgdHJhbnNpdGlvbjogd2lkdGggLjNzO1xyXG5cclxuICAgICY6YmVmb3JlLCAmOmFmdGVye1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAyNXB4O1xyXG4gICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgd2lkdGg6IDE0cHg7XHJcbiAgICAgIGhlaWdodDogMTRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgICBib3gtc2hhZG93OiAxcHggMXB4ICRjb2xvcjI7XHJcbiAgICAgIHRyYW5zaXRpb246IGxlZnQgLjNzO1xyXG4gICAgfVxyXG5cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICBsZWZ0OiAtMzBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5saW5rLWJhY2t7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHotaW5kZXg6IDE7XHJcblxyXG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xyXG4gICAgdHJhbnNpdGlvbjogd2lkdGggLjNzO1xyXG5cclxuICAgICY6YmVmb3JlLCAmOmFmdGVye1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAyNXB4O1xyXG4gICAgICBsZWZ0OiA3MHB4O1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoMTM1ZGVnKTtcclxuICAgICAgd2lkdGg6IDE0cHg7XHJcbiAgICAgIGhlaWdodDogMTRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgICBib3gtc2hhZG93OiAxcHggMXB4ICRjb2xvcjI7XHJcbiAgICAgIHRyYW5zaXRpb246IGxlZnQgLjNzO1xyXG4gICAgfVxyXG5cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6YmVmb3Jle1xyXG4gICAgICBsZWZ0OiAtMzBweDtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyOmFmdGVye1xyXG4gICAgICBsZWZ0OiAyNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgei1pbmRleDogMTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gICAgICBjb2xvcjogJGNvbG9yMjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNsaWRlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcblxyXG4gIC5jb250cm9sc3tcclxuXHJcbiAgICAucHJldiwgLm5leHR7XHJcbiAgICAgIHRvcDogYXV0bztcclxuICAgICAgYm90dG9tOiA1JTtcclxuICAgICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5wcmV2e1xyXG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtIDYwcHgpO1xyXG4gICAgfVxyXG5cclxuICAgIC5uZXh0e1xyXG4gICAgICByaWdodDogY2FsYyg1MCUgLSA2MHB4KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jYXItY29sb3Jze1xyXG5cclxuICAub3V0ZXJ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuXHJcbiAgLnJvd3tcclxuICAgIHdpZHRoOiAyMDAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxLjJzO1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgICAmLnNob3ctcmlnaHQtdGFie1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNvbHtcclxuICAgIGZsb2F0OiBub25lO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuXHJcbiAgICBsaXtcclxuICAgICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDcuNzVyZW0gLSAyNnB4IC0gMTA1cHggLSA1MHB4KTtcclxuICAgIH1cclxuXHJcbiAgICBsaSBpbWd7XHJcbiAgICAgIG1heC13aWR0aDogODAlO1xyXG4gICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtcGFnZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAvLyBwYWRkaW5nLXRvcDogMS41JTtcclxuICAgIC8vIGhlaWdodDogMTA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgLmlubmVye1xyXG4gICAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIC8vIGJvdHRvbTogMDtcclxuICAgICAgLy8gbGVmdDogMDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgLnBhZ2UtYnRuLW91dGVye1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgd2lkdGg6IDkuMzU3MTQyODU3MTQyODU3MTQyODU3MTQyODU3MTQyOSU7XHJcbiAgICAgIG1pbi13aWR0aDogMTIwcHg7XHJcbiAgICAgIG1hcmdpbjogMCAzcHg7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICAgIC8vIHBhZGRpbmctdG9wOiAzJTtcclxuXHJcbiAgICAgICY6bnRoLWNoaWxkKDEpIGF7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzhEOEU5OCAwJSwgI0U1RTdFRiAxMDAlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpudGgtY2hpbGQoMikgYXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjMDkwNzA5IDAlLCAjNTQ1NTU5IDEwMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCgzKSBhe1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICM0OTU5NzYgMCUsICM5OGJkZDAgMTAwJSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6bnRoLWNoaWxkKDQpIGF7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzE1MmM1YSAwJSwgIzgwOTJiYyAxMDAlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpudGgtY2hpbGQoNSkgYXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjRUJFQkU5IDAlLCAjZmZmIDEwMCUpO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYXtcclxuICAgICAgLy8gcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvdHRvbTogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgbWluLWhlaWdodDogMi43ZW07XHJcbiAgICAgIC8vIHdpZHRoOiA5LjM1NzE0Mjg1NzE0Mjg1NzE0Mjg1NzE0Mjg1NzE0MjklO1xyXG4gICAgICAvLyBtYXJnaW46IDAgM3B4O1xyXG4gICAgICBwYWRkaW5nLXRvcDogMjcuNDgwOTE2MDMwNTM0MzUxMTQ1MDM4MTY3OTM4OTMxJTtcclxuICAgICAgLy8gcGFkZGluZy10b3A6IDMlO1xyXG4gICAgICAvLyBtYXJnaW4tdG9wOiAxJTtcclxuICAgICAgY29sb3I6ICRjb2xvcjI7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuMnMgbGluZWFyO1xyXG5cclxuICAgICAgJi5hY3RpdmV7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDM1JTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCgxKXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjMDkwNzA5IDAlLCAjNTQ1NTU5IDEwMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCgyKXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjODcxNjEyIDAlLCAjZmY1ZTc5IDEwMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCgzKXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjNDk1OTc2IDAlLCAjOThiZGQwIDEwMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm50aC1jaGlsZCg0KXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjMTUyYzVhIDAlLCAjODA5MmJjIDEwMCUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBwe1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgcGFkZGluZzogMCAwcmVtIC4yNXJlbTtcclxuICAgICAgICAvLyBwYWRkaW5nOiAwIC4yNXJlbSAuMjVyZW07XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5ieC13cmFwcGVyIC5ieC1jYXB0aW9ue1xyXG4gICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudDtcclxuICB9XHJcblxyXG4gIC5ieC13cmFwcGVyIC5ieC1jYXB0aW9uIHNwYW57XHJcbiAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gIH1cclxuXHJcbiAgI2NhckludGVyQ29sb3JTbHtcclxuICAgIGltZ3tcclxuICAgICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWNjZXNzb3JpZXN7XHJcblxyXG4gICYuZGVzY3JpcHRpb257XHJcbiAgICAuY29se1xyXG4gICAgICAmOmxhc3Qtb2YtdHlwZXtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNXJlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnJvd3tcclxuICAgIEBpbmNsdWRlIGNvbnRhaW5lcigpO1xyXG4gIH1cclxuXHJcbiAgLmNvbHtcclxuICAgIEBpbmNsdWRlIHNwYW4oMzUgb2YgNzAgMCk7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGV7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogc3BhbigzKTtcclxuICAgIH1cclxuXHJcbiAgICBpbWd7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGltZ3tcclxuICAgIG1heC1oZWlnaHQ6IDQwdnc7XHJcbiAgfVxyXG59XHJcblxyXG4uc2VjdGlvbi10YWJze1xyXG5cclxuICAuY29udGVudHtcclxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYzcwOTIzO1xyXG5cclxuICAgICAgLnRleHR7XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEVxdWlwbWVudCBwYWdlID09PSAqL1xyXG5cclxuLmVxdWlwbWVudHtcclxuXHJcbiAgLnVuZGVyLWNlbnRlcmVke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLnNlY3Rpb24tY29udGVudHtcclxuXHJcbiAgICAudGl0bGV7XHJcbiAgICAgIG1hcmdpbi10b3A6IDMuNzVyZW07XHJcblxyXG4gICAgICAmICsgLnRleHR7XHJcbiAgICAgICAgcHtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDEuODc1cmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmVxdWlwLW1vZHVsZXN7XHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgQGluY2x1ZGUgc3BhbigzNSBvZiA3MCAwKTtcclxuXHJcbiAgICAgICY6Zmlyc3Qtb2YtdHlwZXtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBzcGFuKDMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmxhc3Qtb2YtdHlwZXtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IHNwYW4oMyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGV4dHtcclxuXHJcbiAgICAgIHB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaDN7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmFyZ3VtZW50c3tcclxuICAgIG1hcmdpbi10b3A6IDMuNzVyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9lcXVpcG1lbnQtYmcuanBnJykgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcblxyXG4gICAgLnRpdGxle1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgZm9udC1zaXplOiAwO1xyXG5cclxuICAgICAgJiA+IHVsID4gbGl7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDMuNzVyZW07XHJcbiAgICAgICAgbWluLWhlaWdodDogMTE2cHg7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuXHJcbiAgICAgICAgJiA+IHB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMjVweDtcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxLjM3NWVtO1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiB1bHtcclxuICAgICAgICAgIHBhZGRpbmctbGVmdDogMTI1cHg7XHJcblxyXG4gICAgICAgICAgJiA+bGl7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMXJlbTtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCkge1xyXG4gICAgICAgICAgICAgICZ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcmVtO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgIHRvcDogLjczNzVlbTtcclxuICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAuNGVtO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogLjRlbTtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XHJcbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBwe1xyXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmID4gdWwgPiBsaSA+IHB7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEJvZHkgcmVwYWlyLWxpZ2h0IHBhZ2UgPT09ICovXHJcblxyXG4uYm9keS1yZXBhaXItbGlnaHR7XHJcblxyXG4gIC52aWRlb3tcclxuXHJcbiAgICBpZnJhbWV7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jb250YWN0LWluZm97XHJcbiAgcGFkZGluZy10b3A6IDMuNzVyZW07XHJcbiAgcGFkZGluZy1ib3R0b206IDQuNWVtO1xyXG5cclxuICAucm93e1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIC5jb2x7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgd2lkdGg6IHNwYW4oMTQpO1xyXG4gICAgICBtYXJnaW4tbGVmdDogc3BhbigyKTtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuYmxvY2t7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG4gIH1cclxuXHJcbiAgJi10aXRsZXtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gIH1cclxuXHJcbiAgJi10ZXh0e1xyXG4gICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgfVxyXG5cclxuICAuYnRue1xyXG4gICAgcGFkZGluZzogMXJlbSAxLjVyZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3I7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEJvZHkgcmVwYWlyIHBhZ2UgPT09ICovXHJcblxyXG4uYm9keS1yZXBhaXJ7XHJcblxyXG4gICY6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDguNzVyZW07XHJcbiAgfVxyXG5cclxuICAuZmVhdHVyZXtcclxuICAgIG1hcmdpbjogMi4yNXJlbSAwO1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG5cclxuICAgIC5jb2x7XHJcbiAgICAgIEBpbmNsdWRlIHNwYW4oMjIuNSBvZiA3MCAwKTtcclxuICAgICAgQGluY2x1ZGUgcHVzaCgxLjI1KTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiBzcGFuKDIpO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiBzcGFuKDIpO1xyXG4gICAgICBmbG9hdDogbm9uZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG5cclxuXHJcbiAgICAgICY6bnRoLW9mLXR5cGUoM24tMil7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpbWd7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuXHJcbiAgICAmLXRpdGxle1xyXG4gICAgICBtYXJnaW46IDFyZW0gMDtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgbWF4LWhlaWdodDogMS4yZW07XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJi10ZXh0e1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zbGlkZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjI1cmVtO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG5cclxuICAgIHVse1xyXG4gICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGxpe1xyXG4gICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvKiA9PT0gQ29ycG9yYXRlIHRyYWRlIHBhZ2UgPT09ICovXHJcblxyXG4uY29ycG9yYXRlLXRyYWRle1xyXG5cclxuICAuYXJndW1lbnRze1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2NvcnBvcmF0ZS1iZy5qcGdcIikgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcblxyXG4gICAgLnRpdGxle1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgbGl7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5jb2x7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogc3Bhbig3KTtcclxuXHJcbiAgICAgICY6bnRoLW9mLXR5cGUoMil7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogc3Bhbig3KTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IHNwYW4oNCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYgPiB1bCA+IGxpID4gcHt9XHJcbiAgICB9XHJcblxyXG4gICAgLnRleHR7XHJcbiAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgICBwYWRkaW5nLXRvcDogLjVyZW07XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICBhe1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gUGFydHMgcGFnZSA9PT0gKi9cclxuXHJcbi5wYXJ0c3tcclxuXHJcbiAgLmJvb2stZm9ybXtcclxuICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvcGFydHMtYmcuanBnJykgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgfVxyXG5cclxuICAuc2VjdGlvbi1jb250ZW50e1xyXG4gICAgcGFkZGluZy10b3A6IDNyZW07XHJcbiAgfVxyXG5cclxuICAudGV4dHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gICAgcHtcclxuICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zcGVjaWZpY2F0aW9uc3tcclxuICAgIHBhZGRpbmctYm90dG9tOiA4cmVtO1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cclxuICAgIGgyLnRpdGxle1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAyLjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgLmRyb3B7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IC4yNXJlbTtcclxuXHJcbiAgICAgICYtaGVhZGVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcblxyXG4gICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLml0ZW17XHJcbiAgICAgICAgcGFkZGluZzogc3BhbigxLjUpIDAgMDtcclxuXHJcbiAgICAgICAgLmltZy1vdXRlcntcclxuICAgICAgICAgIEBpbmNsdWRlIHNwYW4oMTUgb2YgNzAgMCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY29udGVudHtcclxuICAgICAgICAgIEBpbmNsdWRlIHNwYW4oNTUgb2YgNzAgMCk7XHJcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IHNwYW4oMyk7XHJcblxyXG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICAgICAgICAudGl0bGV7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAuMjVyZW07XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLnRpdGxlLCAuZGVzY3J7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IFBhcnRzIHBhZ2UgPT09ICovXHJcblxyXG4ud2FycmFudHl7XHJcblxyXG4gIC5zZWN0aW9uLWNvbnRlbnR7XHJcbiAgICAudGl0bGV7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zdWItdGl0bGV7XHJcbiAgICBtYXJnaW46IDIuNXJlbSAwIDEuNXJlbTtcclxuICAgIHB7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRleHR7XHJcblxyXG4gICAgdWx7XHJcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB9XHJcblxyXG4gICAgcCwgbGl7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gICAgfVxyXG5cclxuICAgIHVsIGxpe1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMS41cmVtO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogLjc1cmVtO1xyXG5cclxuICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLjczNzVlbTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHdpZHRoOiAuNGVtO1xyXG4gICAgICAgIGhlaWdodDogLjRlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3Ryb25ne1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRhYmxlLWRyb3B7XHJcbiAgICBwYWRkaW5nLXRvcDogMC44NzVyZW07XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNC41cmVtO1xyXG5cclxuICAgIC50ZXh0e1xyXG4gICAgICBoNHtcclxuICAgICAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IEFjY2Vzc29yaWVzIHBhZ2UgPT09ICovXHJcblxyXG4uYWNjZXNzb3JpZXN7XHJcblxyXG4gICYgPiAud3JhcHtcclxuICAgIHBhZGRpbmctYm90dG9tOiA0LjVyZW07XHJcbiAgfVxyXG5cclxuXHJcbiAgLnRleHR7XHJcbiAgICBwe1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jYXItdGl0bGV7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICB9XHJcbn0iLCIvKiA9PT0gVHJhZGUtaW4gcGFnZSA9PT0gKi9cclxuXHJcbi50cmFkZS1pbntcclxuXHJcbiAgcHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZsO1xyXG4gIH1cclxuXHJcbiAgLmFyZ3VtZW50c3tcclxuICAgIHBhZGRpbmctYm90dG9tOiA3cmVtO1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG5cclxuICAgIC5jb2x7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgbGl7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuICAgICAgICAmOm50aC1vZi10eXBlKG9kZCl7XHJcblxyXG4gICAgICAgICAgcHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMnJlbTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpe1xyXG4gICAgICAgICAgICAme1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA2NXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmID4gdWwgPiBsaSA+IHB7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA5MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRleHR7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAuMjVyZW07XHJcbiAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgICBmb250LWZhbWlseTogJGZmbDtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gUHJvVGVjdCBwYWdlID09PSAqL1xyXG5cclxuLnByb3RlY3R7XHJcblxyXG4gIHB7XHJcbiAgICBmb250LWZhbWlseTogJGZmbDtcclxuICB9XHJcblxyXG4gIC5zZWN0aW9uLWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxuICB9XHJcblxyXG4gIC5zdWItdGl0bGV7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICRjb2xvcjtcclxuICB9XHJcblxyXG4gIC5hcmd1bWVudHN7XHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICBsaXtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJiA+IHVsID4gbGkgPiBwe1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTIwcHg7XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI4MHB4KXtcclxuICAgICAgICAgICZ7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogOTBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdHJvbmd7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc2xpZGVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDhyZW07XHJcblxyXG4gICAgbGksIHVse1xyXG4gICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5jb250cm9scyAucHJldiwgLmNvbnRyb2xzIC5uZXh0e1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gQXNzaXN0YW5jZSBwYWdlID09PSAqL1xyXG5cclxuLmFzc2lzdGFuY2V7XHJcblxyXG4gIC5zZWN0aW9uLWFza3tcclxuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2Fzc2lzdGFuY2UtYmcuanBnXCIpIGNlbnRlciBuby1yZXBlYXQ7XHJcblxyXG4gICAgICBzdHJvbmd7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgLnRhYmxlLWRyb3B7XHJcblxyXG4gICAgdGFibGV7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1O1xyXG5cclxuICAgICAgdGhlYWR7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGJvZHl7XHJcbiAgICAgICAgdGQ6bm90KDpmaXJzdC1vZi10eXBlKXtcclxuICAgICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgICAgICBmb250LXNpemU6IDEuMjVlbTtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcCBie1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAtMXJlbTtcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICB9XHJcblxyXG4gICAgb2x7XHJcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDtcclxuXHJcbiAgICAgIGxpe1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAuNXJlbTtcclxuICAgICAgICBie1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6ICRmZnI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoNHtcclxuXHJcbiAgICAmLmNvbG9yZWR7XHJcbiAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgaXtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDIuMjVyZW07XHJcbiAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvZm9vdGVyLWljb24tbWFya2VyLnN2ZycpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDIuNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBhe1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMi4yNXJlbTtcclxuICAgICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoJy4uL2ltZy9mb290ZXItaWNvbi1waG9uZS5zdmcnKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAyLjVyZW07XHJcbiAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG5cclxuICAgICAgJi5tb2JpbGV7XHJcbiAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi9pbWcvaWNvbi1tb2JpbGUuc3ZnJykgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMi41cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3BhbntcclxuICAgICAgZm9udC1mYW1pbHk6ICRmZmw7XHJcbiAgICAgIGZvbnQtc2l6ZTogLjcyNzI3MjcyZW07XHJcbiAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNvbHVtbnN7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICAgY29sdW1uLWNvdW50OiAzO1xyXG4gIH1cclxuXHJcbiAgLnNlbGVjdC1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuXHJcbiAgICAuc2VsZWN0IGxpe1xyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc3BlY2lmaWNhdGlvbnN7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNnJlbTtcclxuICB9XHJcbn0iLCIvKiA9PT0gVmFjYW5jaWVzIHBhZ2UgPT09ICovXHJcblxyXG4udmFjYW5jaWVze1xyXG5cclxuICAuc3BlY2lmaWNhdGlvbnN7XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgfVxyXG5cclxuICAuZHJvcC1oZWFkZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGFibGUtZHJvcHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG5cclxuICBpbWd7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG4ub3V0LWRyb3B7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgaDR7XHJcbiAgICBmb250LWZhbWlseTogJGZmcjtcclxuICAgIGZvbnQtc2l6ZTogMS4zNzVlbTtcclxuICAgIG1hcmdpbi10b3A6IDRyZW07XHJcbiAgfVxyXG59IiwiLyogPT09IEluc3VyYW5jZSBwYWdlID09PSAqL1xyXG5cclxuLmluc3VyYW5jZXtcclxuXHJcbiAgLmFyZ3VtZW50c3tcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG5cclxuICAgIC5yb3d7XHJcbiAgICAgIGZvbnQtc2l6ZTogMDtcclxuICAgIH1cclxuXHJcbiAgICAuY29se1xyXG4gICAgICB3aWR0aDogMjUlO1xyXG4gICAgICBwYWRkaW5nOiAwIHNwYW4oMS41KTtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgbWFyZ2luLXRvcDogM3JlbTtcclxuICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuXHJcblxyXG4gICAgICAuaW1nLW91dGVye1xyXG5cclxuICAgICAgfVxyXG5cclxuICAgICAgaW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWN0aW9uLWNvbnRlbnR7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGV7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiA4cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIHB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgdWx7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICB9XHJcblxyXG4gICAgbGl7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAxLjVyZW07XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAuNzVyZW07XHJcblxyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAuNzM3NWVtO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IC40ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAuNGVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLndpdGgtaWNvbntcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDIuMjVyZW07XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uL2ltZy9mb290ZXItaWNvbi1waG9uZS5zdmdcIikgbGVmdCBjZW50ZXIgbm8tcmVwZWF0O1xyXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMi41cmVtO1xyXG4gICAgICBjb2xvcjogIzAwMDtcclxuICAgIH1cclxuXHJcbiAgICAuY29sb3JlZHtcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gQ29uc3VsdGFudHMgcGFnZSA9PT0gKi9cclxuXHJcbi5jb25zdWx0YW50c3tcclxuXHJcbiAgdWx7XHJcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gICAgZm9udC1zaXplOiAwO1xyXG4gICAgJjphZnRlcntcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY2F0ZWctbGlzdHtcclxuICAgIG1hcmdpbjogMy43NXJlbSAwO1xyXG5cclxuICAgIGxpe1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0W3R5cGU9XCJyYWRpb1wiXXtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAgICY6Y2hlY2tlZCArIGxhYmVse1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsYWJlbHtcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycztcclxuXHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLWxpc3R7XHJcblxyXG4gICAgbGl7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICB3aWR0aDogc3BhbigxNSk7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogc3BhbigzKTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNC41cmVtO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG5cclxuICAgICAgJjpudGgtb2YtdHlwZSg0bil7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnR7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAuNXJlbTtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuXHJcbiAgICAubmFtZXtcclxuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAub2NjdXBhdGlvbntcclxuICAgICAgcHtcclxuICAgICAgICBtaW4taGVpZ2h0OiAzLjE1ZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGVsc3tcclxuICAgICAgcHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAuNXJlbTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC50ZWx7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2Zvb3Rlci1pY29uLXBob25lLnN2Z1wiKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5mYXh7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2ljb24tZmF4LnN2Z1wiKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5tb2J7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1nL2ljb24tbW9iaWxlLnN2Z1wiKSAuNzUlIGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYnRue1xyXG4gICAgICBwYWRkaW5nOiAxMnB4IDMwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IFF1ZXN0aW9ucyBwYWdlID09PSAqL1xyXG5cclxuLnF1ZXN0aW9uc3tcclxuXHJcbiAgLnRpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJi1wYWdle1xyXG4gICAgcGFkZGluZy10b3A6IDdyZW07XHJcbiAgICBmb250LWZhbWlseTogJGZmbDtcclxuICB9XHJcblxyXG4gICYtaXRlbXtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzcmVtO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcclxuXHJcbiAgICAudGV4dHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jb2x7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuXHJcbiAgICAmLTF7XHJcbiAgICAgIHdpZHRoOiAxMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAmLTJ7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMjBweCk7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogc3BhbigxIG9mIDY2KTtcclxuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubmFtZXtcclxuICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gIH1cclxuXHJcbiAgLmRhdGUsIC5hbnN3ZXJ7XHJcbiAgICBjb2xvcjogIzZENkQ2RDtcclxuICB9XHJcblxyXG4gIC50b2dnbGVye1xyXG5cclxuICAgIC5mYXtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnM7XHJcbiAgICB9XHJcblxyXG4gICAgJi5zaG93aW5ne1xyXG4gICAgICAuZmF7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIC5wYWdpbmF0aW9ue1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNnJlbTtcclxuICB9XHJcblxyXG4gIC5saW5rLW1vcmV7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAmOmJlZm9yZSwgJjphZnRlcntcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMjVweDtcclxuICAgICAgbGVmdDogMjBweDtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XHJcbiAgICAgIHdpZHRoOiAxNHB4O1xyXG4gICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAkY29sb3IyO1xyXG4gICAgICB0cmFuc2l0aW9uOiBsZWZ0IC4zcztcclxuICAgIH1cclxuXHJcbiAgICAmOmJlZm9yZXtcclxuICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcjpiZWZvcmV7XHJcbiAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcjphZnRlcntcclxuICAgICAgbGVmdDogNzBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5hc2stZm9ybXtcclxuICAgIC50aXRsZXtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS1vdXRlcntcclxuICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG5cclxuICAgICAgLnRleHR7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICAgIGltZ3tcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5oYWxmLXdpZHRoe1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHdpZHRoOiBzcGFuKDE1IG9mIDMxKTtcclxuXHJcbiAgICAgICY6bnRoLW9mLXR5cGUoZXZlbil7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiQG1peGluIGNsZWFyZml4IHtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGVsbGlwc2lzIHtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcuLi4nO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiBjYWxjKDFlbSAqIDEuODc1KTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDQ1cHg7XHJcbiAgICBoZWlnaHQ6IDEuODc1ZW07XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBmcm9tKHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkpLCBjb2xvci1zdG9wKDc1JSwgd2hpdGUpKTtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgd2hpdGUgNzUlKTtcclxuICB9XHJcbn0iLCIvKiA9PT0gQnV5IGNhciBwYWdlID09PSAqL1xyXG5cclxuLmJ1eS1jYXJ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgLnNlY3Rpb24tY29udGVudHtcclxuICAgIHBhZGRpbmctYm90dG9tOiA5cmVtO1xyXG5cclxuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xyXG4gIH1cclxuXHJcbiAgLnRpdGxlLXN0ZXB7XHJcbiAgICBtYXJnaW4tdG9wOiA2cmVtO1xyXG5cclxuICAgIHB7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMC45MWVtO1xyXG4gICAgfVxyXG5cclxuICAgIHNwYW57XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNlY3Rpb24tY29udGVudCA+IC5jb2x7XHJcbiAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICYtYXtcclxuICAgICAgQGluY2x1ZGUgc3BhbigyOCBvZiA3MiAwKTtcclxuICAgIH1cclxuXHJcbiAgICAmLWJ7XHJcbiAgICAgIEBpbmNsdWRlIHNwYW4oMzYgb2YgNzIgMCk7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgcGFkZGluZy1sZWZ0OiBzcGFuKDExKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWxlY3QtY29udGFpbmVye1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICB1bHtcclxuICAgICAgei1pbmRleDogNTE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY2FyLWNvbG9yc3tcclxuXHJcblxyXG4gICAgLmNvbHtcclxuICAgICAgZmxvYXQ6IG5vbmU7XHJcblxyXG4gICAgICAuYngtY29udHJvbHN7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgbGl7XHJcblxyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmJ4LWNhcHRpb257XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgICAgICAme1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuY2FyLWNvbG9ycy1wYWdlcntcclxuICAgICAgICBoZWlnaHQ6IDIxMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgLmFzay1mb3JtIC5mb3JtLW91dGVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgLnRleHR7XHJcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiA9PT0gNDA0IHBhZ2UgPT09ICovXHJcblxyXG4ucGFnZS00MDR7XHJcblxyXG4gICYuaGVhZGVye1xyXG4gICAgcGFkZGluZzogNXJlbSAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAudGl0bGV7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAkZmZyO1xyXG4gICAgICBmb250LXNpemU6IDMyMHB4O1xyXG4gICAgICBjb2xvcjogI2E1YTVhNTtcclxuICAgIH1cclxuXHJcbiAgICAudGV4dHtcclxuXHJcbiAgICAgIHB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgYXtcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufSIsIi8qID09PSBDcmVkaXQgcGFnZSA9PT0gKi9cclxuXHJcbi5jcmVkaXR7XHJcblxyXG4gIC5uby1wYWQtdG9we1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbiAgfVxyXG5cclxuICAuZG91YmxlLXBhZC1ib3R0b217XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNy41cmVtO1xyXG4gIH1cclxuXHJcbiAgLnNlY3Rpb24tY29udGVudHtcclxuXHJcbiAgICBsaXtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDEuNzVyZW07XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAuNzVyZW07XHJcblxyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAuNzM3NWVtO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IC40ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAuNGVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjNzA5MjM7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGVsc3tcclxuXHJcbiAgICBwOmxhc3QtY2hpbGR7XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi9pbWcvZm9vdGVyLWljb24tcGhvbmUuc3ZnKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDMuMjVyZW07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGFibGUtZHJvcHtcclxuICAgIGltZ3tcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJiB0YWJsZSB0ZDpudGgtY2hpbGQobiArIDMpe1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgfVxyXG59IiwiLyogPT09IFNwZWNpYWwgb2ZmZXJzIHBhZ2UgPT09ICovXHJcblxyXG4uc3BlYy1vZmZlcnN7XHJcblxyXG4gIC5zZWN0aW9uLWNvbnRlbnR7XHJcblxyXG4gICAgJi5wYWQtYm90dG9te1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTByZW07XHJcbiAgICB9XHJcblxyXG4gICAgcDpmaXJzdC1jaGlsZHtcclxuICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuXHJcbiAgICB1bHtcclxuICAgICAgbWFyZ2luLXRvcDogMS41cmVtO1xyXG4gICAgfVxyXG4gIH1cclxuICAudGVscyBwOmxhc3QtY2hpbGQge1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKC4uL2ltZy9pY29uLW1vYmlsZS5zdmcpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAyLjVyZW07XHJcbiAgfVxyXG5cclxuICAudGFibGUtZHJvcHtcclxuICAgIGltZ3tcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLyogPT09IFNlYXJjaCByZXN1bHQgcGFnZSA9PT0gKi9cclxuXHJcbi5zZWFyY2gtcmVzdWx0e1xyXG5cclxuICBwe1xyXG4gICAgYXtcclxuICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWN0aW9uLWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNnJlbTtcclxuICB9XHJcblxyXG4gIC5yZXN1bHR7XHJcbiAgICBwYWRkaW5nLXRvcDogNC41cmVtO1xyXG5cclxuICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5zZWN0aW9ue1xyXG4gICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIGF7XHJcbiAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgfVxyXG5cclxuICAgIC5wb3N0e1xyXG4gICAgICBwYWRkaW5nLXRvcDogM3JlbTtcclxuXHJcbiAgICAgICY6bnRoLW9mLXR5cGUobis0KXtcclxuICAgICAgICAvLyBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRleHR7XHJcbiAgICAgIHB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjc1cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmJ0bntcclxuICAgICAgcGFkZGluZzogc3BhbiguNzUpIHNwYW4oMS41KTtcclxuICAgICAgY29sb3I6ICRjb2xvcjI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucGFnaW5hdGlvbntcclxuICAgIG1hcmdpbi10b3A6IDNyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xyXG5cclxuICAgIC5saW5rLW1vcmV7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgICY6YmVmb3JlLCAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDI1cHg7XHJcbiAgICAgICAgbGVmdDogMjBweDtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICB3aWR0aDogMTRweDtcclxuICAgICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggJGNvbG9yMjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IC4zcztcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXI6YmVmb3Jle1xyXG4gICAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXI6YWZ0ZXJ7XHJcbiAgICAgICAgbGVmdDogNzBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnNlY3Rpb24tdGFicyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogOXJlbTtcclxuXHJcbiAgICAuY29udGVudHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvcjtcclxuICAgIH1cclxuICB9XHJcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
/*# sourceMappingURL=data:application/json;base64, */
/* === Popups module === */
.body-locked {
  overflow: hidden; }

.popup {
  overflow-y: scroll;
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 99999;
  display: none; }
  .popup-inner {
    position: relative;
    max-width: 600px;
    margin: 15vh auto;
    padding: 65px 70px;
    background-color: #fff;
    text-align: center; }
    .popup-inner.double-width {
      max-width: 1000px; }
      .popup-inner.double-width .input-outer {
        width: 48%;
        float: left; }
        .popup-inner.double-width .input-outer:nth-of-type(even) {
          margin-left: 4%; }
  .popup.is-shown {
    display: block; }
  .popup .text {
    text-align: center;
    font-family: "LatoWebLight"; }
  .popup h2.title + .text {
    text-align: left; }
  .popup .select-container {
    text-align: left; }
  .popup input, .popup textarea {
    font-family: "LatoWebLight"; }
  .popup input:input::-webkit-input-placeholder, .popup textarea:input::-webkit-input-placeholder {
    font-family: "LatoWebLight"; }
  .popup input:input:-moz-input-placeholder, .popup textarea:input:-moz-input-placeholder {
    font-family: "LatoWebLight"; }
  .popup input:input::-moz-input-placeholder, .popup textarea:input::-moz-input-placeholder {
    font-family: "LatoWebLight"; }
  .popup input:input::-ms-input-placeholder, .popup textarea:input::-ms-input-placeholder {
    font-family: "LatoWebLight"; }
  .popup input:focus, .popup textarea:focus {
    outline: none; }
  .popup .input-outer input.error {
    border: 1px solid #c70923; }
  .popup textarea {
    min-height: 170px; }
  .popup img {
    margin-top: 1rem; }
  .popup .upload-file {
    padding-top: 2.5rem;
    text-align: left; }
    .popup .upload-file input[type="file"] {
      display: none; }
    .popup .upload-file label {
      display: inline-block;
      width: 40px;
      height: 40px;
      margin-right: 30px;
      background-color: #c70923;
      vertical-align: middle;
      border: 1px solid #c70923;
      transition: background-color .2s; }
      .popup .upload-file label .upload-img {
        width: 30px;
        display: block;
        margin: 5px auto; }
      .popup .upload-file label:hover {
        background-color: #fff; }
      .popup .upload-file label:hover .upload-img path {
        fill: #c70923; }
    .popup .upload-file p {
      display: inline-block;
      line-height: 40px;
      vertical-align: middle; }
    .popup .upload-file .file-info {
      padding-left: 70px; }
      .popup .upload-file .file-info p {
        line-height: 1.2em; }
      .popup .upload-file .file-info .name {
        display: inline-block; }
      .popup .upload-file .file-info .remove {
        position: relative;
        top: auto;
        right: auto;
        display: inline-block;
        margin-left: 5px;
        vertical-align: middle; }
      .popup .upload-file .file-info span {
        display: inline-block;
        vertical-align: middle;
        color: #c70923; }
  .popup .outer-centered {
    clear: both;
    max-width: 500px;
    margin: 0 auto;
    padding-top: 2rem; }
    .popup .outer-centered .input-outer {
      width: 100%;
      float: none;
      margin-left: 0 !important; }
    .popup .outer-centered .small {
      font-size: 12px;
      line-height: 20px;
      text-align: left; }
  .popup .forgot, .popup .btn-reg {
    display: inline-block;
    width: 100%;
    font-family: "LatoWeb";
    color: #fff; }
  .popup .btn-login {
    padding: .5rem 4rem;
    color: #fff;
    background-color: #fff; }
  .popup .forgot, .popup .btn-reg, .popup .btn-login {
    margin-bottom: 1.5rem;
    cursor: pointer; }
  .popup .btn-link {
    cursor: pointer; }
  .popup .close, .popup .remove {
    position: absolute;
    top: 20px;
    right: 20px;
    width: 30px;
    height: 30px;
    transition: background-color .3s;
    z-index: 1;
    cursor: pointer; }
  .popup .close:before, .popup .close:after, .popup .remove:before, .popup .remove:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    width: 2px;
    height: 25px;
    background-color: #c70923; }
  .popup .close:before, .popup .remove:before {
    -webkit-transform: translate(-50%, -50%) rotate(45deg);
    -ms-transform: translate(-50%, -50%) rotate(45deg);
    transform: translate(-50%, -50%) rotate(45deg); }
  .popup .close:after, .popup .remove:after {
    -webkit-transform: translate(-50%, -50%) rotate(-45deg);
    -ms-transform: translate(-50%, -50%) rotate(-45deg);
    transform: translate(-50%, -50%) rotate(-45deg); }

/* === BX-Slider === */
/** RESET AND LAYOUT
===================================*/
.bx-wrapper {
  position: relative;
  margin: 0 auto 60px;
  padding: 0;
  zoom: 1; }

.bx-wrapper img {
  max-width: 100%;
  display: block; }

/** THEME
===================================*/
.bx-wrapper .bx-viewport {
  border: 0px solid #fff;
  left: -1px;
  background: #fff;
  /*fix other elements on the page moving (on Chrome)*/
  -webkit-transform: translatez(0);
  -ms-transform: translatez(0);
  transform: translatez(0); }

.bx-wrapper .bx-pager,
.bx-wrapper .bx-controls-auto {
  position: absolute;
  bottom: -30px;
  width: 100%; }

/* LOADER */
.bx-wrapper .bx-loading {
  min-height: 50px;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2000; }

/* PAGER */
.bx-wrapper .bx-pager {
  text-align: center;
  font-size: .85em;
  font-family: Arial;
  font-weight: bold;
  color: #666;
  padding-top: 20px; }

.bx-wrapper .bx-pager .bx-pager-item,
.bx-wrapper .bx-controls-auto .bx-controls-auto-item {
  display: inline-block;
  *zoom: 1;
  *display: inline; }

.bx-wrapper .bx-pager.bx-default-pager a {
  background: #666;
  text-indent: -9999px;
  display: block;
  width: 10px;
  height: 10px;
  margin: 0 5px;
  outline: 0;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px; }

.bx-wrapper .bx-pager.bx-default-pager a:hover,
.bx-wrapper .bx-pager.bx-default-pager a.active {
  background: #000; }

/* DIRECTION CONTROLS (NEXT / PREV) */
.bx-wrapper .bx-prev {
  left: 10px;
  background: no-repeat 0 -32px; }

.bx-wrapper .bx-next {
  right: 10px;
  background: no-repeat -43px -32px; }

.bx-wrapper .bx-prev:hover {
  background-position: 0 0; }

.bx-wrapper .bx-next:hover {
  background-position: -43px 0; }

.bx-wrapper .bx-controls-direction a {
  position: absolute;
  top: 50%;
  margin-top: -16px;
  outline: 0;
  width: 32px;
  height: 32px;
  text-indent: -9999px;
  z-index: 9999; }

.bx-wrapper .bx-controls-direction a.disabled {
  display: none; }

/* AUTO CONTROLS (START / STOP) */
.bx-wrapper .bx-controls-auto {
  text-align: center; }

.bx-wrapper .bx-controls-auto .bx-start {
  display: block;
  text-indent: -9999px;
  width: 10px;
  height: 11px;
  outline: 0;
  background: -86px -11px no-repeat;
  margin: 0 3px; }

.bx-wrapper .bx-controls-auto .bx-start:hover,
.bx-wrapper .bx-controls-auto .bx-start.active {
  background-position: -86px 0; }

.bx-wrapper .bx-controls-auto .bx-stop {
  display: block;
  text-indent: -9999px;
  width: 9px;
  height: 11px;
  outline: 0;
  background: -86px -44px no-repeat;
  margin: 0 3px; }

.bx-wrapper .bx-controls-auto .bx-stop:hover,
.bx-wrapper .bx-controls-auto .bx-stop.active {
  background-position: -86px -33px; }

/* PAGER WITH AUTO-CONTROLS HYBRID LAYOUT */
.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-pager {
  text-align: left;
  width: 80%; }

.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-controls-auto {
  right: 0;
  width: 35px; }

/* IMAGE CAPTIONS */
.bx-wrapper .bx-caption {
  position: absolute;
  bottom: 0;
  left: 0;
  background: #666\9;
  background: rgba(80, 80, 80, 0.75);
  width: 100%; }

.bx-wrapper .bx-caption span {
  color: #fff;
  font-family: Arial;
  display: block;
  font-size: .85em;
  padding: 10px; }

@media all and (max-width: 640px) {
  .main-slider {
    height: auto; }
    .main-slider .additional-layer {
      padding: 0 10px; }
      .main-slider .additional-layer span {
        font-size: 20px; }
    .main-slider .swiper-slide img {
      position: static;
      -webkit-transform: translateY(0);
      -moz-transform: translateY(0);
      -ms-transform: translateY(0);
      transform: translateY(0); }
  .lang-row .lang a {
    width: 40px;
    line-height: 40px; }
  .lang-row .social a {
    font-size: 20px;
    padding: 6px 0 0 20px; }
  .brands-display {
    padding: 0 40px;
    width: 100%;
    display: block; }
    .brands-display > div {
      display: block; }
      .brands-display > div > div {
        display: block;
        width: 100%;
        border-bottom: 1px solid #e4e4e4;
        border-left: 1px solid #e4e4e4;
        border-right: 1px solid #e4e4e4;
        padding: 75px 0;
        text-align: center;
        position: relative; }
        .brands-display > div > div:first-child {
          border-top: 1px solid #e4e4e4; } }

@media all and (max-width: 540px) {
  .s-type-b .section-heading:before {
    width: 50px; } }
